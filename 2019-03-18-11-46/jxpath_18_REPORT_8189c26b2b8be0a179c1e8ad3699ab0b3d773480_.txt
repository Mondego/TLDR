NUMBER OF NEW OR CHANGED ENTITIES : 25
NUMBER OF NEW OR CHANGED TESTS : 0
NUMBER OF ENTITY TO TEST : 66
NUMBER OF TEST TO RUN : 0
TOTAL TIME REQUIRED : 1.402434163 second
======================================================
======================================================
NEW OR CHANGED ENTITIES : 


org.apache.commons.jxpath.ri.compiler.CoreOperation.ADD_PRECEDENCE
org.apache.commons.jxpath.ri.compiler.CoreOperation.COMPARE_PRECEDENCE
org.apache.commons.jxpath.ri.compiler.CoreOperationCompare.contains($java.util.Iterator$java.lang.Object)
org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression.reduce($java.lang.Object)
org.apache.commons.jxpath.ri.compiler.CoreOperation.OR_PRECEDENCE
org.apache.commons.jxpath.ri.compiler.CoreOperation.UNION_PRECEDENCE
org.apache.commons.jxpath.ri.compiler.CoreOperation.RELATIONAL_EXPR_PRECEDENCE
org.apache.commons.jxpath.ri.compiler.CoreOperation.MULTIPLY_PRECEDENCE
org.apache.commons.jxpath.ri.compiler.CoreOperationCompare.equal($org.apache.commons.jxpath.ri.EvalContext$org.apache.commons.jxpath.ri.compiler.Expression$org.apache.commons.jxpath.ri.compiler.Expression)
org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression.findMatch($java.util.Iterator$java.util.Iterator)
org.apache.commons.jxpath.ri.compiler.CoreOperationOr.getSymbol()
org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression.containsMatch($java.util.Iterator$java.lang.Object)
org.apache.commons.jxpath.ri.compiler.CoreOperationAnd.getSymbol()
org.apache.commons.jxpath.ri.compiler.CoreOperationMultiply.getSymbol()
org.apache.commons.jxpath.ri.compiler.CoreOperationUnion.getSymbol()
org.apache.commons.jxpath.ri.compiler.CoreOperation.NEGATE_PRECEDENCE
org.apache.commons.jxpath.ri.compiler.CoreOperationCompare.equal($java.lang.Object$java.lang.Object)
org.apache.commons.jxpath.ri.compiler.CoreOperationDivide.getSymbol()
org.apache.commons.jxpath.ri.compiler.CoreOperationAdd.getSymbol()
org.apache.commons.jxpath.ri.compiler.CoreOperation.AND_PRECEDENCE
org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression.compute($java.lang.Object$java.lang.Object)
org.apache.commons.jxpath.ri.compiler.CoreOperationSubtract.getSymbol()
org.apache.commons.jxpath.ri.compiler.CoreOperationNegate.getSymbol()
org.apache.commons.jxpath.ri.compiler.CoreOperationCompare.findMatch($java.util.Iterator$java.util.Iterator)
org.apache.commons.jxpath.ri.compiler.CoreOperationMod.getSymbol()
======================================================
======================================================
NEW OR CHANGED TESTS : 


======================================================
======================================================
ALL ENTITY TO TEST : 


org.apache.commons.jxpath.ri.compiler.CoreFunction.functionSubstringAfter($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionNot($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreOperation.COMPARE_PRECEDENCE
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionFormatNumber($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionName($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreOperationCompare.contains($java.util.Iterator$java.lang.Object)
org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression.reduce($java.lang.Object)
org.apache.commons.jxpath.ri.compiler.CoreOperation.toString()
org.apache.commons.jxpath.ri.compiler.CoreOperationCompare.computeValue($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.ExtensionFunction.compute($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionKey($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionFloor($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionConcat($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreOperation.MULTIPLY_PRECEDENCE
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionString($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionCount($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression.findMatch($java.util.Iterator$java.util.Iterator)
org.apache.commons.jxpath.ri.compiler.ExpressionPath.expressionPath($org.apache.commons.jxpath.ri.EvalContext$boolean)
org.apache.commons.jxpath.ri.compiler.CoreFunction.compute($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreOperationMod.computeValue($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionStartsWith($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreOperationUnion.getSymbol()
org.apache.commons.jxpath.ri.compiler.CoreOperationDivide.computeValue($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionLocalName($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression.compute($java.lang.Object$java.lang.Object)
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionCeiling($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreOperation.compute($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionNamespaceURI($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionNormalizeSpace($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreOperationUnion.computeValue($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreOperationMod.getSymbol()
org.apache.commons.jxpath.ri.compiler.CoreOperationAdd.computeValue($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreOperation.ADD_PRECEDENCE
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionStringLength($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionLang($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionNumber($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreOperation.OR_PRECEDENCE
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionBoolean($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionSubstringBefore($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionSubstring($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionID($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionTranslate($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreOperation.UNION_PRECEDENCE
org.apache.commons.jxpath.ri.compiler.CoreOperation.RELATIONAL_EXPR_PRECEDENCE
org.apache.commons.jxpath.ri.compiler.Expression.iterate($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreOperationCompare.equal($org.apache.commons.jxpath.ri.EvalContext$org.apache.commons.jxpath.ri.compiler.Expression$org.apache.commons.jxpath.ri.compiler.Expression)
org.apache.commons.jxpath.ri.compiler.CoreOperationOr.getSymbol()
org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression.containsMatch($java.util.Iterator$java.lang.Object)
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionRound($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.ExpressionPath.compute($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreOperationAnd.getSymbol()
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionContains($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreOperationMultiply.getSymbol()
org.apache.commons.jxpath.ri.compiler.CoreOperation.NEGATE_PRECEDENCE
org.apache.commons.jxpath.ri.compiler.CoreFunction.computeValue($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionSum($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreOperationCompare.equal($java.lang.Object$java.lang.Object)
org.apache.commons.jxpath.ri.compiler.CoreOperationDivide.getSymbol()
org.apache.commons.jxpath.ri.compiler.CoreOperation.AND_PRECEDENCE
org.apache.commons.jxpath.ri.compiler.CoreOperationAdd.getSymbol()
org.apache.commons.jxpath.ri.compiler.CoreOperationSubtract.computeValue($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreOperationSubtract.getSymbol()
org.apache.commons.jxpath.ri.compiler.CoreOperationNegate.getSymbol()
org.apache.commons.jxpath.ri.compiler.ExpressionPath.computeValue($org.apache.commons.jxpath.ri.EvalContext)
org.apache.commons.jxpath.ri.compiler.CoreOperationCompare.findMatch($java.util.Iterator$java.util.Iterator)
org.apache.commons.jxpath.ri.compiler.ExtensionFunction.computeValue($org.apache.commons.jxpath.ri.EvalContext)
======================================================
======================================================
ALL TESTS TO RUN : 


