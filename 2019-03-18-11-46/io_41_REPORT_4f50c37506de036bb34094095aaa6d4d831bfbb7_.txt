NUMBER OF NEW OR CHANGED ENTITIES : 26
NUMBER OF NEW OR CHANGED TESTS : 43
NUMBER OF ENTITY TO TEST : 31
NUMBER OF TEST TO RUN : 44
TOTAL TIME REQUIRED : 0.822109907 second
======================================================
======================================================
NEW OR CHANGED ENTITIES : 


org.apache.commons.io.FileSystem.IS_OS_WINDOWS
org.apache.commons.io.FileSystem.OS_NAME_WINDOWS_PREFIX
org.apache.commons.io.FileSystem.IS_OS_MAC
org.apache.commons.io.FileSystem.isLegalFileName($java.lang.CharSequence)
org.apache.commons.io.FileSystem.WINDOWS
org.apache.commons.io.FileSystem.maxPathLength
org.apache.commons.io.FileSystem.<init>($java.lang.String$int$int$int$char[]$java.lang.String[])
org.apache.commons.io.FileSystem.getReservedFileNames()
org.apache.commons.io.FileSystem.$VALUES
org.apache.commons.io.FileSystem.IS_OS_LINUX
org.apache.commons.io.FileSystem.illegalFileNameChars
org.apache.commons.io.FileSystem.<clinit>()
org.apache.commons.io.FileSystem.reservedFileNames
org.apache.commons.io.FilenameUtils.splitOnTokens($java.lang.String)
org.apache.commons.io.FileSystem.maxFileNameLength
org.apache.commons.io.FileSystem.MAC_OSX
org.apache.commons.io.FileSystem.getIllegalFileNameChars()
org.apache.commons.io.FileSystem.LINUX
org.apache.commons.io.FilenameUtils.<clinit>()
org.apache.commons.io.FileSystem.GENERIC
org.apache.commons.io.FileSystem.getMaxFileNameLength()
org.apache.commons.io.FileSystem.getMaxPathLength()
org.apache.commons.io.FileSystem.OS_NAME
org.apache.commons.io.FileSystem.isReservedFileName($java.lang.CharSequence)
org.apache.commons.io.FileSystem.toLegalFileName($java.lang.String$char)
org.apache.commons.io.FileSystem.isIllegalFileNameChar($char)
======================================================
======================================================
NEW OR CHANGED TESTS : 


org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator()
org.apache.commons.io.FilenameUtilsTestCase.testIsExtension()
org.apache.commons.io.FilenameUtilsTestCase.testEquals()
org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix_with_nullbyte()
org.apache.commons.io.FilenameUtilsTestCase.testGetPath_with_nullbyte()
org.apache.commons.io.FilenameUtilsTestCase.testInjectionFailure()
org.apache.commons.io.FilenameUtilsTestCase.testGetExtension()
org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath()
org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin()
org.apache.commons.io.FileSystemTestCase.testIsLegalName()
org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparatorUnixWin()
org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedOnSystem()
org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength()
org.apache.commons.io.FileSystemTestCase.testReplacementWithNUL()
org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToWindows()
org.apache.commons.io.FilenameUtilsTestCase.testIndexOfExtension()
org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension()
org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToSystem()
org.apache.commons.io.FilenameUtilsTestCase.testGetBaseName()
org.apache.commons.io.FilenameUtilsTestCase.testIsExtension_injection()
org.apache.commons.io.FileSystemTestCase.testSorted()
org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem()
org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248()
org.apache.commons.io.FilenameUtilsTestCase.testGetBaseName_with_nullByte()
org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray()
org.apache.commons.io.FileSystemTestCase.<init>()
org.apache.commons.io.FilenameUtilsTestCase.testConcat()
org.apache.commons.io.FilenameUtilsTestCase.testGetPathNoEndSeparator_with_null_byte()
org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized()
org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedError_IO_128()
org.apache.commons.io.FileSystemTestCase.testIsReservedFileName()
org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToUnix()
org.apache.commons.io.FilenameUtilsTestCase.testIndexOfLastSeparator()
org.apache.commons.io.FilenameUtilsTestCase.testEquals_fullControl()
org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix()
org.apache.commons.io.FilenameUtilsTestCase.testGetName()
org.apache.commons.io.FilenameUtilsTestCase.<clinit>()
org.apache.commons.io.FilenameUtilsTestCase.testNormalize_with_nullbytes()
org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection()
org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator()
org.apache.commons.io.FileSystemTestCase.testToLegalFileNameWindows()
org.apache.commons.io.FilenameUtilsTestCase.testGetPath()
org.apache.commons.io.FilenameUtilsTestCase.testGetPathNoEndSeparator()
======================================================
======================================================
ALL ENTITY TO TEST : 


org.apache.commons.io.FileSystem.IS_OS_WINDOWS
org.apache.commons.io.FileSystem.OS_NAME_WINDOWS_PREFIX
org.apache.commons.io.FileSystem.IS_OS_MAC
org.apache.commons.io.FileSystem.isLegalFileName($java.lang.CharSequence)
org.apache.commons.io.FileSystem.WINDOWS
org.apache.commons.io.FileSystem.maxPathLength
org.apache.commons.io.FileSystem.<init>($java.lang.String$int$int$int$char[]$java.lang.String[])
org.apache.commons.io.FileSystem.getReservedFileNames()
org.apache.commons.io.FileSystem.$VALUES
org.apache.commons.io.FileSystem.IS_OS_LINUX
org.apache.commons.io.FileSystem.illegalFileNameChars
org.apache.commons.io.FileSystem.<clinit>()
org.apache.commons.io.FileSystem.reservedFileNames
org.apache.commons.io.FilenameUtils.splitOnTokens($java.lang.String)
org.apache.commons.io.FileSystem.maxFileNameLength
org.apache.commons.io.FileSystem.MAC_OSX
org.apache.commons.io.FilenameUtils.isSystemWindows()
org.apache.commons.io.FileSystem.getIllegalFileNameChars()
org.apache.commons.io.FileSystem.LINUX
org.apache.commons.io.FilenameUtils.OTHER_SEPARATOR
org.apache.commons.io.IOCase.<clinit>()
org.apache.commons.io.FilenameUtils.EXTENSION_SEPARATOR_STR
org.apache.commons.io.FilenameUtils.<clinit>()
org.apache.commons.io.FileSystem.GENERIC
org.apache.commons.io.FileSystem.getMaxFileNameLength()
org.apache.commons.io.FileSystem.getMaxPathLength()
org.apache.commons.io.FileSystem.OS_NAME
org.apache.commons.io.FilenameUtils.SYSTEM_SEPARATOR
org.apache.commons.io.FileSystem.isReservedFileName($java.lang.CharSequence)
org.apache.commons.io.FileSystem.toLegalFileName($java.lang.String$char)
org.apache.commons.io.FileSystem.isIllegalFileNameChar($char)
======================================================
======================================================
ALL TESTS TO RUN : 


org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator()
org.apache.commons.io.FilenameUtilsTestCase.testIsExtension()
org.apache.commons.io.FilenameUtilsTestCase.testEquals()
org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix_with_nullbyte()
org.apache.commons.io.FilenameUtilsTestCase.testGetPath_with_nullbyte()
org.apache.commons.io.FilenameUtilsTestCase.testInjectionFailure()
org.apache.commons.io.FilenameUtilsTestCase.testGetExtension()
org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath()
org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin()
org.apache.commons.io.FileSystemTestCase.testIsLegalName()
org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparatorUnixWin()
org.apache.commons.io.FileUtilsTestCase.createCircularSymLink($java.io.File)
org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedOnSystem()
org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength()
org.apache.commons.io.FileSystemTestCase.testReplacementWithNUL()
org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToWindows()
org.apache.commons.io.FilenameUtilsTestCase.testIndexOfExtension()
org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension()
org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToSystem()
org.apache.commons.io.FilenameUtilsTestCase.testGetBaseName()
org.apache.commons.io.FilenameUtilsTestCase.testIsExtension_injection()
org.apache.commons.io.FileSystemTestCase.testSorted()
org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem()
org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248()
org.apache.commons.io.FilenameUtilsTestCase.testGetBaseName_with_nullByte()
org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray()
org.apache.commons.io.FileSystemTestCase.<init>()
org.apache.commons.io.FilenameUtilsTestCase.testConcat()
org.apache.commons.io.FilenameUtilsTestCase.testGetPathNoEndSeparator_with_null_byte()
org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized()
org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedError_IO_128()
org.apache.commons.io.FileSystemTestCase.testIsReservedFileName()
org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToUnix()
org.apache.commons.io.FilenameUtilsTestCase.testIndexOfLastSeparator()
org.apache.commons.io.FilenameUtilsTestCase.testEquals_fullControl()
org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix()
org.apache.commons.io.FilenameUtilsTestCase.testGetName()
org.apache.commons.io.FilenameUtilsTestCase.<clinit>()
org.apache.commons.io.FilenameUtilsTestCase.testNormalize_with_nullbytes()
org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection()
org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator()
org.apache.commons.io.FileSystemTestCase.testToLegalFileNameWindows()
org.apache.commons.io.FilenameUtilsTestCase.testGetPath()
org.apache.commons.io.FilenameUtilsTestCase.testGetPathNoEndSeparator()
