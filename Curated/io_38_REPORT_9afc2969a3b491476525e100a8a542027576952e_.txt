NUMBER OF NEW OR CHANGED ENTITIES : 4
NUMBER OF NEW OR CHANGED TESTS : 4
NUMBER OF ENTITY TO TEST : 23
NUMBER OF TEST TO RUN : 22
TOTAL TIME REQUIRED : 0.5543006 second
======================================================
======================================================
NEW OR CHANGED ENTITIES : 


org.apache.commons.io.input.XmlStreamReader.isAppXml($java.lang.String)
org.apache.commons.io.input.XmlStreamReader.isTextXml($java.lang.String)
org.apache.commons.io.input.XmlStreamReader.<clinit>()
org.apache.commons.io.input.XmlStreamReader.getXmlProlog($java.io.InputStream$java.lang.String)
======================================================
======================================================
NEW OR CHANGED TESTS : 


org.apache.commons.io.input.compatibility.XmlStreamReader.isTextXml($java.lang.String)
org.apache.commons.io.input.compatibility.XmlStreamReader.getXmlProlog($java.io.BufferedInputStream$java.lang.String)
org.apache.commons.io.input.compatibility.XmlStreamReader.<clinit>()
org.apache.commons.io.input.compatibility.XmlStreamReader.isAppXml($java.lang.String)
======================================================
======================================================
ALL ENTITY TO TEST : 


org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding($java.lang.String$java.lang.String$java.lang.String$java.lang.String$boolean)
org.apache.commons.io.input.XmlStreamReader.<init>($java.io.File)
org.apache.commons.io.input.XmlStreamReader.<init>($java.io.InputStream)
org.apache.commons.io.input.XmlStreamReader.BOMS
org.apache.commons.io.input.XmlStreamReader.getXmlProlog($java.io.InputStream$java.lang.String)
org.apache.commons.io.input.XmlStreamReader.getContentTypeEncoding($java.lang.String)
org.apache.commons.io.input.XmlStreamReader.doLenientDetection($java.lang.String$org.apache.commons.io.input.XmlStreamReaderException)
org.apache.commons.io.input.XmlStreamReader.CHARSET_PATTERN
org.apache.commons.io.input.XmlStreamReader.<init>($java.io.InputStream$java.lang.String$boolean)
org.apache.commons.io.input.XmlStreamReader.doRawStream($org.apache.commons.io.input.BOMInputStream$org.apache.commons.io.input.BOMInputStream$boolean)
org.apache.commons.io.input.XmlStreamReader.isAppXml($java.lang.String)
org.apache.commons.io.input.XmlStreamReader.<init>($java.io.InputStream$boolean$java.lang.String)
org.apache.commons.io.input.XmlStreamReader.XML_GUESS_BYTES
org.apache.commons.io.input.XmlStreamReader.isTextXml($java.lang.String)
org.apache.commons.io.input.XmlStreamReader.<init>($java.net.URLConnection$java.lang.String)
org.apache.commons.io.input.XmlStreamReader.<clinit>()
org.apache.commons.io.input.XmlStreamReader.<init>($java.io.InputStream$java.lang.String$boolean$java.lang.String)
org.apache.commons.io.input.XmlStreamReader.<init>($java.io.InputStream$java.lang.String)
org.apache.commons.io.input.XmlStreamReader.ENCODING_PATTERN
org.apache.commons.io.output.XmlStreamWriter.<clinit>()
org.apache.commons.io.input.XmlStreamReader.<init>($java.io.InputStream$boolean)
org.apache.commons.io.input.XmlStreamReader.<init>($java.net.URL)
org.apache.commons.io.input.XmlStreamReader.doHttpStream($org.apache.commons.io.input.BOMInputStream$org.apache.commons.io.input.BOMInputStream$java.lang.String$boolean)
======================================================
======================================================
ALL TESTS TO RUN : 


org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient($java.lang.String$java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkTextXml($boolean$java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf32Le()
org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomInvalid($java.lang.String)
org.apache.commons.io.input.compatibility.XmlStreamReader.getXmlProlog($java.io.BufferedInputStream$java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid($java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid($java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkAppXml($boolean$java.lang.String)
org.apache.commons.io.input.compatibility.XmlStreamReader.<clinit>()
org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf32Be()
org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.compatibility.XmlStreamReader.isTextXml($java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeEncoding($java.lang.String$java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding($java.lang.String$java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testRawBomValid($java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest$MockXmlStreamReader.<init>($java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError($java.lang.String$boolean$java.lang.String$java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.compatibility.XmlStreamReader.isAppXml($java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest.testRawContent()
