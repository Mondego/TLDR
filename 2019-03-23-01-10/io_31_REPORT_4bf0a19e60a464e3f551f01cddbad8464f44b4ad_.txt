NUMBER OF NEW OR CHANGED ENTITIES : 14
NUMBER OF NEW OR CHANGED TESTS : 11
NUMBER OF ENTITY TO TEST : 14
NUMBER OF TEST TO RUN : 11
TOTAL TIME REQUIRED : 0.585772767 second
======================================================
======================================================
NEW OR CHANGED ENTITIES : 


org.apache.commons.io.input.CharSequenceReader.close()
org.apache.commons.io.input.CharSequenceReader.idx
org.apache.commons.io.input.CharSequenceReader.markSupported()
org.apache.commons.io.input.CharSequenceReader.mark
org.apache.commons.io.input.CharSequenceReader.<clinit>()
org.apache.commons.io.input.CharSequenceReader.skip($long)
org.apache.commons.io.input.CharSequenceReader.charSequence
org.apache.commons.io.input.CharSequenceReader.toString()
org.apache.commons.io.input.CharSequenceReader.read()
org.apache.commons.io.input.CharSequenceReader.reset()
org.apache.commons.io.input.CharSequenceReader.<init>($java.lang.CharSequence)
org.apache.commons.io.input.CharSequenceReader.mark($int)
org.apache.commons.io.input.CharSequenceReader.read($char[]$int$int)
org.apache.commons.io.input.CharSequenceReader.EMPTY_BUILDER
======================================================
======================================================
NEW OR CHANGED TESTS : 


org.apache.commons.io.input.CharSequenceReaderTest.testMarkSupported()
org.apache.commons.io.input.CharSequenceReaderTest.<clinit>()
org.apache.commons.io.input.CharSequenceReaderTest.<init>($java.lang.String)
org.apache.commons.io.input.CharSequenceReaderTest.testMark()
org.apache.commons.io.input.CharSequenceReaderTest.testRead()
org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion()
org.apache.commons.io.input.CharSequenceReaderTest.testClose()
org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray()
org.apache.commons.io.input.CharSequenceReaderTest.checkArray($char[]$char[])
org.apache.commons.io.input.CharSequenceReaderTest.checkRead($java.io.Reader$java.lang.String)
org.apache.commons.io.input.CharSequenceReaderTest.testSkip()
======================================================
======================================================
ALL ENTITY TO TEST : 


org.apache.commons.io.input.CharSequenceReader.close()
org.apache.commons.io.input.CharSequenceReader.idx
org.apache.commons.io.input.CharSequenceReader.markSupported()
org.apache.commons.io.input.CharSequenceReader.mark
org.apache.commons.io.input.CharSequenceReader.<clinit>()
org.apache.commons.io.input.CharSequenceReader.skip($long)
org.apache.commons.io.input.CharSequenceReader.charSequence
org.apache.commons.io.input.CharSequenceReader.toString()
org.apache.commons.io.input.CharSequenceReader.read()
org.apache.commons.io.input.CharSequenceReader.reset()
org.apache.commons.io.input.CharSequenceReader.<init>($java.lang.CharSequence)
org.apache.commons.io.input.CharSequenceReader.mark($int)
org.apache.commons.io.input.CharSequenceReader.read($char[]$int$int)
org.apache.commons.io.input.CharSequenceReader.EMPTY_BUILDER
======================================================
======================================================
ALL TESTS TO RUN : 


org.apache.commons.io.input.CharSequenceReaderTest.testMarkSupported()
org.apache.commons.io.input.CharSequenceReaderTest.<clinit>()
org.apache.commons.io.input.CharSequenceReaderTest.<init>($java.lang.String)
org.apache.commons.io.input.CharSequenceReaderTest.testMark()
org.apache.commons.io.input.CharSequenceReaderTest.testRead()
org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion()
org.apache.commons.io.input.CharSequenceReaderTest.testClose()
org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray()
org.apache.commons.io.input.CharSequenceReaderTest.checkArray($char[]$char[])
org.apache.commons.io.input.CharSequenceReaderTest.checkRead($java.io.Reader$java.lang.String)
org.apache.commons.io.input.CharSequenceReaderTest.testSkip()
