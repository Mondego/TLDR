NUMBER OF NEW OR CHANGED ENTITIES : 37
NUMBER OF NEW OR CHANGED TESTS : 0
NUMBER OF ENTITY TO TEST : 52
NUMBER OF TEST TO RUN : 32
TOTAL TIME REQUIRED : 0.634107216 second
======================================================
======================================================
NEW OR CHANGED ENTITIES : 


org.apache.commons.io.filefilter.WildcardFilter.wildcards
org.apache.commons.io.filefilter.PrefixFileFilter.accept($java.io.File)
org.apache.commons.io.filefilter.SuffixFileFilter.<init>($java.lang.String$org.apache.commons.io.IOCase)
org.apache.commons.io.filefilter.DelegateFileFilter.toString()
org.apache.commons.io.filefilter.SuffixFileFilter.<init>($java.lang.String)
org.apache.commons.io.filefilter.NotFileFilter.filter
org.apache.commons.io.filefilter.SizeFileFilter.size
org.apache.commons.io.filefilter.PrefixFileFilter.<init>($java.lang.String[]$org.apache.commons.io.IOCase)
org.apache.commons.io.filefilter.DelegateFileFilter.<init>($java.io.FileFilter)
org.apache.commons.io.filefilter.PrefixFileFilter.accept($java.io.File$java.lang.String)
org.apache.commons.io.filefilter.DelegateFileFilter.<init>($java.io.FilenameFilter)
org.apache.commons.io.filefilter.SuffixFileFilter.accept($java.io.File)
org.apache.commons.io.filefilter.SuffixFileFilter.accept($java.io.File$java.lang.String)
org.apache.commons.io.filefilter.PrefixFileFilter.<init>($java.lang.String$org.apache.commons.io.IOCase)
org.apache.commons.io.filefilter.NameFileFilter.caseSensitivity
org.apache.commons.io.filefilter.PrefixFileFilter.<init>($java.util.List$org.apache.commons.io.IOCase)
org.apache.commons.io.filefilter.DelegateFileFilter.fileFilter
org.apache.commons.io.filefilter.RegexFileFilter.pattern
org.apache.commons.io.filefilter.PrefixFileFilter.caseSensitivity
org.apache.commons.io.filefilter.DelegateFileFilter.filenameFilter
org.apache.commons.io.filefilter.SizeFileFilter.acceptLarger
org.apache.commons.io.filefilter.PrefixFileFilter.<init>($java.lang.String[])
org.apache.commons.io.filefilter.WildcardFileFilter.wildcards
org.apache.commons.io.filefilter.PrefixFileFilter.prefixes
org.apache.commons.io.filefilter.SuffixFileFilter.<init>($java.util.List)
org.apache.commons.io.filefilter.AgeFileFilter.acceptOlder
org.apache.commons.io.filefilter.AgeFileFilter.cutoff
org.apache.commons.io.filefilter.DelegateFileFilter.accept($java.io.File)
org.apache.commons.io.filefilter.SuffixFileFilter.<init>($java.lang.String[])
org.apache.commons.io.filefilter.WildcardFileFilter.caseSensitivity
org.apache.commons.io.filefilter.NameFileFilter.names
org.apache.commons.io.filefilter.SuffixFileFilter.caseSensitivity
org.apache.commons.io.filefilter.SuffixFileFilter.<init>($java.util.List$org.apache.commons.io.IOCase)
org.apache.commons.io.filefilter.SuffixFileFilter.<init>($java.lang.String[]$org.apache.commons.io.IOCase)
org.apache.commons.io.filefilter.SuffixFileFilter.suffixes
org.apache.commons.io.filefilter.PrefixFileFilter.<init>($java.lang.String)
org.apache.commons.io.filefilter.PrefixFileFilter.<init>($java.util.List)
======================================================
======================================================
NEW OR CHANGED TESTS : 


======================================================
======================================================
ALL ENTITY TO TEST : 


org.apache.commons.io.filefilter.AbstractFileFilter.accept($java.io.File)
org.apache.commons.io.filefilter.SuffixFileFilter.<init>($java.lang.String$org.apache.commons.io.IOCase)
org.apache.commons.io.filefilter.DelegateFileFilter.toString()
org.apache.commons.io.filefilter.SuffixFileFilter.<init>($java.lang.String)
org.apache.commons.io.filefilter.NotFileFilter.filter
org.apache.commons.io.filefilter.SizeFileFilter.size
org.apache.commons.io.filefilter.PrefixFileFilter.<init>($java.lang.String[]$org.apache.commons.io.IOCase)
org.apache.commons.io.filefilter.PrefixFileFilter.accept($java.io.File$java.lang.String)
org.apache.commons.io.filefilter.PrefixFileFilter.toString()
org.apache.commons.io.filefilter.SuffixFileFilter.toString()
org.apache.commons.io.filefilter.SuffixFileFilter.accept($java.io.File$java.lang.String)
org.apache.commons.io.filefilter.NameFileFilter.caseSensitivity
org.apache.commons.io.filefilter.AndFileFilter.accept($java.io.File)
org.apache.commons.io.filefilter.RegexFileFilter.pattern
org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter($java.io.FilenameFilter)
org.apache.commons.io.filefilter.PrefixFileFilter.caseSensitivity
org.apache.commons.io.filefilter.AbstractFileFilter.accept($java.io.File$java.lang.String)
org.apache.commons.io.filefilter.DelegateFileFilter.filenameFilter
org.apache.commons.io.filefilter.PrefixFileFilter.prefixes
org.apache.commons.io.filefilter.SuffixFileFilter.<init>($java.util.List)
org.apache.commons.io.filefilter.DelegateFileFilter.accept($java.io.File)
org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter($java.lang.String)
org.apache.commons.io.filefilter.WildcardFileFilter.caseSensitivity
org.apache.commons.io.filefilter.NameFileFilter.names
org.apache.commons.io.filefilter.SuffixFileFilter.caseSensitivity
org.apache.commons.io.filefilter.AndFileFilter.accept($java.io.File$java.lang.String)
org.apache.commons.io.filefilter.SuffixFileFilter.<init>($java.lang.String[]$org.apache.commons.io.IOCase)
org.apache.commons.io.filefilter.WildcardFilter.wildcards
org.apache.commons.io.filefilter.PrefixFileFilter.accept($java.io.File)
org.apache.commons.io.filefilter.NotFileFilter.accept($java.io.File$java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter($java.lang.String)
org.apache.commons.io.filefilter.DelegateFileFilter.<init>($java.io.FileFilter)
org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter($java.io.FileFilter)
org.apache.commons.io.filefilter.SuffixFileFilter.accept($java.io.File)
org.apache.commons.io.filefilter.DelegateFileFilter.<init>($java.io.FilenameFilter)
org.apache.commons.io.filefilter.PrefixFileFilter.<init>($java.lang.String$org.apache.commons.io.IOCase)
org.apache.commons.io.FileUtils.listFiles($java.io.File$java.lang.String[]$boolean)
org.apache.commons.io.FileUtils.iterateFiles($java.io.File$java.lang.String[]$boolean)
org.apache.commons.io.filefilter.PrefixFileFilter.<init>($java.util.List$org.apache.commons.io.IOCase)
org.apache.commons.io.filefilter.DelegateFileFilter.fileFilter
org.apache.commons.io.filefilter.DelegateFileFilter.accept($java.io.File$java.lang.String)
org.apache.commons.io.filefilter.SizeFileFilter.acceptLarger
org.apache.commons.io.filefilter.PrefixFileFilter.<init>($java.lang.String[])
org.apache.commons.io.filefilter.WildcardFileFilter.wildcards
org.apache.commons.io.filefilter.AgeFileFilter.acceptOlder
org.apache.commons.io.filefilter.AgeFileFilter.cutoff
org.apache.commons.io.filefilter.SuffixFileFilter.<init>($java.lang.String[])
org.apache.commons.io.filefilter.SuffixFileFilter.<init>($java.util.List$org.apache.commons.io.IOCase)
org.apache.commons.io.filefilter.NotFileFilter.accept($java.io.File)
org.apache.commons.io.filefilter.SuffixFileFilter.suffixes
org.apache.commons.io.filefilter.PrefixFileFilter.<init>($java.lang.String)
org.apache.commons.io.filefilter.PrefixFileFilter.<init>($java.util.List)
======================================================
======================================================
ALL TESTS TO RUN : 


org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive()
org.apache.commons.io.filefilter.FileFilterTestCase.testFiles()
org.apache.commons.io.filefilter.FileFilterTestCase.testDelegateFileFilter()
org.apache.commons.io.filefilter.FileFilterTestCase.testOr()
org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFileFiltering($int$org.apache.commons.io.filefilter.IOFileFilter$java.io.File$boolean)
org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter()
org.apache.commons.io.filefilter.FileFilterTestCase.testCanWrite()
org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware()
org.apache.commons.io.filefilter.FileFilterTestCase.testAnd()
org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly()
org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFiltering($int$org.apache.commons.io.filefilter.IOFileFilter$java.io.File$boolean)
org.apache.commons.io.filefilter.FileFilterTestCase.testHidden()
org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension()
org.apache.commons.io.filefilter.FileFilterTestCase.testNot()
org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive()
org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter()
org.apache.commons.io.filefilter.FileFilterTestCase.testTrue()
org.apache.commons.io.filefilter.FileFilterTestCase.testRegex()
org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering($org.apache.commons.io.filefilter.IOFileFilter$java.io.File$boolean)
org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFilenameFiltering($int$org.apache.commons.io.filefilter.IOFileFilter$java.io.File$boolean)
org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix()
org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard()
org.apache.commons.io.filefilter.FileFilterTestCase.testFalse()
org.apache.commons.io.filefilter.FileFilterTestCase.testCanRead()
org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty()
org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix()
org.apache.commons.io.filefilter.FileFilterTestCase.testDirectory()
org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly()
