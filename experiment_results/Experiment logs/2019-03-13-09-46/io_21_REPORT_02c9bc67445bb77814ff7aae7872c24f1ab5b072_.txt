NUMBER OF NEW OR CHANGED ENTITIES : 12
NUMBER OF NEW OR CHANGED TESTS : 14
NUMBER OF ENTITY TO TEST : 34
NUMBER OF TEST TO RUN : 16
TOTAL TIME REQUIRED : 0.606018417 second
======================================================
======================================================
NEW OR CHANGED ENTITIES : 


org.apache.commons.io.filefilter.WildcardFileFilter.<init>($java.lang.String)
org.apache.commons.io.FilenameUtils.<clinit>()
org.apache.commons.io.filefilter.WildcardFileFilter.<init>($java.lang.String$org.apache.commons.io.IOCase)
org.apache.commons.io.filefilter.WildcardFileFilter.<init>($java.lang.String[])
org.apache.commons.io.filefilter.WildcardFileFilter.<init>($java.util.List)
org.apache.commons.io.filefilter.WildcardFileFilter.<init>($java.util.List$org.apache.commons.io.IOCase)
org.apache.commons.io.filefilter.WildcardFileFilter.accept($java.io.File)
org.apache.commons.io.filefilter.WildcardFileFilter.<init>($java.lang.String[]$org.apache.commons.io.IOCase)
org.apache.commons.io.filefilter.WildcardFileFilter.toString()
org.apache.commons.io.FilenameUtils.splitOnTokens($java.lang.String)
org.apache.commons.io.FileUtils.<clinit>()
org.apache.commons.io.filefilter.WildcardFileFilter.accept($java.io.File$java.lang.String)
======================================================
======================================================
NEW OR CHANGED TESTS : 


org.apache.commons.io.input.ClassLoaderObjectInputStreamTest$Test.hashCode()
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.xtestExpected()
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.xtestPrimitiveLong()
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.xtestLong()
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals($java.lang.Object[]$java.lang.Object[])
org.apache.commons.io.FilenameUtilsWildcardTestCase.testLocaleIndependence()
org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch2()
org.apache.commons.io.FilenameUtilsWildcardTestCase.<clinit>()
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.xtestResolveProxyClass()
org.apache.commons.io.FilenameUtilsWildcardTestCase.test_IO_246()
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest$Test.equals($java.lang.Object)
org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens()
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch($java.lang.String$java.lang.String$boolean)
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testString()
======================================================
======================================================
ALL ENTITY TO TEST : 


org.apache.commons.io.FileUtils.ONE_MB_BI
org.apache.commons.io.filefilter.WildcardFileFilter.<init>($java.lang.String$org.apache.commons.io.IOCase)
org.apache.commons.io.filefilter.WildcardFileFilter.<init>($java.lang.String[])
org.apache.commons.io.FileUtils.UTF8
org.apache.commons.io.filefilter.WildcardFileFilter.<init>($java.util.List$org.apache.commons.io.IOCase)
org.apache.commons.io.filefilter.WildcardFileFilter.toString()
org.apache.commons.io.FilenameUtils.splitOnTokens($java.lang.String)
org.apache.commons.io.FilenameUtils.isSystemWindows()
org.apache.commons.io.monitor.FileAlterationMonitor.run()
org.apache.commons.io.FileUtils.ONE_ZB
org.apache.commons.io.FilenameUtils.OTHER_SEPARATOR
org.apache.commons.io.IOCase.<clinit>()
org.apache.commons.io.FilenameUtils.EXTENSION_SEPARATOR_STR
org.apache.commons.io.filefilter.WildcardFileFilter.<init>($java.lang.String)
org.apache.commons.io.FileUtils.ONE_KB_BI
org.apache.commons.io.FileUtils.EMPTY_FILE_ARRAY
org.apache.commons.io.FilenameUtils.<clinit>()
org.apache.commons.io.filefilter.WildcardFileFilter.wildcards
org.apache.commons.io.FileUtils.ONE_EB_BI
org.apache.commons.io.FileUtils.ONE_PB_BI
org.apache.commons.io.FileUtils.ONE_TB_BI
org.apache.commons.io.filefilter.WildcardFileFilter.<init>($java.util.List)
org.apache.commons.io.FileUtils.ONE_GB_BI
org.apache.commons.io.filefilter.WildcardFileFilter.accept($java.io.File)
org.apache.commons.io.monitor.FileAlterationObserver.listFiles($java.io.File)
org.apache.commons.io.filefilter.WildcardFileFilter.<init>($java.lang.String[]$org.apache.commons.io.IOCase)
org.apache.commons.io.FileUtils.decodeUrl($java.lang.String)
org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify()
org.apache.commons.io.filefilter.WildcardFileFilter.caseSensitivity
org.apache.commons.io.FilenameUtils.SYSTEM_SEPARATOR
org.apache.commons.io.FileUtils.<clinit>()
org.apache.commons.io.FileUtils.ONE_YB
org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify($org.apache.commons.io.monitor.FileEntry$org.apache.commons.io.monitor.FileEntry[]$java.io.File[])
org.apache.commons.io.filefilter.WildcardFileFilter.accept($java.io.File$java.lang.String)
======================================================
======================================================
ALL TESTS TO RUN : 


org.apache.commons.io.input.ClassLoaderObjectInputStreamTest$Test.hashCode()
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.xtestExpected()
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.xtestPrimitiveLong()
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.xtestLong()
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals($java.lang.Object[]$java.lang.Object[])
org.apache.commons.io.FilenameUtilsWildcardTestCase.testLocaleIndependence()
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch2()
org.apache.commons.io.FilenameUtilsWildcardTestCase.<clinit>()
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.xtestResolveProxyClass()
org.apache.commons.io.FilenameUtilsWildcardTestCase.test_IO_246()
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest$Test.equals($java.lang.Object)
org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens()
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch($java.lang.String$java.lang.String$boolean)
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testString()
org.apache.commons.io.FileUtilsTestCase.createCircularSymLink($java.io.File)
