NUMBER OF NEW OR CHANGED ENTITIES : 66
NUMBER OF NEW OR CHANGED TESTS : 33
NUMBER OF ENTITY TO TEST : 69
NUMBER OF TEST TO RUN : 33
TOTAL TIME REQUIRED : 0.896295597 second
======================================================
======================================================
NEW OR CHANGED ENTITIES : 


org.apache.commons.io.input.BoundedReader.reset()
org.apache.commons.io.filefilter.FalseFileFilter.serialVersionUID
org.apache.commons.io.filefilter.EmptyFileFilter.serialVersionUID
org.apache.commons.io.input.BoundedReader.markedAt
org.apache.commons.io.filefilter.WildcardFilter.serialVersionUID
org.apache.commons.io.input.UnixLineEndingInputStream.eofGame()
org.apache.commons.io.input.BoundedReader.INVALID
org.apache.commons.io.input.BoundedReader.readAheadLimit
org.apache.commons.io.input.WindowsLineEndingInputStream.read()
org.apache.commons.io.filefilter.AgeFileFilter.serialVersionUID
org.apache.commons.io.input.UnixLineEndingInputStream.slashNSeen
org.apache.commons.io.input.BoundedReader.read()
org.apache.commons.io.monitor.FileEntry.serialVersionUID
org.apache.commons.io.input.WindowsLineEndingInputStream.readWithUpdate()
org.apache.commons.io.filefilter.RegexFileFilter.serialVersionUID
org.apache.commons.io.input.UnixLineEndingInputStream.target
org.apache.commons.io.filefilter.SizeFileFilter.serialVersionUID
org.apache.commons.io.input.WindowsLineEndingInputStream.close()
org.apache.commons.io.filefilter.DirectoryFileFilter.serialVersionUID
org.apache.commons.io.input.WindowsLineEndingInputStream.eofSeen
org.apache.commons.io.filefilter.FileFileFilter.serialVersionUID
org.apache.commons.io.input.WindowsLineEndingInputStream.slashNSeen
org.apache.commons.io.comparator.SizeFileComparator.serialVersionUID
org.apache.commons.io.input.BoundedReader.read($char[]$int$int)
org.apache.commons.io.comparator.CompositeFileComparator.serialVersionUID
org.apache.commons.io.input.BoundedReader.maxCharsFromTargetReader
org.apache.commons.io.input.UnixLineEndingInputStream.<init>($java.io.InputStream$boolean)
org.apache.commons.io.filefilter.TrueFileFilter.serialVersionUID
org.apache.commons.io.input.WindowsLineEndingInputStream.slashRSeen
org.apache.commons.io.filefilter.PrefixFileFilter.serialVersionUID
org.apache.commons.io.input.WindowsLineEndingInputStream.injectSlashN
org.apache.commons.io.filefilter.NotFileFilter.serialVersionUID
org.apache.commons.io.input.CharSequenceReader.serialVersionUID
org.apache.commons.io.input.UnixLineEndingInputStream.readWithUpdate()
org.apache.commons.io.comparator.ReverseComparator.serialVersionUID
org.apache.commons.io.comparator.DirectoryFileComparator.serialVersionUID
org.apache.commons.io.input.BoundedReader.target
org.apache.commons.io.input.WindowsLineEndingInputStream.target
org.apache.commons.io.comparator.NameFileComparator.serialVersionUID
org.apache.commons.io.input.BoundedReader.mark($int)
org.apache.commons.io.comparator.ExtensionFileComparator.serialVersionUID
org.apache.commons.io.filefilter.AndFileFilter.serialVersionUID
org.apache.commons.io.monitor.FileAlterationObserver.serialVersionUID
org.apache.commons.io.comparator.DefaultFileComparator.serialVersionUID
org.apache.commons.io.filefilter.HiddenFileFilter.serialVersionUID
org.apache.commons.io.filefilter.WildcardFileFilter.serialVersionUID
org.apache.commons.io.comparator.PathFileComparator.serialVersionUID
org.apache.commons.io.input.UnixLineEndingInputStream.eofSeen
org.apache.commons.io.filefilter.CanWriteFileFilter.serialVersionUID
org.apache.commons.io.input.WindowsLineEndingInputStream.eofGame()
org.apache.commons.io.input.UnixLineEndingInputStream.close()
org.apache.commons.io.filefilter.OrFileFilter.serialVersionUID
org.apache.commons.io.output.StringBuilderWriter.serialVersionUID
org.apache.commons.io.input.UnixLineEndingInputStream.read()
org.apache.commons.io.input.WindowsLineEndingInputStream.ensureLineFeedAtEndOfFile
org.apache.commons.io.comparator.LastModifiedFileComparator.serialVersionUID
org.apache.commons.io.input.BoundedReader.charsRead
org.apache.commons.io.input.BoundedReader.close()
org.apache.commons.io.input.BoundedReader.<init>($java.io.Reader$int)
org.apache.commons.io.filefilter.NameFileFilter.serialVersionUID
org.apache.commons.io.input.WindowsLineEndingInputStream.<init>($java.io.InputStream$boolean)
org.apache.commons.io.filefilter.SuffixFileFilter.serialVersionUID
org.apache.commons.io.FileSystemUtils.<clinit>()
org.apache.commons.io.input.UnixLineEndingInputStream.ensureLineFeedAtEndOfFile
org.apache.commons.io.filefilter.DelegateFileFilter.serialVersionUID
org.apache.commons.io.filefilter.CanReadFileFilter.serialVersionUID
======================================================
======================================================
NEW OR CHANGED TESTS : 


org.apache.commons.io.input.UnixLineEndingInputStreamTest.inTheMiddleOfTheLine()
org.apache.commons.io.input.BoundedReaderTest.shortReader()
org.apache.commons.io.input.BoundedReaderTest.closeTest()
org.apache.commons.io.input.UnixLineEndingInputStreamTest.retainLineFeed()
org.apache.commons.io.input.UnixLineEndingInputStreamTest.multipleBlankLines()
org.apache.commons.io.FileUtilsTestCase.testDeleteDirectoryWithNonDirectory()
org.apache.commons.io.input.WindowsLineEndingInputStreamTest.malformed()
org.apache.commons.io.input.UnixLineEndingInputStreamTest.malformed()
org.apache.commons.io.input.UnixLineEndingInputStreamTest.<init>()
org.apache.commons.io.input.BoundedReaderTest.readMulti()
org.apache.commons.io.input.WindowsLineEndingInputStreamTest.retainLineFeed()
org.apache.commons.io.input.WindowsLineEndingInputStreamTest.roundtrip($java.lang.String)
org.apache.commons.io.input.BoundedReaderTest.readMultiWithOffset()
org.apache.commons.io.input.WindowsLineEndingInputStreamTest.<init>()
org.apache.commons.io.input.UnixLineEndingInputStreamTest.simpleString()
org.apache.commons.io.input.WindowsLineEndingInputStreamTest.inTheMiddleOfTheLine()
org.apache.commons.io.input.UnixLineEndingInputStreamTest.roundtrip($java.lang.String)
org.apache.commons.io.input.WindowsLineEndingInputStreamTest.roundtrip($java.lang.String$boolean)
org.apache.commons.io.input.BoundedReaderTest.markResetMarkMore()
org.apache.commons.io.input.BoundedReaderTest.skipTest()
org.apache.commons.io.input.BoundedReaderTest.readTillEnd()
org.apache.commons.io.input.WindowsLineEndingInputStreamTest.linuxLinefeeds()
org.apache.commons.io.input.BoundedReaderTest.markResetWithMarkOutsideBoundedReaderMaxAndInitialOffset()
org.apache.commons.io.input.UnixLineEndingInputStreamTest.roundtrip($java.lang.String$boolean)
org.apache.commons.io.input.BoundedReaderTest.markReset()
org.apache.commons.io.input.BoundedReaderTest$1.close()
org.apache.commons.io.input.BoundedReaderTest.<init>()
org.apache.commons.io.input.WindowsLineEndingInputStreamTest.simpleString()
org.apache.commons.io.input.WindowsLineEndingInputStreamTest.multipleBlankLines()
org.apache.commons.io.input.BoundedReaderTest.markResetWithMarkOutsideBoundedReaderMax()
org.apache.commons.io.input.BoundedReaderTest.markResetFromOffset1()
org.apache.commons.io.input.WindowsLineEndingInputStreamTest.twoLinesAtEnd()
org.apache.commons.io.input.UnixLineEndingInputStreamTest.twoLinesAtEnd()
======================================================
======================================================
ALL ENTITY TO TEST : 


org.apache.commons.io.input.BoundedReader.reset()
org.apache.commons.io.filefilter.FalseFileFilter.serialVersionUID
org.apache.commons.io.filefilter.EmptyFileFilter.serialVersionUID
org.apache.commons.io.input.BoundedReader.markedAt
org.apache.commons.io.filefilter.WildcardFilter.serialVersionUID
org.apache.commons.io.input.UnixLineEndingInputStream.eofGame()
org.apache.commons.io.input.BoundedReader.INVALID
org.apache.commons.io.input.BoundedReader.readAheadLimit
org.apache.commons.io.input.WindowsLineEndingInputStream.read()
org.apache.commons.io.filefilter.AgeFileFilter.serialVersionUID
org.apache.commons.io.input.UnixLineEndingInputStream.slashNSeen
org.apache.commons.io.input.BoundedReader.read()
org.apache.commons.io.monitor.FileEntry.serialVersionUID
org.apache.commons.io.input.WindowsLineEndingInputStream.readWithUpdate()
org.apache.commons.io.filefilter.RegexFileFilter.serialVersionUID
org.apache.commons.io.input.UnixLineEndingInputStream.target
org.apache.commons.io.filefilter.SizeFileFilter.serialVersionUID
org.apache.commons.io.input.WindowsLineEndingInputStream.close()
org.apache.commons.io.filefilter.DirectoryFileFilter.serialVersionUID
org.apache.commons.io.input.WindowsLineEndingInputStream.eofSeen
org.apache.commons.io.filefilter.FileFileFilter.serialVersionUID
org.apache.commons.io.input.WindowsLineEndingInputStream.slashNSeen
org.apache.commons.io.comparator.SizeFileComparator.serialVersionUID
org.apache.commons.io.input.BoundedReader.read($char[]$int$int)
org.apache.commons.io.FileSystemUtils.OS
org.apache.commons.io.comparator.CompositeFileComparator.serialVersionUID
org.apache.commons.io.input.BoundedReader.maxCharsFromTargetReader
org.apache.commons.io.input.UnixLineEndingInputStream.<init>($java.io.InputStream$boolean)
org.apache.commons.io.filefilter.TrueFileFilter.serialVersionUID
org.apache.commons.io.input.WindowsLineEndingInputStream.slashRSeen
org.apache.commons.io.filefilter.PrefixFileFilter.serialVersionUID
org.apache.commons.io.input.WindowsLineEndingInputStream.injectSlashN
org.apache.commons.io.filefilter.NotFileFilter.serialVersionUID
org.apache.commons.io.input.CharSequenceReader.serialVersionUID
org.apache.commons.io.input.UnixLineEndingInputStream.readWithUpdate()
org.apache.commons.io.comparator.ReverseComparator.serialVersionUID
org.apache.commons.io.comparator.DirectoryFileComparator.serialVersionUID
org.apache.commons.io.input.BoundedReader.target
org.apache.commons.io.input.WindowsLineEndingInputStream.target
org.apache.commons.io.comparator.NameFileComparator.serialVersionUID
org.apache.commons.io.input.BoundedReader.mark($int)
org.apache.commons.io.FileSystemUtils.DF
org.apache.commons.io.comparator.ExtensionFileComparator.serialVersionUID
org.apache.commons.io.filefilter.AndFileFilter.serialVersionUID
org.apache.commons.io.FileSystemUtils.INSTANCE
org.apache.commons.io.monitor.FileAlterationObserver.serialVersionUID
org.apache.commons.io.comparator.DefaultFileComparator.serialVersionUID
org.apache.commons.io.filefilter.HiddenFileFilter.serialVersionUID
org.apache.commons.io.filefilter.WildcardFileFilter.serialVersionUID
org.apache.commons.io.comparator.PathFileComparator.serialVersionUID
org.apache.commons.io.input.UnixLineEndingInputStream.eofSeen
org.apache.commons.io.filefilter.CanWriteFileFilter.serialVersionUID
org.apache.commons.io.input.WindowsLineEndingInputStream.eofGame()
org.apache.commons.io.input.UnixLineEndingInputStream.close()
org.apache.commons.io.filefilter.OrFileFilter.serialVersionUID
org.apache.commons.io.output.StringBuilderWriter.serialVersionUID
org.apache.commons.io.input.UnixLineEndingInputStream.read()
org.apache.commons.io.input.WindowsLineEndingInputStream.ensureLineFeedAtEndOfFile
org.apache.commons.io.comparator.LastModifiedFileComparator.serialVersionUID
org.apache.commons.io.input.BoundedReader.charsRead
org.apache.commons.io.input.BoundedReader.close()
org.apache.commons.io.input.BoundedReader.<init>($java.io.Reader$int)
org.apache.commons.io.filefilter.NameFileFilter.serialVersionUID
org.apache.commons.io.input.WindowsLineEndingInputStream.<init>($java.io.InputStream$boolean)
org.apache.commons.io.filefilter.SuffixFileFilter.serialVersionUID
org.apache.commons.io.FileSystemUtils.<clinit>()
org.apache.commons.io.input.UnixLineEndingInputStream.ensureLineFeedAtEndOfFile
org.apache.commons.io.filefilter.DelegateFileFilter.serialVersionUID
org.apache.commons.io.filefilter.CanReadFileFilter.serialVersionUID
======================================================
======================================================
ALL TESTS TO RUN : 


org.apache.commons.io.input.UnixLineEndingInputStreamTest.inTheMiddleOfTheLine()
org.apache.commons.io.input.BoundedReaderTest.shortReader()
org.apache.commons.io.input.BoundedReaderTest.closeTest()
org.apache.commons.io.input.UnixLineEndingInputStreamTest.retainLineFeed()
org.apache.commons.io.input.UnixLineEndingInputStreamTest.multipleBlankLines()
org.apache.commons.io.FileUtilsTestCase.testDeleteDirectoryWithNonDirectory()
org.apache.commons.io.input.WindowsLineEndingInputStreamTest.malformed()
org.apache.commons.io.input.UnixLineEndingInputStreamTest.malformed()
org.apache.commons.io.input.UnixLineEndingInputStreamTest.<init>()
org.apache.commons.io.input.BoundedReaderTest.readMulti()
org.apache.commons.io.input.WindowsLineEndingInputStreamTest.retainLineFeed()
org.apache.commons.io.input.WindowsLineEndingInputStreamTest.roundtrip($java.lang.String)
org.apache.commons.io.input.BoundedReaderTest.readMultiWithOffset()
org.apache.commons.io.input.WindowsLineEndingInputStreamTest.<init>()
org.apache.commons.io.input.UnixLineEndingInputStreamTest.simpleString()
org.apache.commons.io.input.WindowsLineEndingInputStreamTest.inTheMiddleOfTheLine()
org.apache.commons.io.input.UnixLineEndingInputStreamTest.roundtrip($java.lang.String)
org.apache.commons.io.input.WindowsLineEndingInputStreamTest.roundtrip($java.lang.String$boolean)
org.apache.commons.io.input.BoundedReaderTest.markResetMarkMore()
org.apache.commons.io.input.BoundedReaderTest.skipTest()
org.apache.commons.io.input.BoundedReaderTest.readTillEnd()
org.apache.commons.io.input.WindowsLineEndingInputStreamTest.linuxLinefeeds()
org.apache.commons.io.input.BoundedReaderTest.markResetWithMarkOutsideBoundedReaderMaxAndInitialOffset()
org.apache.commons.io.input.UnixLineEndingInputStreamTest.roundtrip($java.lang.String$boolean)
org.apache.commons.io.input.BoundedReaderTest.markReset()
org.apache.commons.io.input.BoundedReaderTest$1.close()
org.apache.commons.io.input.BoundedReaderTest.<init>()
org.apache.commons.io.input.WindowsLineEndingInputStreamTest.simpleString()
org.apache.commons.io.input.WindowsLineEndingInputStreamTest.multipleBlankLines()
org.apache.commons.io.input.BoundedReaderTest.markResetWithMarkOutsideBoundedReaderMax()
org.apache.commons.io.input.BoundedReaderTest.markResetFromOffset1()
org.apache.commons.io.input.WindowsLineEndingInputStreamTest.twoLinesAtEnd()
org.apache.commons.io.input.UnixLineEndingInputStreamTest.twoLinesAtEnd()
