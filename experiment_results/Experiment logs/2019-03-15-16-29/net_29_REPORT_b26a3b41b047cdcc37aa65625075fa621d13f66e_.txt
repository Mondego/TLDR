NUMBER OF NEW OR CHANGED ENTITIES : 63
NUMBER OF NEW OR CHANGED TESTS : 9
NUMBER OF ENTITY TO TEST : 86
NUMBER OF TEST TO RUN : 11
TOTAL TIME REQUIRED : 3.605276726 second
======================================================
======================================================
NEW OR CHANGED ENTITIES : 


examples.mail.IMAPExportMbox$MboxListener.bw
org.apache.commons.net.imap.IMAP.sendCommand($org.apache.commons.net.imap.IMAPCommand)
org.apache.commons.net.nntp.NNTPClient.retrieveArticleBody($java.lang.String$org.apache.commons.net.nntp.ArticlePointer)
org.apache.commons.net.imap.IMAP.TRUE_CHUNK_LISTENER
org.apache.commons.net.ftp.FTPClient.initiateListParsing($org.apache.commons.net.ftp.FTPFileEntryParser$java.lang.String)
org.apache.commons.net.ftp.FTPClient.listNames($java.lang.String)
org.apache.commons.net.imap.IMAP.sendCommand($java.lang.String$java.lang.String)
org.apache.commons.net.nntp.NNTPClient.selectArticle($org.apache.commons.net.nntp.ArticlePointer)
org.apache.commons.net.imap.IMAP.getReplyStrings()
org.apache.commons.net.imap.IMAPReply.PARTIAL
org.apache.commons.net.imap.IMAP.__chunkListener
examples.mail.IMAPExportMbox.CRLF
org.apache.commons.net.nntp.Threader.thread($java.util.List)
examples.mail.IMAPExportMbox$MboxListener.chunkReceived($org.apache.commons.net.imap.IMAP)
examples.mail.IMAPExportMbox.PATID
org.apache.commons.net.imap.IMAP.sendData($java.lang.String)
org.apache.commons.net.imap.IMAP$1.chunkReceived($org.apache.commons.net.imap.IMAP)
org.apache.commons.net.nntp.NNTPClient.selectNextArticle($org.apache.commons.net.nntp.ArticlePointer)
org.apache.commons.net.nntp.NNTPClient.retrieveArticleHeader($java.lang.String$org.apache.commons.net.nntp.ArticlePointer)
org.apache.commons.net.imap.IMAP.getReplyString()
examples.mail.IMAPExportMbox$MboxListener.close()
org.apache.commons.net.imap.IMAP.sendCommandWithID($java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.net.imap.IMAP.__getReply($boolean)
org.apache.commons.net.imap.IMAP.fireReplyReceived($int$java.lang.String)
org.apache.commons.net.ftp.FTPClient._retrieveFileStream($java.lang.String$java.lang.String)
org.apache.commons.net.ftp.FTP.__getReply($boolean)
org.apache.commons.net.nntp.Threader.pruneEmptyContainers($org.apache.commons.net.nntp.ThreadContainer)
examples.mail.IMAPExportMbox$MboxListener.mbox
org.apache.commons.net.ftp.FTPClient._storeFile($java.lang.String$java.lang.String$java.io.InputStream)
examples.mail.IMAPImportMbox.<clinit>()
org.apache.commons.net.imap.IMAP.disconnect()
org.apache.commons.net.nntp.Threader.<init>()
org.apache.commons.net.nntp.NNTPClient.selectPreviousArticle($org.apache.commons.net.nntp.ArticlePointer)
org.apache.commons.net.nntp.Threader.thread($org.apache.commons.net.nntp.Threadable[])
org.apache.commons.net.imap.IMAP.sendCommand($java.lang.String)
examples.mail.IMAPExportMbox$MboxListener.DATE_FORMAT
org.apache.commons.net.imap.IMAP.<clinit>()
org.apache.commons.net.imap.IMAP.doCommand($org.apache.commons.net.imap.IMAPCommand)
org.apache.commons.net.ftp.FTPClient.initiateMListParsing($java.lang.String)
org.apache.commons.net.imap.IMAP.generateCommandID()
org.apache.commons.net.ftp.FTPClient._retrieveFile($java.lang.String$java.lang.String$java.io.OutputStream)
org.apache.commons.net.nntp.NNTPClient.retrieveArticle($java.lang.String$org.apache.commons.net.nntp.ArticlePointer)
org.apache.commons.net.ftp.FTPClient._storeFileStream($java.lang.String$java.lang.String)
org.apache.commons.net.nntp.NNTPClient.retrieveHeader($java.lang.String$int$int)
examples.mail.IMAPExportMbox$MboxListener.IDPARSE
examples.mail.IMAPUtils.imapLogin($java.net.URI$int$org.apache.commons.net.ProtocolCommandListener)
org.apache.commons.net.nntp.NNTPClient.retrieveArticleInfo($int$int)
examples.mail.IMAPExportMbox.<init>()
examples.mail.IMAPExportMbox.<clinit>()
org.apache.commons.net.imap.IMAP._connectAction_()
org.apache.commons.net.imap.IMAP.setChunkListener($org.apache.commons.net.imap.IMAP$IMAPChunkListener)
org.apache.commons.net.nntp.NNTPClient.selectArticle($java.lang.String$org.apache.commons.net.nntp.ArticlePointer)
org.apache.commons.net.nntp.Threader.findRootSet($java.util.HashMap)
org.apache.commons.net.imap.IMAP.sendCommand($org.apache.commons.net.imap.IMAPCommand$java.lang.String)
org.apache.commons.net.nntp.Threader.buildContainer($org.apache.commons.net.nntp.Threadable$java.util.HashMap)
examples.mail.IMAPImportMbox.PATFROM
org.apache.commons.net.nntp.NNTPClient.retrieveArticle($int$org.apache.commons.net.nntp.ArticlePointer)
org.apache.commons.net.nntp.Threader.thread($java.lang.Iterable)
org.apache.commons.net.nntp.NNTPClient.retrieveArticle($int)
examples.mail.IMAPExportMbox.PATFROM
org.apache.commons.net.nntp.Threader.gatherSubjects($org.apache.commons.net.nntp.ThreadContainer)
examples.mail.IMAPExportMbox$MboxListener.total
org.apache.commons.net.imap.IMAP.doCommand($org.apache.commons.net.imap.IMAPCommand$java.lang.String)
======================================================
======================================================
NEW OR CHANGED TESTS : 


org.apache.commons.net.nntp.TestThreader.<init>()
org.apache.commons.net.telnet.TelnetClientFunctionalTest.waitForString($java.io.InputStream$java.lang.String$long)
org.apache.commons.net.nntp.TestThreader.testEmptyList()
org.apache.commons.net.nntp.TestThreader.testNullArray()
org.apache.commons.net.nntp.TestThreader.testNullIterable()
org.apache.commons.net.nntp.TestThreader.testNullList()
org.apache.commons.net.nntp.TestThreader.testEmptyIterable()
org.apache.commons.net.telnet.TelnetClientFunctionalTest.testFunctionalTest()
org.apache.commons.net.nntp.TestThreader.testEmptyArray()
======================================================
======================================================
ALL ENTITY TO TEST : 


examples.mail.IMAPExportMbox$MboxListener.bw
org.apache.commons.net.imap.IMAP.sendCommand($org.apache.commons.net.imap.IMAPCommand)
org.apache.commons.net.nntp.NNTPClient.retrieveArticleBody($java.lang.String$org.apache.commons.net.nntp.ArticlePointer)
org.apache.commons.net.imap.IMAP.TRUE_CHUNK_LISTENER
org.apache.commons.net.ftp.FTPClient.initiateListParsing($org.apache.commons.net.ftp.FTPFileEntryParser$java.lang.String)
org.apache.commons.net.ftp.FTPClient.listNames($java.lang.String)
org.apache.commons.net.imap.IMAP.sendCommand($java.lang.String$java.lang.String)
org.apache.commons.net.nntp.ThreadContainer.parent
org.apache.commons.net.ftp.FTP.getReplyCode()
org.apache.commons.net.nntp.NNTPClient.selectArticle($org.apache.commons.net.nntp.ArticlePointer)
org.apache.commons.net.ftp.FTP._replyCode
org.apache.commons.net.imap.IMAP.getReplyStrings()
org.apache.commons.net.imap.IMAPReply.PARTIAL
org.apache.commons.net.imap.IMAP.__chunkListener
examples.mail.IMAPExportMbox.CRLF
org.apache.commons.net.SocketClient.connect($java.net.InetAddress$int)
org.apache.commons.net.nntp.ThreadContainer.child
org.apache.commons.net.ftp.FTP.__noop()
org.apache.commons.net.nntp.Threader.thread($java.util.List)
org.apache.commons.net.ftp.FTP._connectAction_()
examples.mail.IMAPExportMbox$MboxListener.chunkReceived($org.apache.commons.net.imap.IMAP)
org.apache.commons.net.ftp.FTP.__getReply()
org.apache.commons.net.ftp.FTP.__getReplyNoReport()
examples.mail.IMAPExportMbox.PATID
org.apache.commons.net.imap.IMAP.sendData($java.lang.String)
org.apache.commons.net.imap.IMAP$1.chunkReceived($org.apache.commons.net.imap.IMAP)
org.apache.commons.net.nntp.NNTPClient.selectNextArticle($org.apache.commons.net.nntp.ArticlePointer)
org.apache.commons.net.ftp.FTP._newReplyString
org.apache.commons.net.nntp.NNTPClient.retrieveArticleHeader($java.lang.String$org.apache.commons.net.nntp.ArticlePointer)
org.apache.commons.net.imap.IMAP.getReplyString()
examples.mail.IMAPExportMbox$MboxListener.close()
org.apache.commons.net.imap.IMAP.sendCommandWithID($java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.net.ftp.FTP.getReply()
org.apache.commons.net.imap.IMAP.__getReply($boolean)
org.apache.commons.net.imap.IMAP.fireReplyReceived($int$java.lang.String)
org.apache.commons.net.ftp.FTPClient._retrieveFileStream($java.lang.String$java.lang.String)
org.apache.commons.net.ftp.FTP.__getReply($boolean)
org.apache.commons.net.imap.IMAP._reader
org.apache.commons.net.nntp.Threader.pruneEmptyContainers($org.apache.commons.net.nntp.ThreadContainer)
org.apache.commons.net.ftp.FTP.getReplyString()
examples.mail.IMAPExportMbox$MboxListener.mbox
org.apache.commons.net.ftp.FTPClient._storeFile($java.lang.String$java.lang.String$java.io.InputStream)
examples.mail.IMAPImportMbox.<clinit>()
org.apache.commons.net.imap.IMAP.disconnect()
org.apache.commons.net.nntp.Threader.<init>()
org.apache.commons.net.nntp.NNTPClient.selectPreviousArticle($org.apache.commons.net.nntp.ArticlePointer)
org.apache.commons.net.nntp.Threader.thread($org.apache.commons.net.nntp.Threadable[])
org.apache.commons.net.imap.IMAP.sendCommand($java.lang.String)
examples.mail.IMAPExportMbox$MboxListener.DATE_FORMAT
org.apache.commons.net.imap.IMAP.<clinit>()
org.apache.commons.net.imap.IMAP._replyCode
org.apache.commons.net.imap.IMAP.doCommand($org.apache.commons.net.imap.IMAPCommand)
org.apache.commons.net.ftp.FTPClient.initiateMListParsing($java.lang.String)
org.apache.commons.net.SocketClient.connect($java.net.InetAddress$int$java.net.InetAddress$int)
org.apache.commons.net.imap.IMAP.generateCommandID()
org.apache.commons.net.ftp.FTPClient._retrieveFile($java.lang.String$java.lang.String$java.io.OutputStream)
org.apache.commons.net.nntp.NNTPClient.retrieveArticle($java.lang.String$org.apache.commons.net.nntp.ArticlePointer)
org.apache.commons.net.ftp.FTPSClient._connectAction_()
org.apache.commons.net.ftp.FTPClient._storeFileStream($java.lang.String$java.lang.String)
org.apache.commons.net.nntp.NNTPClient.retrieveHeader($java.lang.String$int$int)
examples.mail.IMAPExportMbox$MboxListener.IDPARSE
examples.mail.IMAPUtils.imapLogin($java.net.URI$int$org.apache.commons.net.ProtocolCommandListener)
org.apache.commons.net.nntp.NNTPClient.retrieveArticleInfo($int$int)
examples.mail.IMAPExportMbox.<init>()
org.apache.commons.net.ftp.FTPHTTPClient.connect($java.lang.String$int)
org.apache.commons.net.nntp.ThreadContainer.threadable
examples.mail.IMAPExportMbox.<clinit>()
org.apache.commons.net.imap.IMAP._connectAction_()
org.apache.commons.net.imap.IMAP.__getReply()
org.apache.commons.net.imap.IMAP.setChunkListener($org.apache.commons.net.imap.IMAP$IMAPChunkListener)
org.apache.commons.net.imap.IMAP.__writer
org.apache.commons.net.nntp.NNTPClient.selectArticle($java.lang.String$org.apache.commons.net.nntp.ArticlePointer)
org.apache.commons.net.nntp.Threader.findRootSet($java.util.HashMap)
org.apache.commons.net.ftp.FTPClient._connectAction_()
org.apache.commons.net.imap.IMAP.sendCommand($org.apache.commons.net.imap.IMAPCommand$java.lang.String)
org.apache.commons.net.nntp.Threader.buildContainer($org.apache.commons.net.nntp.Threadable$java.util.HashMap)
examples.mail.IMAPImportMbox.PATFROM
org.apache.commons.net.nntp.NNTPClient.retrieveArticle($int$org.apache.commons.net.nntp.ArticlePointer)
org.apache.commons.net.nntp.Threader.thread($java.lang.Iterable)
org.apache.commons.net.nntp.NNTPClient.retrieveArticle($int)
org.apache.commons.net.ftp.FTP.sendCommand($java.lang.String$java.lang.String)
examples.mail.IMAPExportMbox.PATFROM
org.apache.commons.net.nntp.Threader.gatherSubjects($org.apache.commons.net.nntp.ThreadContainer)
examples.mail.IMAPExportMbox$MboxListener.total
org.apache.commons.net.nntp.ThreadContainer.next
org.apache.commons.net.imap.IMAP.doCommand($org.apache.commons.net.imap.IMAPCommand$java.lang.String)
======================================================
======================================================
ALL TESTS TO RUN : 


org.apache.commons.net.nntp.TestThreader.<init>()
org.apache.commons.net.telnet.TelnetClientFunctionalTest.waitForString($java.io.InputStream$java.lang.String$long)
org.apache.commons.net.SocketClientFunctionalTest.testProxySettings()
org.apache.commons.net.nntp.TestThreader.testEmptyList()
org.apache.commons.net.imap.IMAPTest.checkGenerator()
org.apache.commons.net.nntp.TestThreader.testNullArray()
org.apache.commons.net.nntp.TestThreader.testNullIterable()
org.apache.commons.net.nntp.TestThreader.testNullList()
org.apache.commons.net.nntp.TestThreader.testEmptyIterable()
org.apache.commons.net.telnet.TelnetClientFunctionalTest.testFunctionalTest()
org.apache.commons.net.nntp.TestThreader.testEmptyArray()
