NUMBER OF NEW OR CHANGED ENTITIES : 24
NUMBER OF NEW OR CHANGED TESTS : 12
NUMBER OF ENTITY TO TEST : 34
NUMBER OF TEST TO RUN : 12
TOTAL TIME REQUIRED : 1.201877967 second
======================================================
======================================================
NEW OR CHANGED ENTITIES : 


org.apache.commons.net.util.SubnetUtils.calculate($java.lang.String)
org.apache.commons.net.imap.IMAPClient.DQUOTE
org.apache.commons.net.imap.IMAPClient.expunge()
org.apache.commons.net.util.SubnetUtils.matchAddress($java.util.regex.Matcher)
org.apache.commons.net.imap.IMAPClient.store($java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.net.util.SubnetUtils.toCidrNotation($java.lang.String$java.lang.String)
org.apache.commons.net.util.SubnetUtils.toInteger($java.lang.String)
examples.mail.IMAPImportMbox.<init>()
org.apache.commons.net.ftp.FTPClient.initFeatureMap()
examples.mail.IMAPImportMbox.CRLF
org.apache.commons.net.imap.IMAPClient.fetch($java.lang.String$java.lang.String)
org.apache.commons.net.imap.IMAPClient.check()
org.apache.commons.net.util.SubnetUtils.rangeCheck($int$int$int)
org.apache.commons.net.imap.IMAPClient.search($java.lang.String)
org.apache.commons.net.imap.IMAPClient.append($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.net.imap.IMAPClient.append($java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.net.imap.IMAPClient.copy($java.lang.String$java.lang.String)
org.apache.commons.net.util.SubnetUtils.<clinit>()
org.apache.commons.net.imap.IMAPClient.close()
org.apache.commons.net.util.SubnetUtils.format($int[])
org.apache.commons.net.imap.IMAPClient.search($java.lang.String$java.lang.String)
org.apache.commons.net.imap.IMAPClient.append($java.lang.String)
org.apache.commons.net.imap.IMAPClient.DQUOTE_S
org.apache.commons.net.imap.IMAPClient.uid($java.lang.String$java.lang.String)
======================================================
======================================================
NEW OR CHANGED TESTS : 


org.apache.commons.net.SubnetUtilsTest.testCidrAddresses()
org.apache.commons.net.SubnetUtilsTest.testParseSimpleNetmaskExclusive()
org.apache.commons.net.ftp.parser.CompositeFTPParseTestFramework.testConsistentListing()
org.apache.commons.net.SubnetUtilsTest.testNET428_32()
org.apache.commons.net.SubnetUtilsTest.testNET428_31()
org.apache.commons.net.SubnetUtilsTest.testAddresses()
org.apache.commons.net.SubnetUtilsTest.testParseSimpleNetmaskInclusive()
org.apache.commons.net.SubnetUtilsTest.testInvalidMasks()
org.apache.commons.net.ftp.parser.CompositeFTPParseTestFramework.testBadListing()
org.apache.commons.net.SubnetUtilsTest.testZeroAddressAndCidr()
org.apache.commons.net.SubnetUtilsTest.testZeroNetmaskBits()
org.apache.commons.net.SubnetUtilsTest.testParseSimpleNetmask()
======================================================
======================================================
ALL ENTITY TO TEST : 


org.apache.commons.net.util.SubnetUtils.calculate($java.lang.String)
org.apache.commons.net.util.SubnetUtils.cidrPattern
org.apache.commons.net.imap.IMAPClient.DQUOTE
org.apache.commons.net.imap.IMAPClient.expunge()
org.apache.commons.net.util.SubnetUtils.matchAddress($java.util.regex.Matcher)
org.apache.commons.net.ftp.FTPClient.hasFeature($java.lang.String$java.lang.String)
org.apache.commons.net.imap.IMAPClient.store($java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.net.ftp.FTPClient.__featuresMap
org.apache.commons.net.util.SubnetUtils.toCidrNotation($java.lang.String$java.lang.String)
org.apache.commons.net.util.SubnetUtils.toInteger($java.lang.String)
examples.mail.IMAPImportMbox.<init>()
org.apache.commons.net.ftp.FTPClient.initFeatureMap()
examples.mail.IMAPImportMbox.CRLF
org.apache.commons.net.ftp.FTPClient.hasFeature($java.lang.String)
org.apache.commons.net.util.SubnetUtils.netmask
org.apache.commons.net.imap.IMAPClient.fetch($java.lang.String$java.lang.String)
org.apache.commons.net.imap.IMAPClient.check()
org.apache.commons.net.util.SubnetUtils.rangeCheck($int$int$int)
org.apache.commons.net.imap.IMAPClient.search($java.lang.String)
org.apache.commons.net.imap.IMAPClient.append($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.net.imap.IMAPClient.append($java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.net.imap.IMAPClient.copy($java.lang.String$java.lang.String)
org.apache.commons.net.util.SubnetUtils.broadcast
org.apache.commons.net.util.SubnetUtils.addressPattern
org.apache.commons.net.util.SubnetUtils.<clinit>()
org.apache.commons.net.imap.IMAPClient.close()
org.apache.commons.net.util.SubnetUtils.address
org.apache.commons.net.util.SubnetUtils.format($int[])
org.apache.commons.net.imap.IMAPClient.search($java.lang.String$java.lang.String)
org.apache.commons.net.ftp.FTPClient.featureValues($java.lang.String)
org.apache.commons.net.imap.IMAPClient.append($java.lang.String)
org.apache.commons.net.imap.IMAPClient.DQUOTE_S
org.apache.commons.net.util.SubnetUtils.network
org.apache.commons.net.imap.IMAPClient.uid($java.lang.String$java.lang.String)
======================================================
======================================================
ALL TESTS TO RUN : 


org.apache.commons.net.SubnetUtilsTest.testCidrAddresses()
org.apache.commons.net.SubnetUtilsTest.testParseSimpleNetmaskExclusive()
org.apache.commons.net.ftp.parser.CompositeFTPParseTestFramework.testConsistentListing()
org.apache.commons.net.SubnetUtilsTest.testNET428_32()
org.apache.commons.net.SubnetUtilsTest.testNET428_31()
org.apache.commons.net.SubnetUtilsTest.testAddresses()
org.apache.commons.net.SubnetUtilsTest.testParseSimpleNetmaskInclusive()
org.apache.commons.net.SubnetUtilsTest.testInvalidMasks()
org.apache.commons.net.ftp.parser.CompositeFTPParseTestFramework.testBadListing()
org.apache.commons.net.SubnetUtilsTest.testZeroAddressAndCidr()
org.apache.commons.net.SubnetUtilsTest.testZeroNetmaskBits()
org.apache.commons.net.SubnetUtilsTest.testParseSimpleNetmask()
