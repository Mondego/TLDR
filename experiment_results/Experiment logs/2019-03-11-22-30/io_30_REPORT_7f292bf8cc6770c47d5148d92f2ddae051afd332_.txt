NUMBER OF NEW OR CHANGED ENTITIES : 19
NUMBER OF NEW OR CHANGED TESTS : 41
NUMBER OF ENTITY TO TEST : 19
NUMBER OF TEST TO RUN : 41
TOTAL TIME REQUIRED : 0.704694338 second
======================================================
======================================================
NEW OR CHANGED ENTITIES : 


org.apache.commons.io.serialization.RegexpClassNameMatcher.matches($java.lang.String)
org.apache.commons.io.serialization.ValidatingObjectInputStream.reject($java.util.regex.Pattern)
org.apache.commons.io.serialization.ValidatingObjectInputStream.acceptMatchers
org.apache.commons.io.serialization.RegexpClassNameMatcher.<init>($java.lang.String)
org.apache.commons.io.serialization.FullClassNameMatcher.classesSet
org.apache.commons.io.serialization.RegexpClassNameMatcher.pattern
org.apache.commons.io.serialization.ValidatingObjectInputStream.rejectMatchers
org.apache.commons.io.serialization.WildcardClassNameMatcher.matches($java.lang.String)
org.apache.commons.io.serialization.ValidatingObjectInputStream.validateClassName($java.lang.String)
org.apache.commons.io.serialization.ValidatingObjectInputStream.reject($org.apache.commons.io.serialization.ClassNameMatcher)
org.apache.commons.io.serialization.ValidatingObjectInputStream.accept($org.apache.commons.io.serialization.ClassNameMatcher)
org.apache.commons.io.serialization.ValidatingObjectInputStream.accept($java.util.regex.Pattern)
org.apache.commons.io.serialization.WildcardClassNameMatcher.pattern
org.apache.commons.io.serialization.ValidatingObjectInputStream.invalidClassNameFound($java.lang.String)
org.apache.commons.io.serialization.FullClassNameMatcher.matches($java.lang.String)
org.apache.commons.io.serialization.ValidatingObjectInputStream.<init>($java.io.InputStream)
org.apache.commons.io.serialization.ValidatingObjectInputStream.resolveClass($java.io.ObjectStreamClass)
org.apache.commons.io.serialization.RegexpClassNameMatcher.<init>($java.util.regex.Pattern)
org.apache.commons.io.serialization.WildcardClassNameMatcher.<init>($java.lang.String)
======================================================
======================================================
NEW OR CHANGED TESTS : 


org.apache.commons.io.serialization.RegexpClassNameMatcherTest.testSimplePatternFromString()
org.apache.commons.io.serialization.WildcardClassNameMatcherTest.noPattern()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.cleanup()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.customInvalidMethod()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.acceptWildcard()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassOnlyAccepted()
org.apache.commons.io.serialization.RegexpClassNameMatcherTest.testNullStringPattern()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectPattern()
org.apache.commons.io.serialization.RegexpClassNameMatcherTest.testSimplePatternFromPattern()
org.apache.commons.io.serialization.RegexpClassNameMatcherTest.testNullPatternPattern()
org.apache.commons.io.serialization.FullClassNameMatcherTest.<clinit>()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.<clinit>()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassAcceptedSecondWildcard()
org.apache.commons.io.serialization.OurTestClass.hashCode()
org.apache.commons.io.serialization.RegexpClassNameMatcherTest.testOrPattern()
org.apache.commons.io.serialization.RegexpClassNameMatcherTest.<init>()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest$1.matches($java.lang.String)
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.<init>()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.assertSerialization($java.io.ObjectInputStream)
org.apache.commons.io.serialization.WildcardClassNameMatcherTest.<init>()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.reject()
org.apache.commons.io.serialization.FullClassNameMatcherTest.withNames()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.acceptCustomMatcher()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectWildcard()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectPrecedence()
org.apache.commons.io.serialization.FullClassNameMatcherTest.noNames()
org.apache.commons.io.serialization.OurTestClass.equals($java.lang.Object)
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.willClose($java.io.Closeable)
org.apache.commons.io.serialization.WildcardClassNameMatcherTest.star()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest$1CustomVOIS.invalidClassNameFound($java.lang.String)
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassAcceptedSecond()
org.apache.commons.io.serialization.FullClassNameMatcherTest.<init>()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.acceptPattern()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectCustomMatcher()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.noAccept()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassAcceptedFirst()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.setup()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassNotAccepted()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassAcceptedFirstWildcard()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectOnly()
org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark()
======================================================
======================================================
ALL ENTITY TO TEST : 


org.apache.commons.io.serialization.RegexpClassNameMatcher.matches($java.lang.String)
org.apache.commons.io.serialization.ValidatingObjectInputStream.reject($java.util.regex.Pattern)
org.apache.commons.io.serialization.ValidatingObjectInputStream.acceptMatchers
org.apache.commons.io.serialization.RegexpClassNameMatcher.<init>($java.lang.String)
org.apache.commons.io.serialization.FullClassNameMatcher.classesSet
org.apache.commons.io.serialization.RegexpClassNameMatcher.pattern
org.apache.commons.io.serialization.ValidatingObjectInputStream.rejectMatchers
org.apache.commons.io.serialization.WildcardClassNameMatcher.matches($java.lang.String)
org.apache.commons.io.serialization.ValidatingObjectInputStream.validateClassName($java.lang.String)
org.apache.commons.io.serialization.ValidatingObjectInputStream.reject($org.apache.commons.io.serialization.ClassNameMatcher)
org.apache.commons.io.serialization.ValidatingObjectInputStream.accept($org.apache.commons.io.serialization.ClassNameMatcher)
org.apache.commons.io.serialization.ValidatingObjectInputStream.accept($java.util.regex.Pattern)
org.apache.commons.io.serialization.WildcardClassNameMatcher.pattern
org.apache.commons.io.serialization.ValidatingObjectInputStream.invalidClassNameFound($java.lang.String)
org.apache.commons.io.serialization.FullClassNameMatcher.matches($java.lang.String)
org.apache.commons.io.serialization.ValidatingObjectInputStream.<init>($java.io.InputStream)
org.apache.commons.io.serialization.ValidatingObjectInputStream.resolveClass($java.io.ObjectStreamClass)
org.apache.commons.io.serialization.RegexpClassNameMatcher.<init>($java.util.regex.Pattern)
org.apache.commons.io.serialization.WildcardClassNameMatcher.<init>($java.lang.String)
======================================================
======================================================
ALL TESTS TO RUN : 


org.apache.commons.io.serialization.RegexpClassNameMatcherTest.testSimplePatternFromString()
org.apache.commons.io.serialization.WildcardClassNameMatcherTest.noPattern()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.cleanup()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.customInvalidMethod()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.acceptWildcard()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassOnlyAccepted()
org.apache.commons.io.serialization.RegexpClassNameMatcherTest.testNullStringPattern()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectPattern()
org.apache.commons.io.serialization.RegexpClassNameMatcherTest.testSimplePatternFromPattern()
org.apache.commons.io.serialization.RegexpClassNameMatcherTest.testNullPatternPattern()
org.apache.commons.io.serialization.FullClassNameMatcherTest.<clinit>()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.<clinit>()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassAcceptedSecondWildcard()
org.apache.commons.io.serialization.OurTestClass.hashCode()
org.apache.commons.io.serialization.RegexpClassNameMatcherTest.testOrPattern()
org.apache.commons.io.serialization.RegexpClassNameMatcherTest.<init>()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest$1.matches($java.lang.String)
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.<init>()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.assertSerialization($java.io.ObjectInputStream)
org.apache.commons.io.serialization.WildcardClassNameMatcherTest.<init>()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.reject()
org.apache.commons.io.serialization.FullClassNameMatcherTest.withNames()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.acceptCustomMatcher()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectWildcard()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectPrecedence()
org.apache.commons.io.serialization.FullClassNameMatcherTest.noNames()
org.apache.commons.io.serialization.OurTestClass.equals($java.lang.Object)
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.willClose($java.io.Closeable)
org.apache.commons.io.serialization.WildcardClassNameMatcherTest.star()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest$1CustomVOIS.invalidClassNameFound($java.lang.String)
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassAcceptedSecond()
org.apache.commons.io.serialization.FullClassNameMatcherTest.<init>()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.acceptPattern()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectCustomMatcher()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.noAccept()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassAcceptedFirst()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.setup()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassNotAccepted()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassAcceptedFirstWildcard()
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectOnly()
org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark()
