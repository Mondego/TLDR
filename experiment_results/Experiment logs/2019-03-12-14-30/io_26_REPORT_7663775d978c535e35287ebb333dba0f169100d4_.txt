NUMBER OF NEW OR CHANGED ENTITIES : 0
NUMBER OF NEW OR CHANGED TESTS : 42
NUMBER OF ENTITY TO TEST : 0
NUMBER OF TEST TO RUN : 42
TOTAL TIME REQUIRED : 0.623708308 second
======================================================
======================================================
NEW OR CHANGED ENTITIES : 


======================================================
======================================================
NEW OR CHANGED TESTS : 


org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testAvailableRead($java.lang.String)
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S0_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero($java.lang.String)
org.apache.commons.io.input.CharSequenceInputStreamTest.testCharsetMismatchInfiniteLoop($java.lang.String)
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S1_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.isAvailabilityTestableForCharset($java.lang.String)
org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_AvailableCharset()
org.apache.commons.io.input.CharSequenceInputStreamTest.testAvailableSkip($java.lang.String)
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_USASCII()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_RequiredCharsets()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop($java.lang.String$int)
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeBufferedRead_RequiredCharsets()
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset($java.lang.String)
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D20_S0_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_USASCII()
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeSingleByteRead_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_RequiredCharsets()
org.apache.commons.io.input.CharSequenceInputStreamTest.checkAvail($java.io.InputStream$int)
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_RequiredCharsets()
org.apache.commons.io.input.CharSequenceInputStreamTest.testCharsetMismatchInfiniteLoop_RequiredCharsets()
org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero_EmptyString()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead($java.lang.String$java.lang.String)
org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_RequiredCharset()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop_UTF16()
org.apache.commons.io.input.CharSequenceInputStreamTest.testAvailable()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D13_S0_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkSupported()
org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero_RequiredCharsets()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D13_S1_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeBufferedRead_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S2_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_UTF16()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip($java.lang.String)
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S0_UTF16()
org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356($int$int$int$java.lang.String)
org.apache.commons.io.input.CharSequenceInputStreamTest.<clinit>()
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeSingleByteRead_RequiredCharsets()
======================================================
======================================================
ALL ENTITY TO TEST : 


======================================================
======================================================
ALL TESTS TO RUN : 


org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testAvailableRead($java.lang.String)
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S0_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero($java.lang.String)
org.apache.commons.io.input.CharSequenceInputStreamTest.testCharsetMismatchInfiniteLoop($java.lang.String)
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S1_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.isAvailabilityTestableForCharset($java.lang.String)
org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_AvailableCharset()
org.apache.commons.io.input.CharSequenceInputStreamTest.testAvailableSkip($java.lang.String)
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_USASCII()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_RequiredCharsets()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop($java.lang.String$int)
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeBufferedRead_RequiredCharsets()
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset($java.lang.String)
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D20_S0_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_USASCII()
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeSingleByteRead_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_RequiredCharsets()
org.apache.commons.io.input.CharSequenceInputStreamTest.checkAvail($java.io.InputStream$int)
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_RequiredCharsets()
org.apache.commons.io.input.CharSequenceInputStreamTest.testCharsetMismatchInfiniteLoop_RequiredCharsets()
org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero_EmptyString()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead($java.lang.String$java.lang.String)
org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_RequiredCharset()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop_UTF16()
org.apache.commons.io.input.CharSequenceInputStreamTest.testAvailable()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D13_S0_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkSupported()
org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero_RequiredCharsets()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D13_S1_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeBufferedRead_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S2_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_UTF16()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip($java.lang.String)
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S0_UTF16()
org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356($int$int$int$java.lang.String)
org.apache.commons.io.input.CharSequenceInputStreamTest.<clinit>()
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeSingleByteRead_RequiredCharsets()
