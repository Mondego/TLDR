NUMBER OF NEW OR CHANGED ENTITIES : 134
NUMBER OF NEW OR CHANGED TESTS : 88
NUMBER OF ENTITY TO TEST : 235
NUMBER OF TEST TO RUN : 286
TOTAL TIME REQUIRED : 1.774777042 second
======================================================
======================================================
NEW OR CHANGED ENTITIES : 


org.apache.commons.io.FileUtils.isFileOlder($java.io.File$java.io.File)
org.apache.commons.io.input.CharSequenceInputStream.available()
org.apache.commons.io.FileUtils.moveFile($java.io.File$java.io.File)
org.apache.commons.io.input.CharSequenceInputStream.<init>($java.lang.CharSequence$java.nio.charset.Charset)
org.apache.commons.io.input.ReaderInputStream.<init>($java.io.Reader)
org.apache.commons.io.FileUtils.copyFile($java.io.File$java.io.File)
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String)
org.apache.commons.io.input.BOMInputStream.reset()
org.apache.commons.io.input.Tailer.<init>($java.io.File$org.apache.commons.io.input.TailerListener$long)
org.apache.commons.io.FileUtils.waitFor($java.io.File$int)
org.apache.commons.io.FileUtils.lineIterator($java.io.File)
org.apache.commons.io.input.CharSequenceInputStream.encoder
org.apache.commons.io.input.ReaderInputStream.close()
org.apache.commons.io.FileUtils.copyDirectory($java.io.File$java.io.File$java.io.FileFilter)
org.apache.commons.io.FileUtils.toFile($java.net.URL)
org.apache.commons.io.FileUtils.directoryContains($java.io.File$java.io.File)
org.apache.commons.io.input.ReaderInputStream.<init>($java.io.Reader$java.lang.String$int)
org.apache.commons.io.input.ReaderInputStream.<init>($java.io.Reader$java.nio.charset.Charset)
org.apache.commons.io.input.ReaderInputStream.read()
org.apache.commons.io.FileUtils.moveDirectoryToDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.output.ProxyWriter.append($java.lang.CharSequence$int$int)
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence$java.lang.String$boolean)
org.apache.commons.io.FileUtils.writeByteArrayToFile($java.io.File$byte[]$boolean)
org.apache.commons.io.input.ReaderInputStream.<init>($java.io.Reader$java.lang.String)
org.apache.commons.io.FileUtils.forceMkdir($java.io.File)
org.apache.commons.io.FileUtils.checksum($java.io.File$java.util.zip.Checksum)
org.apache.commons.io.input.BOMInputStream.find()
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence)
org.apache.commons.io.input.ReaderInputStream.<init>($java.io.Reader$java.nio.charset.CharsetEncoder$int)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.lang.String$java.util.Collection$java.lang.String)
org.apache.commons.io.FileUtils.copyURLToFile($java.net.URL$java.io.File)
org.apache.commons.io.FileUtils.iterateFilesAndDirs($java.io.File$org.apache.commons.io.filefilter.IOFileFilter$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.input.CharSequenceInputStream.skip($long)
org.apache.commons.io.FileUtils.sizeOfDirectory($java.io.File)
org.apache.commons.io.FileUtils.isFileOlder($java.io.File$java.util.Date)
org.apache.commons.io.FileUtils.forceDelete($java.io.File)
org.apache.commons.io.FileUtils.iterateFiles($java.io.File$org.apache.commons.io.filefilter.IOFileFilter$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtils.iterateFiles($java.io.File$java.lang.String[]$boolean)
org.apache.commons.io.FileUtils.moveFileToDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.input.BOMInputStream.skip($long)
org.apache.commons.io.input.ReaderInputStream.<init>($java.io.Reader$java.nio.charset.Charset$int)
org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL($java.io.File$java.io.File$java.lang.String)
org.apache.commons.io.input.CharSequenceInputStream.cbuf
org.apache.commons.io.FileUtils.readLines($java.io.File)
org.apache.commons.io.FileUtils.isSymlink($java.io.File)
org.apache.commons.io.FileUtils.doCopyDirectory($java.io.File$java.io.File$java.io.FileFilter$boolean$java.util.List)
org.apache.commons.io.FileUtils.isFileNewer($java.io.File$java.util.Date)
org.apache.commons.io.FileUtils.cleanDirectoryOnExit($java.io.File)
org.apache.commons.io.FileUtils.copyDirectory($java.io.File$java.io.File$java.io.FileFilter$boolean)
org.apache.commons.io.FileUtils.listFilesAndDirs($java.io.File$org.apache.commons.io.filefilter.IOFileFilter$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtils.copyFileToDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.FileUtils.contentEquals($java.io.File$java.io.File)
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String$java.lang.String)
org.apache.commons.io.FileUtils.sizeOf($java.io.File)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.lang.String$java.util.Collection)
org.apache.commons.io.FileUtils.toFiles($java.net.URL[])
org.apache.commons.io.FileUtils.isFileOlder($java.io.File$long)
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence$boolean)
org.apache.commons.io.input.CharSequenceInputStream.bbuf
org.apache.commons.io.input.CharSequenceInputStream.mark
org.apache.commons.io.FileUtils.copyFile($java.io.File$java.io.OutputStream)
org.apache.commons.io.FileUtils.lineIterator($java.io.File$java.lang.String)
org.apache.commons.io.input.CharSequenceInputStream.<init>($java.lang.CharSequence$java.lang.String)
org.apache.commons.io.input.ReaderInputStream.fillBuffer()
org.apache.commons.io.input.BOMInputStream.read()
org.apache.commons.io.input.CharSequenceInputStream.<init>($java.lang.CharSequence$java.lang.String$int)
org.apache.commons.io.input.CharSequenceInputStream.read($byte[])
org.apache.commons.io.FileUtils.readFileToString($java.io.File$java.lang.String)
org.apache.commons.io.LineIterator.next()
org.apache.commons.io.input.CharSequenceInputStream.mark($int)
org.apache.commons.io.FileUtils.deleteQuietly($java.io.File)
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence$java.lang.String)
org.apache.commons.io.output.ProxyWriter.append($java.lang.CharSequence)
org.apache.commons.io.FileUtils.copyInputStreamToFile($java.io.InputStream$java.io.File)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.util.Collection$java.lang.String)
org.apache.commons.io.FileUtils.checksumCRC32($java.io.File)
org.apache.commons.io.input.CharSequenceInputStream.fillBuffer()
org.apache.commons.io.input.CharSequenceInputStream.read($byte[]$int$int)
org.apache.commons.io.FileUtils.setUpEffectiveFileFilter($org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtils.cleanDirectory($java.io.File)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.util.Collection$java.lang.String$boolean)
org.apache.commons.io.FileUtils.deleteDirectoryOnExit($java.io.File)
org.apache.commons.io.FileUtils.moveToDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.input.ReaderInputStream.read($byte[]$int$int)
org.apache.commons.io.FileUtils.copyDirectoryToDirectory($java.io.File$java.io.File)
org.apache.commons.io.FileUtils.copyURLToFile($java.net.URL$java.io.File$int$int)
org.apache.commons.io.input.CharSequenceInputStream.close()
org.apache.commons.io.FileUtils.decodeUrl($java.lang.String)
org.apache.commons.io.output.ProxyWriter.append($char)
org.apache.commons.io.output.TeeOutputStream.close()
org.apache.commons.io.FileUtils.<clinit>()
org.apache.commons.io.input.CharSequenceInputStream.read()
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String$boolean)
org.apache.commons.io.FileUtils.copyDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.FileUtils.readFileToByteArray($java.io.File)
org.apache.commons.io.input.BOMInputStream.mark($int)
org.apache.commons.io.FileUtils.listFiles($java.io.File$org.apache.commons.io.filefilter.IOFileFilter$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtils.deleteDirectory($java.io.File)
org.apache.commons.io.input.ReaderInputStream.read($byte[])
org.apache.commons.io.FileUtils.readFileToString($java.io.File)
org.apache.commons.io.FileUtils.isFileNewer($java.io.File$long)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.util.Collection$boolean)
org.apache.commons.io.FileUtils.validateListFilesParameters($java.io.File$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtils.copyFileToDirectory($java.io.File$java.io.File)
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String$java.lang.String$boolean)
org.apache.commons.io.FileUtils.doCopyFile($java.io.File$java.io.File$boolean)
org.apache.commons.io.input.XmlStreamReader.<clinit>()
org.apache.commons.io.FileUtils.listFiles($java.io.File$java.lang.String[]$boolean)
org.apache.commons.io.FileUtils.writeByteArrayToFile($java.io.File$byte[])
org.apache.commons.io.FileUtils.toSuffixes($java.lang.String[])
org.apache.commons.io.FileUtils.copyDirectory($java.io.File$java.io.File)
org.apache.commons.io.FileUtils.toURLs($java.io.File[])
org.apache.commons.io.input.BOMInputStream.read($byte[]$int$int)
org.apache.commons.io.input.BoundedInputStream.read()
org.apache.commons.io.input.CharSequenceInputStream.<init>($java.lang.CharSequence$java.nio.charset.Charset$int)
org.apache.commons.io.FileUtils.setUpEffectiveDirFilter($org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.lang.String$java.util.Collection$java.lang.String$boolean)
org.apache.commons.io.input.BOMInputStream.matches($org.apache.commons.io.ByteOrderMark)
org.apache.commons.io.input.XmlStreamReader.getContentTypeEncoding($java.lang.String)
org.apache.commons.io.input.XmlStreamReader.getXmlProlog($java.io.InputStream$java.lang.String)
org.apache.commons.io.FileUtils.innerListFiles($java.util.Collection$java.io.File$org.apache.commons.io.filefilter.IOFileFilter$boolean)
org.apache.commons.io.input.CharSequenceInputStream.markSupported()
org.apache.commons.io.FileUtils.isFileNewer($java.io.File$java.io.File)
org.apache.commons.io.input.BOMInputStream.readFirstBytes()
org.apache.commons.io.input.XmlStreamReader.isAppXml($java.lang.String)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.lang.String$java.util.Collection$boolean)
org.apache.commons.io.FileUtils.moveDirectory($java.io.File$java.io.File)
org.apache.commons.io.FileUtils.readLines($java.io.File$java.lang.String)
org.apache.commons.io.input.XmlStreamReader.isTextXml($java.lang.String)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.util.Collection)
org.apache.commons.io.input.BOMInputStream.getBOM()
org.apache.commons.io.input.CharSequenceInputStream.reset()
org.apache.commons.io.FileUtils.forceDeleteOnExit($java.io.File)
org.apache.commons.io.FileUtils.copyFile($java.io.File$java.io.File$boolean)
======================================================
======================================================
NEW OR CHANGED TESTS : 


org.apache.commons.io.FileUtilsTestCase.testIterateFiles()
org.apache.commons.io.FileUtilsTestCase.testMoveFile_Errors()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.input.CharSequenceInputStreamTest.testWithSingleByteRead($java.lang.String$java.lang.String)
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testChecksumDouble()
org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyNonExistent()
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset()
org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete()
org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete_Failed()
org.apache.commons.io.output.TeeOutputStreamTest$RecordCloseByteArrayOutputStream.<init>($org.apache.commons.io.output.TeeOutputStreamTest$1)
org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory_Errors()
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeUTF8WithSingleByteRead()
org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyDir()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory_Errors()
org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory()
org.apache.commons.io.output.TeeOutputStreamTest.testCloseMainIOException()
org.apache.commons.io.FileUtilsTestCase.testIO276()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.input.CharSequenceInputStreamTest.testUTF8WithSingleByteRead()
org.apache.commons.io.input.BOMInputStreamTest.testReadTwiceWithoutBOM()
org.apache.commons.io.input.CharSequenceInputStreamTest.testUTF16WithSingleByteRead()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.output.TeeOutputStreamTest.testTee()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip()
org.apache.commons.io.output.TeeOutputStreamTest.testCloseBranchIOException()
org.apache.commons.io.FileUtilsTestCase.testListFiles()
org.apache.commons.io.output.TeeOutputStreamTest$ExceptionOnCloseByteArrayOutputStream.<init>()
org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullChecksum()
org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence1()
org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile1()
org.apache.commons.io.input.CharSequenceInputStreamTest.<init>()
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.output.TeeOutputStreamTest$RecordCloseByteArrayOutputStream.close()
org.apache.commons.io.FileUtilsTestCase.testMoveFile_Rename()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_Writer_nullData()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.input.BOMInputStreamTest.readBOMInputStreamTwice($java.lang.String)
org.apache.commons.io.input.CharSequenceInputStreamTest.testUTF8WithBufferedRead()
org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithDefaultEncoding()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero()
org.apache.commons.io.input.BOMInputStreamTest.testReadTwiceWithBOM()
org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullFile()
org.apache.commons.io.FileUtilsTestCase.testIterateFilesAndDirs()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete()
org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory_Errors()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory()
org.apache.commons.io.output.TeeOutputStreamTest.assertByteArrayEquals($java.lang.String$byte[]$byte[])
org.apache.commons.io.FileUtilsTestCase.<clinit>()
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Errors()
org.apache.commons.io.input.BOMInputStreamTest.testClose()
org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testChecksumCRC32()
org.apache.commons.io.FileUtilsTestCase.testChecksum()
org.apache.commons.io.output.TeeOutputStreamTest$ExceptionOnCloseByteArrayOutputStream.close()
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeUTF8WithBufferedRead()
org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithEncoding()
org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyForNull()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testChecksumOnDirectory()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory()
org.apache.commons.io.output.TeeOutputStreamTest$ExceptionOnCloseByteArrayOutputStream.<init>($org.apache.commons.io.output.TeeOutputStreamTest$1)
org.apache.commons.io.input.BOMInputStreamTest.readFile($org.apache.commons.io.input.BOMInputStream)
org.apache.commons.io.input.CharSequenceInputStreamTest.testCharsetMismatchInfiniteLoop()
org.apache.commons.io.FileUtilsTestCase.testReadLines()
org.apache.commons.io.FileUtilsTestCase.testReadFileToByteArray()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile2()
org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence2()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_3arg_nullSeparator()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator()
org.apache.commons.io.output.TeeOutputStreamTest$RecordCloseByteArrayOutputStream.<init>()
org.apache.commons.io.input.CharSequenceInputStreamTest.testWithBufferedRead($java.lang.String$java.lang.String)
org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyFile()
org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs()
org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Rename()
org.apache.commons.io.input.CharSequenceInputStreamTest.<clinit>()
org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
======================================================
======================================================
ALL ENTITY TO TEST : 


org.apache.commons.io.input.Tailer.run()
org.apache.commons.io.FileUtils.isFileOlder($java.io.File$java.io.File)
org.apache.commons.io.input.XmlStreamReader.<init>($java.io.InputStream)
org.apache.commons.io.filefilter.FileFilterUtils.filter($org.apache.commons.io.filefilter.IOFileFilter$java.io.File[])
org.apache.commons.io.FileUtils.moveFile($java.io.File$java.io.File)
org.apache.commons.io.filefilter.AbstractFileFilter.accept($java.io.File)
org.apache.commons.io.input.Tailer.<init>($java.io.File$org.apache.commons.io.input.TailerListener)
org.apache.commons.io.FileUtils.copyFile($java.io.File$java.io.File)
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.io.File$java.nio.charset.Charset)
org.apache.commons.io.input.BOMInputStream.fbLength
org.apache.commons.io.monitor.FileAlterationMonitor.run()
org.apache.commons.io.input.XmlStreamReader.<init>($java.net.URL)
org.apache.commons.io.input.ReaderInputStream.close()
org.apache.commons.io.FileUtils.copyDirectory($java.io.File$java.io.File$java.io.FileFilter)
org.apache.commons.io.FileUtils.toFile($java.net.URL)
org.apache.commons.io.input.BOMInputStream.hasBOM()
org.apache.commons.io.input.ReaderInputStream.<init>($java.io.Reader$java.nio.charset.Charset)
org.apache.commons.io.output.LockableFileWriter.<init>($java.io.File)
org.apache.commons.io.output.LockableFileWriter.<init>($java.io.File$boolean)
org.apache.commons.io.output.ProxyWriter.append($java.lang.CharSequence$int$int)
org.apache.commons.io.input.XmlStreamReader.ENCODING_PATTERN
org.apache.commons.io.FileUtils.writeByteArrayToFile($java.io.File$byte[]$boolean)
org.apache.commons.io.input.ReaderInputStream.<init>($java.io.Reader$java.lang.String)
org.apache.commons.io.input.BOMInputStream.find()
org.apache.commons.io.output.LockableFileWriter.<init>($java.io.File$java.lang.String)
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.lang.String$java.util.Collection$java.lang.String)
org.apache.commons.io.FileUtils.copyURLToFile($java.net.URL$java.io.File)
org.apache.commons.io.filefilter.AgeFileFilter.accept($java.io.File)
org.apache.commons.io.FileUtils.sizeOfDirectory($java.io.File)
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.lang.String$java.nio.charset.CharsetEncoder$boolean)
org.apache.commons.io.FileUtils.UTF8
org.apache.commons.io.input.BOMInputStream.markFbIndex
org.apache.commons.io.filefilter.OrFileFilter.accept($java.io.File$java.lang.String)
org.apache.commons.io.input.BOMInputStream.fbIndex
org.apache.commons.io.FileUtils.iterateFiles($java.io.File$java.lang.String[]$boolean)
org.apache.commons.io.output.LockableFileWriter.<init>($java.io.File$java.lang.String$boolean$java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.filterSet($org.apache.commons.io.filefilter.IOFileFilter$java.lang.Iterable)
org.apache.commons.io.input.ReaderInputStream.<init>($java.io.Reader$java.nio.charset.Charset$int)
org.apache.commons.io.input.CharSequenceInputStream.cbuf
org.apache.commons.io.filefilter.DelegateFileFilter.accept($java.io.File$java.lang.String)
org.apache.commons.io.input.ReaderInputStream.endOfInput
org.apache.commons.io.FileUtils.isSymlink($java.io.File)
org.apache.commons.io.FileUtils.isFileNewer($java.io.File$java.util.Date)
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.lang.String$java.nio.charset.CharsetEncoder)
org.apache.commons.io.FileUtils.copyDirectory($java.io.File$java.io.File$java.io.FileFilter$boolean)
org.apache.commons.io.FileUtils.listFilesAndDirs($java.io.File$org.apache.commons.io.filefilter.IOFileFilter$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtils.copyFileToDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.io.File$java.lang.String$boolean)
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String$java.lang.String)
org.apache.commons.io.FileUtils.sizeOf($java.io.File)
org.apache.commons.io.input.ReaderInputStream.encoder
org.apache.commons.io.FileUtils.isFileOlder($java.io.File$long)
org.apache.commons.io.output.FileWriterWithEncoding.initWriter($java.io.File$java.lang.Object$boolean)
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence$boolean)
org.apache.commons.io.input.ReaderInputStream.fillBuffer()
org.apache.commons.io.input.CharSequenceInputStream.<init>($java.lang.CharSequence$java.lang.String)
org.apache.commons.io.input.CharSequenceInputStream.<init>($java.lang.CharSequence$java.lang.String$int)
org.apache.commons.io.input.CharSequenceInputStream.read($byte[])
org.apache.commons.io.FileCleaningTracker$Tracker.delete()
org.apache.commons.io.FileUtils.readFileToString($java.io.File$java.lang.String)
org.apache.commons.io.LineIterator.next()
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.io.File$java.nio.charset.Charset$boolean)
org.apache.commons.io.input.XmlStreamReader.<init>($java.net.URLConnection$java.lang.String)
org.apache.commons.io.input.CharSequenceInputStream.mark($int)
org.apache.commons.io.FileDeleteStrategy.delete($java.io.File)
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence$java.lang.String)
org.apache.commons.io.output.ProxyWriter.append($java.lang.CharSequence)
org.apache.commons.io.FileUtils.copyInputStreamToFile($java.io.InputStream$java.io.File)
org.apache.commons.io.filefilter.AndFileFilter.accept($java.io.File)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.util.Collection$java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.filter($org.apache.commons.io.filefilter.IOFileFilter$java.lang.Iterable$java.util.Collection)
org.apache.commons.io.FileUtils.setUpEffectiveFileFilter($org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.input.CharSequenceInputStream.read($byte[]$int$int)
org.apache.commons.io.FileUtils.cleanDirectory($java.io.File)
org.apache.commons.io.comparator.SizeFileComparator.compare($java.io.File$java.io.File)
org.apache.commons.io.FileUtils.copyDirectoryToDirectory($java.io.File$java.io.File)
org.apache.commons.io.input.ReaderInputStream.read($byte[]$int$int)
org.apache.commons.io.input.CharSequenceInputStream.close()
org.apache.commons.io.output.ProxyWriter.append($char)
org.apache.commons.io.input.ReaderInputStream.lastCoderResult
org.apache.commons.io.input.ReaderInputStream.encoderOut
org.apache.commons.io.FileUtils.<clinit>()
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.lang.String$java.lang.String$boolean)
org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify($org.apache.commons.io.monitor.FileEntry$org.apache.commons.io.monitor.FileEntry[]$java.io.File[])
org.apache.commons.io.input.CharSequenceInputStream.read()
org.apache.commons.io.input.BOMInputStream.hasBOM($org.apache.commons.io.ByteOrderMark)
org.apache.commons.io.input.ReaderInputStream.encoderIn
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String$boolean)
org.apache.commons.io.FileUtils.copyDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.FileUtils.readFileToByteArray($java.io.File)
org.apache.commons.io.FileUtils.listFiles($java.io.File$org.apache.commons.io.filefilter.IOFileFilter$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtils.readFileToString($java.io.File)
org.apache.commons.io.FileUtils.isFileNewer($java.io.File$long)
org.apache.commons.io.filefilter.NotFileFilter.accept($java.io.File$java.lang.String)
org.apache.commons.io.FileUtils.validateListFilesParameters($java.io.File$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.input.XmlStreamReader.<init>($java.io.InputStream$boolean$java.lang.String)
org.apache.commons.io.FileUtils.doCopyFile($java.io.File$java.io.File$boolean)
org.apache.commons.io.input.XmlStreamReader.<clinit>()
org.apache.commons.io.FileUtils.toSuffixes($java.lang.String[])
org.apache.commons.io.FileUtils.copyDirectory($java.io.File$java.io.File)
org.apache.commons.io.input.BoundedInputStream.read($byte[])
org.apache.commons.io.input.BoundedInputStream.read()
org.apache.commons.io.input.BOMInputStream.read($byte[]$int$int)
org.apache.commons.io.FileUtils.toURLs($java.io.File[])
org.apache.commons.io.FileUtils.setUpEffectiveDirFilter($org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.input.BOMInputStream.matches($org.apache.commons.io.ByteOrderMark)
org.apache.commons.io.input.XmlStreamReader.getContentTypeEncoding($java.lang.String)
org.apache.commons.io.input.XmlStreamReader.getXmlProlog($java.io.InputStream$java.lang.String)
org.apache.commons.io.input.ReaderInputStream.<init>($java.io.Reader$java.nio.charset.CharsetEncoder)
org.apache.commons.io.FileUtils.innerListFiles($java.util.Collection$java.io.File$org.apache.commons.io.filefilter.IOFileFilter$boolean)
org.apache.commons.io.input.CharSequenceInputStream.markSupported()
org.apache.commons.io.input.XmlStreamReader.<init>($java.io.InputStream$java.lang.String$boolean)
org.apache.commons.io.input.XmlStreamReader.isAppXml($java.lang.String)
org.apache.commons.io.input.BOMInputStream.readFirstBytes()
org.apache.commons.io.FileUtils.readLines($java.io.File$java.lang.String)
org.apache.commons.io.filefilter.OrFileFilter.accept($java.io.File)
org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy.doDelete($java.io.File)
org.apache.commons.io.input.XmlStreamReader.<init>($java.io.InputStream$java.lang.String$boolean$java.lang.String)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.util.Collection)
org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify()
org.apache.commons.io.input.BOMInputStream.getBOM()
org.apache.commons.io.FileUtils.forceDeleteOnExit($java.io.File)
org.apache.commons.io.input.CharSequenceInputStream.available()
org.apache.commons.io.input.CharSequenceInputStream.<init>($java.lang.CharSequence$java.nio.charset.Charset)
org.apache.commons.io.input.ReaderInputStream.<init>($java.io.Reader)
org.apache.commons.io.input.XmlStreamReader.doRawStream($org.apache.commons.io.input.BOMInputStream$org.apache.commons.io.input.BOMInputStream$boolean)
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String)
org.apache.commons.io.input.BoundedInputStream.skip($long)
org.apache.commons.io.input.BOMInputStream.reset()
org.apache.commons.io.filefilter.FileFilterUtils.filterList($org.apache.commons.io.filefilter.IOFileFilter$java.lang.Iterable)
org.apache.commons.io.input.Tailer.<init>($java.io.File$org.apache.commons.io.input.TailerListener$long)
org.apache.commons.io.output.XmlStreamWriter.<clinit>()
org.apache.commons.io.FileUtils.waitFor($java.io.File$int)
org.apache.commons.io.FileUtils.lineIterator($java.io.File)
org.apache.commons.io.input.CharSequenceInputStream.encoder
org.apache.commons.io.filefilter.FileFilterUtils.filter($org.apache.commons.io.filefilter.IOFileFilter$java.lang.Iterable)
org.apache.commons.io.FileUtils.directoryContains($java.io.File$java.io.File)
org.apache.commons.io.input.ReaderInputStream.<init>($java.io.Reader$java.lang.String$int)
org.apache.commons.io.input.ReaderInputStream.read()
org.apache.commons.io.input.XmlStreamReader.XML_GUESS_BYTES
org.apache.commons.io.FileUtils.moveDirectoryToDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.monitor.FileAlterationObserver.listFiles($java.io.File)
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence$java.lang.String$boolean)
org.apache.commons.io.output.LockableFileWriter.<init>($java.lang.String)
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.io.File$java.lang.String)
org.apache.commons.io.FileUtils.forceMkdir($java.io.File)
org.apache.commons.io.FileUtils.ONE_YB
org.apache.commons.io.FileUtils.checksum($java.io.File$java.util.zip.Checksum)
org.apache.commons.io.output.LockableFileWriter.initWriter($java.io.File$java.lang.String$boolean)
org.apache.commons.io.input.ReaderInputStream.<init>($java.io.Reader$java.nio.charset.CharsetEncoder$int)
org.apache.commons.io.input.XmlStreamReader.<init>($java.io.File)
org.apache.commons.io.FileUtils.iterateFilesAndDirs($java.io.File$org.apache.commons.io.filefilter.IOFileFilter$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.input.BOMInputStream.read($byte[])
org.apache.commons.io.input.CharSequenceInputStream.skip($long)
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.lang.String$java.nio.charset.Charset$boolean)
org.apache.commons.io.FileUtils.isFileOlder($java.io.File$java.util.Date)
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.lang.String$java.nio.charset.Charset)
org.apache.commons.io.input.XmlStreamReader.CHARSET_PATTERN
org.apache.commons.io.FileUtils.forceDelete($java.io.File)
org.apache.commons.io.FileUtils.iterateFiles($java.io.File$org.apache.commons.io.filefilter.IOFileFilter$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry($org.apache.commons.io.monitor.FileEntry$java.io.File)
org.apache.commons.io.FileUtils.moveFileToDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.input.XmlStreamReader.<init>($java.io.InputStream$boolean)
org.apache.commons.io.input.BOMInputStream.skip($long)
org.apache.commons.io.FileUtils.ONE_ZB
org.apache.commons.io.input.BOMInputStream.markedAtStart
org.apache.commons.io.input.ReaderInputStream.reader
org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding($java.lang.String$java.lang.String$java.lang.String$java.lang.String$boolean)
org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL($java.io.File$java.io.File$java.lang.String)
org.apache.commons.io.input.BOMInputStream.byteOrderMark
org.apache.commons.io.FileUtils.readLines($java.io.File)
org.apache.commons.io.FileUtils.doCopyDirectory($java.io.File$java.io.File$java.io.FileFilter$boolean$java.util.List)
org.apache.commons.io.FileUtils.cleanDirectoryOnExit($java.io.File)
org.apache.commons.io.output.LockableFileWriter.<init>($java.io.File$boolean$java.lang.String)
org.apache.commons.io.input.XmlStreamReader.<init>($java.io.InputStream$java.lang.String)
org.apache.commons.io.monitor.FileAlterationMonitor.start()
org.apache.commons.io.FileUtils.contentEquals($java.io.File$java.io.File)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.lang.String$java.util.Collection)
org.apache.commons.io.input.BOMInputStream.getBOMCharsetName()
org.apache.commons.io.FileUtils.toFiles($java.net.URL[])
org.apache.commons.io.input.CharSequenceInputStream.bbuf
org.apache.commons.io.input.CharSequenceInputStream.mark
org.apache.commons.io.input.BOMInputStream.firstBytes
org.apache.commons.io.FileUtils.copyFile($java.io.File$java.io.OutputStream)
org.apache.commons.io.FileUtils.lineIterator($java.io.File$java.lang.String)
org.apache.commons.io.input.BOMInputStream.read()
org.apache.commons.io.input.BoundedInputStream.read($byte[]$int$int)
org.apache.commons.io.FileUtils.deleteQuietly($java.io.File)
org.apache.commons.io.comparator.SizeFileComparator.compare($java.lang.Object$java.lang.Object)
org.apache.commons.io.FileUtils.checksumCRC32($java.io.File)
org.apache.commons.io.input.CharSequenceInputStream.fillBuffer()
org.apache.commons.io.filefilter.AbstractFileFilter.accept($java.io.File$java.lang.String)
org.apache.commons.io.output.LockableFileWriter.<init>($java.lang.String$boolean$java.lang.String)
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.io.File$java.nio.charset.CharsetEncoder)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.util.Collection$java.lang.String$boolean)
org.apache.commons.io.FileUtils.deleteDirectoryOnExit($java.io.File)
org.apache.commons.io.FileUtils.moveToDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.input.XmlStreamReader.doLenientDetection($java.lang.String$org.apache.commons.io.input.XmlStreamReaderException)
org.apache.commons.io.FileUtils.copyURLToFile($java.net.URL$java.io.File$int$int)
org.apache.commons.io.filefilter.DelegateFileFilter.accept($java.io.File)
org.apache.commons.io.FileUtils.decodeUrl($java.lang.String)
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.io.File$java.nio.charset.CharsetEncoder$boolean)
org.apache.commons.io.output.TeeOutputStream.close()
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.lang.String$java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.filterList($org.apache.commons.io.filefilter.IOFileFilter$java.io.File[])
org.apache.commons.io.filefilter.AndFileFilter.accept($java.io.File$java.lang.String)
org.apache.commons.io.FileDeleteStrategy.deleteQuietly($java.io.File)
org.apache.commons.io.input.BoundedInputStream.mark($int)
org.apache.commons.io.input.BOMInputStream.mark($int)
org.apache.commons.io.FileUtils.deleteDirectory($java.io.File)
org.apache.commons.io.input.ReaderInputStream.read($byte[])
org.apache.commons.io.input.XmlStreamReader.BOMS
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.util.Collection$boolean)
org.apache.commons.io.FileUtils.copyFileToDirectory($java.io.File$java.io.File)
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String$java.lang.String$boolean)
org.apache.commons.io.FileUtils.listFiles($java.io.File$java.lang.String[]$boolean)
org.apache.commons.io.FileUtils.writeByteArrayToFile($java.io.File$byte[])
org.apache.commons.io.output.LockableFileWriter.<init>($java.lang.String$boolean)
org.apache.commons.io.input.XmlStreamReader.doHttpStream($org.apache.commons.io.input.BOMInputStream$org.apache.commons.io.input.BOMInputStream$java.lang.String$boolean)
org.apache.commons.io.filefilter.FileFilterUtils.filterSet($org.apache.commons.io.filefilter.IOFileFilter$java.io.File[])
org.apache.commons.io.FileUtils.EMPTY_FILE_ARRAY
org.apache.commons.io.input.CharSequenceInputStream.<init>($java.lang.CharSequence$java.nio.charset.Charset$int)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.lang.String$java.util.Collection$java.lang.String$boolean)
org.apache.commons.io.monitor.FileAlterationObserver.initialize()
org.apache.commons.io.FileCleaningTracker$Reaper.run()
org.apache.commons.io.FileUtils.isFileNewer($java.io.File$java.io.File)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.lang.String$java.util.Collection$boolean)
org.apache.commons.io.FileUtils.moveDirectory($java.io.File$java.io.File)
org.apache.commons.io.input.XmlStreamReader.isTextXml($java.lang.String)
org.apache.commons.io.input.BoundedInputStream.available()
org.apache.commons.io.input.BoundedInputStream.pos
org.apache.commons.io.input.CharSequenceInputStream.reset()
org.apache.commons.io.filefilter.NotFileFilter.accept($java.io.File)
org.apache.commons.io.FileUtils.copyFile($java.io.File$java.io.File$boolean)
======================================================
======================================================
ALL TESTS TO RUN : 


org.apache.commons.io.FileUtilsTestCase.testMoveFile_Errors()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testChecksumDouble()
org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory_Errors()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray_fromList()
org.apache.commons.io.FileUtilsTestCase.testCopyURLToFileWithTimeout()
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainsDirectory()
org.apache.commons.io.FileUtilsTestCase.testToFile1()
org.apache.commons.io.input.XmlStreamReaderTest._testRawBomValid($java.lang.String)
org.apache.commons.io.FileUtilsWaitForTestCase.tearDown()
org.apache.commons.io.input.CharSequenceInputStreamTest.testUTF16WithSingleByteRead()
org.apache.commons.io.output.TeeOutputStreamTest.testTee()
org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArrayNullParameters()
org.apache.commons.io.FileUtilsWaitForTestCase.testWaitFor()
org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile1()
org.apache.commons.io.FileUtilsTestCase.testMoveFile_Rename()
org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_directory()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty()
org.apache.commons.io.FileUtilsTestCase.testDecodeUrlLenient()
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.tearDown()
org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory()
org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithDefaultEncoding()
org.apache.commons.io.LineIteratorTestCase.tearDown()
org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSetNullParameters()
org.apache.commons.io.output.FileWriterWithEncodingTest.tearDown()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete()
org.apache.commons.io.filefilter.RegexFileFilterTestCase.tearDown()
org.apache.commons.io.FileUtilsTestCase.testCopyFile2WithoutFileDatePreservation()
org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid($java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteQuietlyNormal()
org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware()
org.apache.commons.io.input.BOMInputStreamTest.testClose()
org.apache.commons.io.testtools.FileBasedTestCase.newFile($java.lang.String)
org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir()
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeUTF8WithBufferedRead()
org.apache.commons.io.FileUtilsTestCase.testToFile2()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.tearDown()
org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead()
org.apache.commons.io.FileUtilsTestCase.testCopyFileToOutputStream()
org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor()
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithSymlinkFile()
org.apache.commons.io.input.BoundedInputStreamTest.testReadSingle()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile2()
org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML()
org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer($java.lang.String$java.io.File$long$boolean)
org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile()
org.apache.commons.io.input.BOMInputStreamTest.testReadSmall()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryPreserveDates()
org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithASymlinkDir()
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkDir()
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering($org.apache.commons.io.filefilter.IOFileFilter$java.io.File$boolean)
org.apache.commons.io.FileUtilsTestCase.tearDown()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testComparator()
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testUnrealizedContainment()
org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkTextXml($boolean$java.lang.String)
org.apache.commons.io.FileUtilsTestCase.testIterateFiles()
org.apache.commons.io.LineIteratorTestCase.testValidEncoding()
org.apache.commons.io.LineIteratorTestCase.testCloseEarly()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNormal()
org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete()
org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid($java.lang.String)
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest()
org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles()
org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyDefaultEncoding()
org.apache.commons.io.input.ReaderInputStreamTest.testCharsetMismatchInfiniteLoop()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString()
org.apache.commons.io.FileUtilsTestCase.IGNOREtestCopyFileLarge()
org.apache.commons.io.FileUtilsTestCase.testToFiles4()
org.apache.commons.io.output.TeeOutputStreamTest.testCloseMainIOException()
org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterListNullParameters()
org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM()
org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines($int)
org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectory()
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesRegular()
org.apache.commons.io.FileUtilsTestCase.testDecodeUrlEncodingUtf8()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.tearDown()
org.apache.commons.io.output.ProxyWriterTest.testAppendCharSequence()
org.apache.commons.io.input.ReaderInputStreamTest.testReadZero()
org.apache.commons.io.output.TeeOutputStreamTest.testCloseBranchIOException()
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testCleanEmpty()
org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence1()
org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard()
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainFile()
org.apache.commons.io.monitor.FileObserverTestCase.testFileDelete()
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_fileName_nullFile()
org.apache.commons.io.monitor.AbstractMonitorTestCase.createObserver($java.io.File$java.io.FileFilter)
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCorrectlyIdentifySymlinkWithParentSymLink()
org.apache.commons.io.input.CharSequenceInputStreamTest.testUTF8WithBufferedRead()
org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding($java.lang.String$java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest$MockXmlStreamReader.<init>($java.lang.String)
org.apache.commons.io.output.FileWriterWithEncodingTest.testSameEncoding()
org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero()
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsDirectory()
org.apache.commons.io.FileUtilsListFilesTestCase.tearDown()
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotExist()
org.apache.commons.io.FileUtilsTestCase.testIterateFilesAndDirs()
org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory($java.io.File$java.io.File$java.io.File)
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg()
org.apache.commons.io.FileUtilsTestCase.testCopyToSelf()
org.apache.commons.io.FileUtilsTestCase.<clinit>()
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnNullList()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet()
org.apache.commons.io.FileCleaningTrackerTestCase.tearDown()
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testCanonicalPath()
org.apache.commons.io.FileUtilsTestCase.testChecksum()
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesNested()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError($java.lang.String$boolean$java.lang.String$java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.FileUtilsTestCase.testChecksumOnDirectory()
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_encoding_badEncoding()
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testSameFile()
org.apache.commons.io.LineIteratorTestCase.testFiltering($java.util.List$java.io.Reader)
org.apache.commons.io.input.CharSequenceInputStreamTest.testCharsetMismatchInfiniteLoop()
org.apache.commons.io.LineIteratorTestCase.testInvalidEncoding()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkAppXml($boolean$java.lang.String)
org.apache.commons.io.FileUtilsTestCase.testWriteLines_3arg_nullSeparator()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator()
org.apache.commons.io.LineIteratorTestCase.testMissingFile()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild()
org.apache.commons.io.input.ReaderInputStreamTest.testWithBufferedRead($java.lang.String$java.lang.String)
org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly()
org.apache.commons.io.FileUtilsTestCase.testToURLs1()
org.apache.commons.io.FileUtilsTestCase.testForceMkdir()
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsFile()
org.apache.commons.io.input.CharSequenceInputStreamTest.testWithSingleByteRead($java.lang.String$java.lang.String)
org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyNonExistent()
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_nullFile()
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset()
org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM()
org.apache.commons.io.output.TeeOutputStreamTest$RecordCloseByteArrayOutputStream.<init>($org.apache.commons.io.output.TeeOutputStreamTest$1)
org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked()
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeUTF8WithSingleByteRead()
org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyDir()
org.apache.commons.io.input.TailerTest.tearDown()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory_Errors()
org.apache.commons.io.FileUtilsTestCase.testToFiles2()
org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly()
org.apache.commons.io.input.TailerTest.testTailer()
org.apache.commons.io.FileUtilsTestCase.testToFile5()
org.apache.commons.io.IOUtilsTestCase.tearDown()
org.apache.commons.io.FileUtilsTestCase.testForceDeleteDir()
org.apache.commons.io.input.CharSequenceInputStreamTest.testUTF8WithSingleByteRead()
org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir()
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testFileDoesNotExist()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient($java.lang.String$java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.output.TeeOutputStreamTest$ExceptionOnCloseByteArrayOutputStream.<init>()
org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullChecksum()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering($org.apache.commons.io.filefilter.IOFileFilter$java.io.File$boolean)
org.apache.commons.io.output.LockableFileWriterTest.testFileLocked()
org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile2()
org.apache.commons.io.input.CharSequenceInputStreamTest.<init>()
org.apache.commons.io.LineIteratorTestCase.testNextOnly()
org.apache.commons.io.monitor.FileObserverTestCase.testObserveSingleFile()
org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_Writer_nullData()
org.apache.commons.io.FileUtilsTestCase.testDecodeUrl()
org.apache.commons.io.input.BOMInputStreamTest.readBOMInputStreamTwice($java.lang.String)
org.apache.commons.io.filefilter.FileFilterTestCase.tearDown()
org.apache.commons.io.comparator.SizeFileComparatorTest.testNonexistantFile()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest()
org.apache.commons.io.input.BOMInputStreamTest.testReadTwiceWithBOM()
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_directory()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory()
org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFileFiltering($int$org.apache.commons.io.filefilter.IOFileFilter$java.io.File$boolean)
org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyUtf8Encoding()
org.apache.commons.io.FileUtilsListFilesTestCase.setUp()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray()
org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_fileName_nullFile()
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Errors()
org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoFileReference()
org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoDate()
org.apache.commons.io.input.ReaderInputStreamTest.testWithSingleByteRead($java.lang.String$java.lang.String)
org.apache.commons.io.FileUtilsTestCase.testToFiles3()
org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testToFileUtf8()
org.apache.commons.io.output.TeeOutputStreamTest$ExceptionOnCloseByteArrayOutputStream.close()
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOM()
org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL()
org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyForNull()
org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension()
org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile3()
org.apache.commons.io.output.TeeOutputStreamTest$ExceptionOnCloseByteArrayOutputStream.<init>($org.apache.commons.io.output.TeeOutputStreamTest$1)
org.apache.commons.io.input.BOMInputStreamTest.readFile($org.apache.commons.io.input.BOMInputStream)
org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomInvalid($java.lang.String)
org.apache.commons.io.FileUtilsTestCase.testCopyFile2ToDir()
org.apache.commons.io.FileUtilsTestCase.testReadLines()
org.apache.commons.io.FileUtilsTestCase.testDecodeUrlNullSafe()
org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence2()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFilenameFiltering($int$org.apache.commons.io.filefilter.IOFileFilter$java.io.File$boolean)
org.apache.commons.io.output.TeeOutputStreamTest$RecordCloseByteArrayOutputStream.<init>()
org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyFile()
org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs()
org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Rename()
org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors()
org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_encoding_badEncoding()
org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_nullFile()
org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete_Failed()
org.apache.commons.io.FilenameUtilsTestCase.tearDown()
org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testStillClearsIfGivenDirectoryIsASymlink()
org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory()
org.apache.commons.io.FilenameUtilsTestCase.setUp()
org.apache.commons.io.FileUtilsTestCase.testIO276()
org.apache.commons.io.FileUtilsTestCase.testToFile3()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToChild()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFiltering($int$org.apache.commons.io.filefilter.IOFileFilter$java.io.File$boolean)
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered()
org.apache.commons.io.input.BOMInputStreamTest.testReadTwiceWithoutBOM()
org.apache.commons.io.input.XmlStreamReaderTest.testRawContent()
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.tearDown()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip()
org.apache.commons.io.FileUtilsTestCase.testCopyFile2()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest()
org.apache.commons.io.FileUtilsTestCase.testListFiles()
org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude()
org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp()
org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoFile()
org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteForce()
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.output.TeeOutputStreamTest$RecordCloseByteArrayOutputStream.close()
org.apache.commons.io.LineIteratorTestCase.createLinesFile($java.io.File$int)
org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileDelete()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeEncoding($java.lang.String$java.lang.String)
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray()
org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullFile()
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnCannotDeleteFile()
org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory_Errors()
org.apache.commons.io.filefilter.FileFilterTestCase.testOr()
org.apache.commons.io.FileUtilsTestCase.setUp()
org.apache.commons.io.output.TeeOutputStreamTest.assertByteArrayEquals($java.lang.String$byte[]$byte[])
org.apache.commons.io.LineIteratorTestCase.setUp()
org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyNullEncoding()
org.apache.commons.io.FileUtilsTestCase.testSizeOf()
org.apache.commons.io.FileUtilsTestCase.testChecksumCRC32()
org.apache.commons.io.FileUtilsTestCase.testToFile4()
org.apache.commons.io.FileUtilsTestCase.testToFiles1()
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude()
org.apache.commons.io.FileUtilsTestCase.testContentEquals()
org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithEncoding()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testCopyFile1()
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkFile()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory()
org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile()
org.apache.commons.io.monitor.AbstractMonitorTestCase.tearDown()
org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNull()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList_fromArray()
org.apache.commons.io.FileUtilsTestCase.testReadFileToByteArray()
org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile1()
org.apache.commons.io.LineIteratorTestCase.createLinesFile($java.io.File$java.lang.String$int)
org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList()
org.apache.commons.io.input.CharSequenceInputStreamTest.testWithBufferedRead($java.lang.String$java.lang.String)
org.apache.commons.io.FileUtilsTestCase.testFileUtils()
org.apache.commons.io.monitor.FileObserverTestCase.testDirectory()
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testFileDoesNotExistBug()
org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding()
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithParentSymlinks()
org.apache.commons.io.input.CharSequenceInputStreamTest.<clinit>()
org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.output.ProxyWriterTest.testNullCharSequencec()
