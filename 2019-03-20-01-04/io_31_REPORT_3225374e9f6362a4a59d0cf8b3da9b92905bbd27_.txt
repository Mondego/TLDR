NUMBER OF NEW OR CHANGED ENTITIES : 293
NUMBER OF NEW OR CHANGED TESTS : 313
NUMBER OF ENTITY TO TEST : 445
NUMBER OF TEST TO RUN : 578
TOTAL TIME REQUIRED : 2.36297778 second
======================================================
======================================================
NEW OR CHANGED ENTITIES : 


org.apache.commons.io.input.Tailer.run()
org.apache.commons.io.comparator.DirectoryFileComparator.<clinit>()
org.apache.commons.io.FileUtils.writeByteArrayToFile($java.io.File$byte[]$int$int)
org.apache.commons.io.FileUtils.isFileOlder($java.io.File$java.io.File)
org.apache.commons.io.IOUtils.readLines($java.io.Reader)
org.apache.commons.io.FileUtils.moveFile($java.io.File$java.io.File)
org.apache.commons.io.IOUtils.toString($java.net.URL)
org.apache.commons.io.input.Tailer.<init>($java.io.File$org.apache.commons.io.input.TailerListener)
org.apache.commons.io.IOUtils.copyLarge($java.io.Reader$java.io.Writer$long$long$char[])
org.apache.commons.io.comparator.PathFileComparator.<clinit>()
org.apache.commons.io.FileUtils.copyFile($java.io.File$java.io.File)
org.apache.commons.io.comparator.SizeFileComparator.SIZE_SUMDIR_COMPARATOR
org.apache.commons.io.input.Tailer.getDelay()
org.apache.commons.io.FileUtils.copyDirectory($java.io.File$java.io.File$java.io.FileFilter)
org.apache.commons.io.FileUtils.toFile($java.net.URL)
org.apache.commons.io.input.BOMInputStream.hasBOM()
org.apache.commons.io.IOUtils.<clinit>()
org.apache.commons.io.IOUtils.copyLarge($java.io.Reader$java.io.Writer$long$long)
org.apache.commons.io.comparator.SizeFileComparator.SIZE_REVERSE
org.apache.commons.io.comparator.NameFileComparator.NAME_REVERSE
org.apache.commons.io.IOUtils.toString($java.net.URI$java.lang.String)
org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL($java.io.Reader$java.io.Reader)
org.apache.commons.io.input.XmlStreamReader.UTF_32BE
org.apache.commons.io.FileUtils.writeByteArrayToFile($java.io.File$byte[]$boolean)
org.apache.commons.io.input.XmlStreamReader.UTF_32
org.apache.commons.io.input.Tailer.stop()
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String$java.nio.charset.Charset$boolean)
org.apache.commons.io.comparator.NameFileComparator.NAME_SYSTEM_REVERSE
org.apache.commons.io.input.BOMInputStream.find()
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence)
org.apache.commons.io.input.Tailer.getFile()
org.apache.commons.io.input.Tailer.getRun()
org.apache.commons.io.FileUtils.copyURLToFile($java.net.URL$java.io.File)
org.apache.commons.io.FileUtils.sizeOfDirectory($java.io.File)
org.apache.commons.io.FileUtils.writeByteArrayToFile($java.io.File$byte[]$int$int$boolean)
org.apache.commons.io.IOUtils.closeQuietly($java.io.Writer)
org.apache.commons.io.input.BOMInputStream.ByteOrderMarkLengthComparator
org.apache.commons.io.IOUtils.contentEquals($java.io.InputStream$java.io.InputStream)
org.apache.commons.io.IOUtils.copy($java.io.Reader$java.io.Writer)
org.apache.commons.io.FileUtils.iterateFiles($java.io.File$java.lang.String[]$boolean)
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_INSENSITIVE_REVERSE
org.apache.commons.io.comparator.PathFileComparator.PATH_REVERSE
org.apache.commons.io.comparator.SizeFileComparator.SIZE_COMPARATOR
org.apache.commons.io.FileUtils.readLines($java.io.File$java.nio.charset.Charset)
org.apache.commons.io.FileUtils.sizeOfDirectoryAsBigInteger($java.io.File)
org.apache.commons.io.FileUtils.ONE_KB_BI
org.apache.commons.io.IOUtils.write($byte[]$java.io.Writer$java.lang.String)
org.apache.commons.io.FileUtils.isSymlink($java.io.File)
org.apache.commons.io.FileUtils.isFileNewer($java.io.File$java.util.Date)
org.apache.commons.io.FileUtils.copyDirectory($java.io.File$java.io.File$java.io.FileFilter$boolean)
org.apache.commons.io.FileUtils.listFilesAndDirs($java.io.File$org.apache.commons.io.filefilter.IOFileFilter$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.IOUtils.toString($java.net.URI$java.nio.charset.Charset)
org.apache.commons.io.FileUtils.copyFileToDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.IOUtils.copy($java.io.InputStream$java.io.Writer$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.copyLarge($java.io.InputStream$java.io.OutputStream$long$long$byte[])
org.apache.commons.io.IOUtils.read($java.io.Reader$char[]$int$int)
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String$java.nio.charset.Charset)
org.apache.commons.io.FileUtils.sizeOf($java.io.File)
org.apache.commons.io.IOUtils.toByteArray($java.net.URL)
org.apache.commons.io.input.BOMInputStream$1.compare($org.apache.commons.io.ByteOrderMark$org.apache.commons.io.ByteOrderMark)
org.apache.commons.io.IOUtils.write($java.lang.String$java.io.Writer)
org.apache.commons.io.FileUtils.isFileOlder($java.io.File$long)
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence$boolean)
org.apache.commons.io.IOUtils.write($java.lang.CharSequence$java.io.OutputStream$java.lang.String)
org.apache.commons.io.IOUtils.copyLarge($java.io.InputStream$java.io.OutputStream)
org.apache.commons.io.IOUtils.toCharArray($java.io.InputStream$java.lang.String)
org.apache.commons.io.IOUtils.write($byte[]$java.io.Writer$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.closeQuietly($java.io.Reader)
org.apache.commons.io.IOUtils.write($java.lang.CharSequence$java.io.OutputStream)
org.apache.commons.io.IOUtils.closeQuietly($java.net.Socket)
org.apache.commons.io.IOUtils.write($char[]$java.io.OutputStream$java.lang.String)
org.apache.commons.io.FileUtils.readFileToString($java.io.File$java.lang.String)
org.apache.commons.io.input.Tailer.create($java.io.File$org.apache.commons.io.input.TailerListener$long$boolean$int)
org.apache.commons.io.IOUtils.copyLarge($java.io.InputStream$java.io.OutputStream$byte[])
org.apache.commons.io.IOUtils.copy($java.io.InputStream$java.io.Writer$java.lang.String)
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence$java.lang.String)
org.apache.commons.io.FileUtils.copyInputStreamToFile($java.io.InputStream$java.io.File)
org.apache.commons.io.IOUtils.write($java.lang.String$java.io.OutputStream)
org.apache.commons.io.IOUtils.toString($java.net.URL$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.closeQuietly($java.net.ServerSocket)
org.apache.commons.io.FileUtils.setUpEffectiveFileFilter($org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtils.cleanDirectory($java.io.File)
org.apache.commons.io.FileUtils.copyDirectoryToDirectory($java.io.File$java.io.File)
org.apache.commons.io.FileUtils.ONE_PB_BI
org.apache.commons.io.FileUtils.ONE_GB_BI
org.apache.commons.io.IOUtils.toByteArray($java.io.Reader)
org.apache.commons.io.IOUtils.toString($java.io.InputStream$java.lang.String)
org.apache.commons.io.comparator.SizeFileComparator.SIZE_SUMDIR_REVERSE
org.apache.commons.io.FileUtils.<clinit>()
org.apache.commons.io.input.BOMInputStream.hasBOM($org.apache.commons.io.ByteOrderMark)
org.apache.commons.io.IOUtils.copyLarge($java.io.InputStream$java.io.OutputStream$long$long)
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String$boolean)
org.apache.commons.io.FileUtils.copyDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.FileUtils.readFileToByteArray($java.io.File)
org.apache.commons.io.FileUtils.sizeOfAsBigInteger($java.io.File)
org.apache.commons.io.FileUtils.listFiles($java.io.File$org.apache.commons.io.filefilter.IOFileFilter$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.IOUtils.closeQuietly($java.io.OutputStream)
org.apache.commons.io.comparator.DefaultFileComparator.<clinit>()
org.apache.commons.io.IOUtils.close($java.net.URLConnection)
org.apache.commons.io.IOUtils.skipFully($java.io.Reader$long)
org.apache.commons.io.FileUtils.readFileToString($java.io.File)
org.apache.commons.io.FileUtils.isFileNewer($java.io.File$long)
org.apache.commons.io.FileUtils.checkDirectory($java.io.File)
org.apache.commons.io.input.Tailer.create($java.io.File$org.apache.commons.io.input.TailerListener$long$boolean)
org.apache.commons.io.FileUtils.validateListFilesParameters($java.io.File$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.IOUtils.readFully($java.io.InputStream$byte[])
org.apache.commons.io.IOUtils.closeQuietly($java.io.InputStream)
org.apache.commons.io.IOUtils.closeQuietly($java.io.Closeable)
org.apache.commons.io.IOUtils.toByteArray($java.io.InputStream)
org.apache.commons.io.FileUtils.doCopyFile($java.io.File$java.io.File$boolean)
org.apache.commons.io.input.XmlStreamReader.<clinit>()
org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding($java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.comparator.DirectoryFileComparator.DIRECTORY_REVERSE
org.apache.commons.io.comparator.PathFileComparator.PATH_SYSTEM_REVERSE
org.apache.commons.io.IOUtils.toCharArray($java.io.InputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.toInputStream($java.lang.String)
org.apache.commons.io.comparator.NameFileComparator.<clinit>()
org.apache.commons.io.input.XmlStreamReader.getContentTypeMime($java.lang.String)
org.apache.commons.io.IOUtils.readFully($java.io.InputStream$byte[]$int$int)
org.apache.commons.io.input.Tailer.<init>($java.io.File$org.apache.commons.io.input.TailerListener$long$boolean$int)
org.apache.commons.io.IOUtils.toByteArray($java.net.URI)
org.apache.commons.io.FileUtils.toSuffixes($java.lang.String[])
org.apache.commons.io.comparator.DirectoryFileComparator.DIRECTORY_COMPARATOR
org.apache.commons.io.input.BOMInputStream$1.compare($java.lang.Object$java.lang.Object)
org.apache.commons.io.input.Tailer.delayMillis
org.apache.commons.io.IOUtils.toString($byte[]$java.lang.String)
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_INSENSITIVE_COMPARATOR
org.apache.commons.io.FileUtils.copyDirectory($java.io.File$java.io.File)
org.apache.commons.io.IOUtils.toByteArray($java.lang.String)
org.apache.commons.io.input.Tailer.DEFAULT_DELAY_MILLIS
org.apache.commons.io.input.BOMInputStream.read($byte[]$int$int)
org.apache.commons.io.FileUtils.toURLs($java.io.File[])
org.apache.commons.io.FileUtils.setUpEffectiveDirFilter($org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.input.BOMInputStream.matches($org.apache.commons.io.ByteOrderMark)
org.apache.commons.io.IOUtils.write($java.lang.String$java.io.OutputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.toString($java.net.URI)
org.apache.commons.io.input.XmlStreamReader.getContentTypeEncoding($java.lang.String)
org.apache.commons.io.input.XmlStreamReader.getXmlProlog($java.io.InputStream$java.lang.String)
org.apache.commons.io.FileUtils.innerListFiles($java.util.Collection$java.io.File$org.apache.commons.io.filefilter.IOFileFilter$boolean)
org.apache.commons.io.comparator.NameFileComparator.NAME_COMPARATOR
org.apache.commons.io.input.BOMInputStream.readFirstBytes()
org.apache.commons.io.input.XmlStreamReader.isAppXml($java.lang.String)
org.apache.commons.io.FileUtils.readLines($java.io.File$java.lang.String)
org.apache.commons.io.IOUtils.copy($java.io.Reader$java.io.OutputStream)
org.apache.commons.io.input.BOMInputStream.getBOM()
org.apache.commons.io.FileUtils.forceDeleteOnExit($java.io.File)
org.apache.commons.io.IOUtils.toByteArray($java.net.URLConnection)
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_COMPARATOR
org.apache.commons.io.IOUtils.toCharArray($java.io.InputStream)
org.apache.commons.io.IOUtils.toByteArray($java.io.Reader$java.lang.String)
org.apache.commons.io.IOUtils.write($java.lang.CharSequence$java.io.Writer)
org.apache.commons.io.FileUtils.ONE_MB_BI
org.apache.commons.io.input.Tailer.<init>($java.io.File$org.apache.commons.io.input.TailerListener$long$boolean$boolean)
org.apache.commons.io.input.Tailer.DEFAULT_BUFSIZE
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String)
org.apache.commons.io.input.BOMInputStream.reset()
org.apache.commons.io.IOUtils.write($java.lang.StringBuffer$java.io.OutputStream)
org.apache.commons.io.input.Tailer.create($java.io.File$org.apache.commons.io.input.TailerListener$long$boolean$boolean)
org.apache.commons.io.IOUtils.toCharArray($java.io.Reader)
org.apache.commons.io.input.Tailer.<init>($java.io.File$org.apache.commons.io.input.TailerListener$long)
org.apache.commons.io.FileUtils.waitFor($java.io.File$int)
org.apache.commons.io.FileUtils.lineIterator($java.io.File)
org.apache.commons.io.comparator.DefaultFileComparator.DEFAULT_COMPARATOR
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence$java.nio.charset.Charset$boolean)
org.apache.commons.io.IOUtils.writeLines($java.util.Collection$java.lang.String$java.io.OutputStream)
org.apache.commons.io.input.Tailer.<init>($java.io.File$org.apache.commons.io.input.TailerListener$long$boolean$boolean$int)
org.apache.commons.io.input.Tailer.readLines($java.io.RandomAccessFile)
org.apache.commons.io.IOUtils.contentEquals($java.io.Reader$java.io.Reader)
org.apache.commons.io.FileUtils.directoryContains($java.io.File$java.io.File)
org.apache.commons.io.IOUtils.copyLarge($java.io.Reader$java.io.Writer)
org.apache.commons.io.FileUtils.moveDirectoryToDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.IOUtils.write($java.lang.StringBuffer$java.io.OutputStream$java.lang.String)
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence$java.lang.String$boolean)
org.apache.commons.io.FileUtils.forceMkdir($java.io.File)
org.apache.commons.io.FileUtils.checksum($java.io.File$java.util.zip.Checksum)
org.apache.commons.io.input.Tailer.reOpen
org.apache.commons.io.IOUtils.write($java.lang.String$java.io.OutputStream$java.lang.String)
org.apache.commons.io.IOUtils.write($java.lang.StringBuffer$java.io.Writer)
org.apache.commons.io.IOUtils.copy($java.io.InputStream$java.io.OutputStream)
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_SYSTEM_REVERSE
org.apache.commons.io.FileUtils.iterateFilesAndDirs($java.io.File$org.apache.commons.io.filefilter.IOFileFilter$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.IOUtils.readLines($java.io.InputStream)
org.apache.commons.io.comparator.NameFileComparator.NAME_INSENSITIVE_REVERSE
org.apache.commons.io.input.BOMInputStream.read($byte[])
org.apache.commons.io.IOUtils.read($java.io.Reader$char[])
org.apache.commons.io.IOUtils.toBufferedReader($java.io.Reader)
org.apache.commons.io.IOUtils.toByteArray($java.io.InputStream$long)
org.apache.commons.io.IOUtils.write($char[]$java.io.Writer)
org.apache.commons.io.FileUtils.isFileOlder($java.io.File$java.util.Date)
org.apache.commons.io.FileUtils.forceDelete($java.io.File)
org.apache.commons.io.FileUtils.iterateFiles($java.io.File$org.apache.commons.io.filefilter.IOFileFilter$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.IOUtils.toString($java.io.InputStream)
org.apache.commons.io.IOUtils.writeLines($java.util.Collection$java.lang.String$java.io.OutputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.writeLines($java.util.Collection$java.lang.String$java.io.OutputStream$java.lang.String)
org.apache.commons.io.IOUtils.lineIterator($java.io.InputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.write($char[]$java.io.OutputStream)
org.apache.commons.io.comparator.SizeFileComparator.<clinit>()
org.apache.commons.io.comparator.NameFileComparator.NAME_INSENSITIVE_COMPARATOR
org.apache.commons.io.IOUtils.toByteArray($java.io.InputStream$int)
org.apache.commons.io.IOUtils.toInputStream($java.lang.CharSequence$java.lang.String)
org.apache.commons.io.FileUtils.moveFileToDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.input.BOMInputStream.skip($long)
org.apache.commons.io.IOUtils.toString($byte[])
org.apache.commons.io.comparator.LastModifiedFileComparator.LASTMODIFIED_REVERSE
org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding($java.lang.String$java.lang.String$java.lang.String$java.lang.String$boolean)
org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL($java.io.File$java.io.File$java.lang.String)
org.apache.commons.io.input.Tailer.inbuf
org.apache.commons.io.IOUtils.lineIterator($java.io.InputStream$java.lang.String)
org.apache.commons.io.FileUtils.readLines($java.io.File)
org.apache.commons.io.IOUtils.read($java.io.InputStream$byte[]$int$int)
org.apache.commons.io.FileUtils.doCopyDirectory($java.io.File$java.io.File$java.io.FileFilter$boolean$java.util.List)
org.apache.commons.io.FileUtils.cleanDirectoryOnExit($java.io.File)
org.apache.commons.io.FileUtils.ONE_TB_BI
org.apache.commons.io.IOUtils.copyLarge($java.io.Reader$java.io.Writer$char[])
org.apache.commons.io.IOUtils.toInputStream($java.lang.String$java.lang.String)
org.apache.commons.io.input.BOMInputStream$1.<init>()
org.apache.commons.io.IOUtils.readLines($java.io.InputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.toInputStream($java.lang.String$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.write($char[]$java.io.OutputStream$java.nio.charset.Charset)
org.apache.commons.io.FileUtils.contentEquals($java.io.File$java.io.File)
org.apache.commons.io.comparator.NameFileComparator.NAME_SYSTEM_COMPARATOR
org.apache.commons.io.input.XmlStreamReader.UTF_32LE
org.apache.commons.io.input.BOMInputStream.getBOMCharsetName()
org.apache.commons.io.FileUtils.toFiles($java.net.URL[])
org.apache.commons.io.IOUtils.lineIterator($java.io.Reader)
org.apache.commons.io.IOUtils.skip($java.io.Reader$long)
org.apache.commons.io.FileUtils.copyFile($java.io.File$java.io.OutputStream)
org.apache.commons.io.FileUtils.lineIterator($java.io.File$java.lang.String)
org.apache.commons.io.input.BOMInputStream.read()
org.apache.commons.io.input.BOMInputStream.<init>($java.io.InputStream$boolean$org.apache.commons.io.ByteOrderMark[])
org.apache.commons.io.FileUtils.byteCountToDisplaySize($long)
org.apache.commons.io.monitor.FileAlterationObserver.<init>($org.apache.commons.io.monitor.FileEntry$java.io.FileFilter$org.apache.commons.io.IOCase)
org.apache.commons.io.IOUtils.closeQuietly($java.nio.channels.Selector)
org.apache.commons.io.FileUtils.deleteQuietly($java.io.File)
org.apache.commons.io.FileUtils.checksumCRC32($java.io.File)
org.apache.commons.io.IOUtils.skipFully($java.io.InputStream$long)
org.apache.commons.io.IOUtils.write($byte[]$java.io.Writer)
org.apache.commons.io.IOUtils.copy($java.io.InputStream$java.io.OutputStream$int)
org.apache.commons.io.comparator.LastModifiedFileComparator.<clinit>()
org.apache.commons.io.IOUtils.readFully($java.io.Reader$char[])
org.apache.commons.io.IOUtils.toString($java.io.Reader)
org.apache.commons.io.IOUtils.write($byte[]$java.io.OutputStream)
org.apache.commons.io.input.Tailer.create($java.io.File$org.apache.commons.io.input.TailerListener$long)
org.apache.commons.io.FileUtils.ONE_EB_BI
org.apache.commons.io.IOUtils.toInputStream($java.lang.CharSequence$java.nio.charset.Charset)
org.apache.commons.io.FileUtils.deleteDirectoryOnExit($java.io.File)
org.apache.commons.io.FileUtils.moveToDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.FileUtils.copyURLToFile($java.net.URL$java.io.File$int$int)
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_REVERSE
org.apache.commons.io.input.Tailer.<init>($java.io.File$org.apache.commons.io.input.TailerListener$long$boolean)
org.apache.commons.io.input.Tailer.create($java.io.File$org.apache.commons.io.input.TailerListener)
org.apache.commons.io.FileUtils.decodeUrl($java.lang.String)
org.apache.commons.io.FileUtils.readFileToString($java.io.File$java.nio.charset.Charset)
org.apache.commons.io.comparator.PathFileComparator.PATH_INSENSITIVE_COMPARATOR
org.apache.commons.io.FileUtils.byteCountToDisplaySize($java.math.BigInteger)
org.apache.commons.io.IOUtils.copy($java.io.Reader$java.io.OutputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.toString($java.io.InputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.skip($java.io.InputStream$long)
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_SYSTEM_COMPARATOR
org.apache.commons.io.input.BOMInputStream.mark($int)
org.apache.commons.io.input.Tailer.create($java.io.File$org.apache.commons.io.input.TailerListener$long$boolean$boolean$int)
org.apache.commons.io.FileUtils.deleteDirectory($java.io.File)
org.apache.commons.io.IOUtils.readFully($java.io.Reader$char[]$int$int)
org.apache.commons.io.IOUtils.toByteArray($java.io.Reader$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.toBufferedInputStream($java.io.InputStream)
org.apache.commons.io.FileUtils.copyFileToDirectory($java.io.File$java.io.File)
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String$java.lang.String$boolean)
org.apache.commons.io.input.Tailer.RAF_MODE
org.apache.commons.io.comparator.PathFileComparator.PATH_COMPARATOR
org.apache.commons.io.FileUtils.listFiles($java.io.File$java.lang.String[]$boolean)
org.apache.commons.io.FileUtils.writeByteArrayToFile($java.io.File$byte[])
org.apache.commons.io.IOUtils.read($java.io.InputStream$byte[])
org.apache.commons.io.IOUtils.readLines($java.io.InputStream$java.lang.String)
org.apache.commons.io.input.BOMInputStream.<clinit>()
org.apache.commons.io.IOUtils.copy($java.io.Reader$java.io.OutputStream$java.lang.String)
org.apache.commons.io.IOUtils.toInputStream($java.lang.CharSequence)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.lang.String$java.util.Collection$java.lang.String$boolean)
org.apache.commons.io.IOUtils.copy($java.io.InputStream$java.io.Writer)
org.apache.commons.io.comparator.ExtensionFileComparator.<clinit>()
org.apache.commons.io.IOUtils.writeLines($java.util.Collection$java.lang.String$java.io.Writer)
org.apache.commons.io.FileUtils.convertFileCollectionToFileArray($java.util.Collection)
org.apache.commons.io.FileUtils.isFileNewer($java.io.File$java.io.File)
org.apache.commons.io.comparator.PathFileComparator.PATH_INSENSITIVE_REVERSE
org.apache.commons.io.FileUtils.moveDirectory($java.io.File$java.io.File)
org.apache.commons.io.input.XmlStreamReader.isTextXml($java.lang.String)
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence$java.nio.charset.Charset)
org.apache.commons.io.comparator.DefaultFileComparator.DEFAULT_REVERSE
org.apache.commons.io.FileUtils.touch($java.io.File)
org.apache.commons.io.comparator.LastModifiedFileComparator.LASTMODIFIED_COMPARATOR
org.apache.commons.io.comparator.PathFileComparator.PATH_SYSTEM_COMPARATOR
org.apache.commons.io.IOUtils.write($java.lang.CharSequence$java.io.OutputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.toString($java.net.URL$java.lang.String)
org.apache.commons.io.FileUtils.copyFile($java.io.File$java.io.File$boolean)
======================================================
======================================================
NEW OR CHANGED TESTS : 


org.apache.commons.io.FileUtilsTestCase.testMoveFile_Errors()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithoutBOM()
org.apache.commons.io.FileUtilsTestCase.testChecksumDouble()
org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory_Errors()
org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithoutBOM()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortListNull()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself()
org.apache.commons.io.IOUtilsTestCase.testNoSkip()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingAdditonalUTF16()
org.apache.commons.io.FileUtilsTestCase.testCopyURLToFileWithTimeout()
org.apache.commons.io.input.XmlStreamReaderTest._testRawBomValid($java.lang.String)
org.apache.commons.io.FileUtilsTestCase.testToFile1()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullIn()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithoutBOMUtf32Be()
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf16Be()
org.apache.commons.io.IOUtilsTestCase.testURIToStringNoEncoding()
org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent()
org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithBOM()
org.apache.commons.io.input.TailerTest$TestTailerListener.handle($java.lang.String)
org.apache.commons.io.IOUtilsTestCase.testURIToStringUsAciiEncoding()
org.apache.commons.io.input.BOMInputStreamTest.testNoBoms()
org.apache.commons.io.input.TailerTest$TestTailerListener.handle($java.lang.Exception)
org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile1()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356($int$int)
org.apache.commons.io.IOUtilsTestCase.testByteArrayToOutputStream()
org.apache.commons.io.FileUtilsTestCase.testMoveFile_Rename()
org.apache.commons.io.IOUtilsTestCase.testSkipStream()
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf32Be()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testDecodeUrlLenient()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf16Be()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullOut()
org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithDefaultEncoding()
org.apache.commons.io.input.compatibility.XmlStreamReader.calculateHttpEncoding($java.lang.String$java.lang.String$java.lang.String$java.lang.String$java.lang.String$java.io.InputStream$boolean)
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf8()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.input.BOMInputStreamTest.<init>()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete()
org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMSingleRead()
org.apache.commons.io.FileUtilsTestCase.testCopyFile2WithoutFileDatePreservation()
org.apache.commons.io.comparator.DirectoryFileComparatorTest.setUp()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullOut()
org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid($java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest.testHttp()
org.apache.commons.io.input.BOMInputStreamTest.testClose()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf32Be()
org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String()
org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir()
org.apache.commons.io.input.BOMInputStreamTest.createUtf32LeDataStream($byte[]$boolean)
org.apache.commons.io.FileUtilsTestCase.testToFile2()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testToString()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingAdditonalUTF32()
org.apache.commons.io.IOUtilsTestCase.testReadStreamWithOffset()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.IOUtilsTestCase.testSkip()
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf8()
org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead()
org.apache.commons.io.FileUtilsTestCase.testCopyFileToOutputStream()
org.apache.commons.io.input.BOMInputStreamTest.createUtf32BeDataStream($byte[]$boolean)
org.apache.commons.io.input.XmlStreamReaderTest.<clinit>()
org.apache.commons.io.input.XmlStreamReaderTest.testRawBomUtf8()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding($java.lang.String$boolean$java.lang.String$java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf16Le()
org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateRawEncoding($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile2()
org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithBOM()
org.apache.commons.io.input.BOMInputStreamTest.testReadSmall()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryPreserveDates()
org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateHttpEncoding($java.lang.String$java.lang.String$java.lang.String$java.lang.String$boolean$java.lang.String)
org.apache.commons.io.IOUtilsTestCase.testToByteArrayFromURL()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testComparator()
org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_IO84()
org.apache.commons.io.IOUtilsTestCase.testURIToStringNullEncoding()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf32Le()
org.apache.commons.io.FileUtilsTestCase.testIterateFiles()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest()
org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete()
org.apache.commons.io.IOUtilsTestCase.testSkipInvalid()
org.apache.commons.io.input.TailerTest.testBufferBreak()
org.apache.commons.io.input.compatibility.XmlStreamReader.<clinit>()
org.apache.commons.io.FileUtilsTestCase.IGNOREtestCopyFileLarge()
org.apache.commons.io.FileUtilsTestCase.testToFiles4()
org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.IOUtilsTestCase.testReadReaderWithOffset()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.input.compatibility.XmlStreamReader.isAppXml($java.lang.String)
org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM()
org.apache.commons.io.comparator.SizeFileComparatorTest.setUp()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullIn()
org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectory()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.tearDown()
org.apache.commons.io.FileUtilsTestCase.testDecodeUrlEncodingUtf8()
org.apache.commons.io.input.TailerTest$TestTailerListener.<init>()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile3()
org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence1()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullOut()
org.apache.commons.io.IOUtilsTestCase.testStringToInputStream()
org.apache.commons.io.input.compatibility.XmlStreamReader.calculateRawEncoding($java.lang.String$java.lang.String$java.lang.String$java.io.InputStream)
org.apache.commons.io.IOUtilsTestCase.testURLToStringUsAciiEncoding()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortList()
org.apache.commons.io.input.compatibility.XmlStreamReader.isTextXml($java.lang.String)
org.apache.commons.io.IOUtilsTestCase.testToByteArrayFromURLConnection()
org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding($java.lang.String$java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.BOMInputStreamTest.testSkipWithoutBOM()
org.apache.commons.io.input.XmlStreamReaderTest.testRawBomUtf32()
org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArray()
org.apache.commons.io.IOUtilsTestCase.testURLToStringNullEncoding()
org.apache.commons.io.input.TailerTest.testLongFile()
org.apache.commons.io.IOUtilsTestCase.testExtraLength()
org.apache.commons.io.IOUtilsTestCase.testURLToString($java.lang.String)
org.apache.commons.io.FileUtilsTestCase.testIterateFilesAndDirs()
org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory($java.io.File$java.io.File$java.io.File)
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.input.TailerTest.createFile($java.io.File$long)
org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithoutBOM()
org.apache.commons.io.comparator.NameFileComparatorTest.testCaseSensitivity()
org.apache.commons.io.FileUtilsTestCase.testCopyToSelf()
org.apache.commons.io.FileUtilsTestCase.<clinit>()
org.apache.commons.io.FileUtilsTestCase.testChecksum()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullIn()
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.createCircularSymLink($java.io.File)
org.apache.commons.io.FileUtilsTestCase.testChecksumOnDirectory()
org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM()
org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_3arg_nullSeparator()
org.apache.commons.io.IOUtilsTestCase.testCharFullLength()
org.apache.commons.io.input.TailerTest$TestTailerListener.fileNotFound()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator()
org.apache.commons.io.input.compatibility.XmlStreamReader.getXMLGuessEncoding($java.io.BufferedInputStream)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateRawEncoding($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.IOUtilsTestCase.testSkipFileReader()
org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySizeBigInteger()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf16Le()
org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testToURLs1()
org.apache.commons.io.FileUtilsTestCase.testForceMkdir()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStreamWithBufferSize()
org.apache.commons.io.input.TailerTest.testStopWithNoFile()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter()
org.apache.commons.io.comparator.PathFileComparatorTest.setUp()
org.apache.commons.io.IOUtilsTestCase.<clinit>()
org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyNonExistent()
org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStreamWithBufferSize($int)
org.apache.commons.io.input.BOMInputStreamTest.parseXml($java.io.InputStream)
org.apache.commons.io.input.TailerTest.tearDown()
org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyDir()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory_Errors()
org.apache.commons.io.FileUtilsTestCase.testToFiles2()
org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterable()
org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithBOM()
org.apache.commons.io.input.TailerTest.testTailer()
org.apache.commons.io.FileUtilsTestCase.testToFile5()
org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectoryAsBigInteger()
org.apache.commons.io.FileUtilsTestCase.testForceDeleteDir()
org.apache.commons.io.comparator.PathFileComparatorTest.testCaseSensitivity()
org.apache.commons.io.IOUtilsTestCase.testSkipReader()
org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateHttpEncoding($java.lang.String$java.lang.String$java.lang.String$java.lang.String$boolean$java.lang.String)
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.comparator.ExtensionFileComparatorTest.setUp()
org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient($java.lang.String$java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullOut()
org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullChecksum()
org.apache.commons.io.comparator.NameFileComparatorTest.setUp()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArray()
org.apache.commons.io.IOUtilsTestCase.testContentEqualsIgnoreEOL()
org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile2()
org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeEncoding($java.lang.String)
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_Writer_nullData()
org.apache.commons.io.FileUtilsTestCase.testDecodeUrl()
org.apache.commons.io.FileUtilsTestCase.testIO300()
org.apache.commons.io.input.BOMInputStreamTest.readBOMInputStreamTwice($java.lang.String)
org.apache.commons.io.IOUtilsTestCase.testCharSkip()
org.apache.commons.io.comparator.SizeFileComparatorTest.testNonexistantFile()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter()
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest()
org.apache.commons.io.input.TailerTest$TestTailerListener.fileRotated()
org.apache.commons.io.input.BOMInputStreamTest.testReadTwiceWithBOM()
org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp()
org.apache.commons.io.input.TailerTest.testTailerEof()
org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory()
org.apache.commons.io.FileUtilsTestCase.testTouch()
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Errors()
org.apache.commons.io.IOUtilsTestCase.testURLToStringNoEncoding()
org.apache.commons.io.FileUtilsTestCase.testToFiles3()
org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMBufferedRead()
org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.IOUtilsTestCase.testReaderToCharArray()
org.apache.commons.io.FileUtilsTestCase.testToFileUtf8()
org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullIn()
org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyForNull()
org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithoutBOM()
org.apache.commons.io.FileUtilsTestCase.testSizeOfAsBigInteger()
org.apache.commons.io.input.BOMInputStreamTest.createUtf16LeDataStream($byte[]$boolean)
org.apache.commons.io.input.XmlStreamReaderTest.testRawBomUtf16()
org.apache.commons.io.input.BOMInputStreamTest$ExpectCloseInputStream.assertCloseCalled()
org.apache.commons.io.FileUtilsTestCase.testToFiles3a()
org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile3()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUcs4()
org.apache.commons.io.input.BOMInputStreamTest.readFile($org.apache.commons.io.input.BOMInputStream)
org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp()
org.apache.commons.io.FileUtilsTestCase.testCopyFile2ToDir()
org.apache.commons.io.FileUtilsTestCase.testDecodeUrlNullSafe()
org.apache.commons.io.FileUtilsTestCase.testReadLines()
org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence2()
org.apache.commons.io.IOUtilsTestCase.testContentEqualsReaderReader()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding()
org.apache.commons.io.IOUtilsTestCase.testCharExtraLength()
org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyFile()
org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithBOM()
org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithBOM()
org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder()
org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Rename()
org.apache.commons.io.input.BOMInputStreamTest.testSupportCode()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors()
org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySizeLong()
org.apache.commons.io.input.compatibility.XmlStreamReader.getBOMEncoding($java.io.BufferedInputStream)
org.apache.commons.io.comparator.DefaultFileComparatorTest.setUp()
org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete_Failed()
org.apache.commons.io.IOUtilsTestCase.testReadReader()
org.apache.commons.io.input.BOMInputStreamTest.createUtf16BeDataStream($byte[]$boolean)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.FileUtilsTestCase.testToURLs3a()
org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullIn()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp()
org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithoutBOM()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356()
org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeMime($java.lang.String)
org.apache.commons.io.FileUtilsTestCase.testToFile3()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToChild()
org.apache.commons.io.FileUtilsTestCase.testIO276()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testReverseComparator()
org.apache.commons.io.IOUtilsTestCase.testFullLength()
org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithoutBOM()
org.apache.commons.io.comparator.ExtensionFileComparatorTest.testCaseSensitivity()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered()
org.apache.commons.io.input.BOMInputStreamTest.testReadTwiceWithoutBOM()
org.apache.commons.io.input.XmlStreamReaderTest.testRawContent()
org.apache.commons.io.IOUtilsTestCase.testCharSequenceToInputStream()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithoutBOMUtf32Le()
org.apache.commons.io.FileUtilsTestCase.testCopyFile2()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest()
org.apache.commons.io.FileUtilsTestCase.testListFiles()
org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude()
org.apache.commons.io.IOUtilsTestCase.testReadLines_Reader()
org.apache.commons.io.IOUtilsTestCase.testReadStream()
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.input.TailerTest$TestTailerListener.getLines()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding()
org.apache.commons.io.input.TailerTest$TestTailerListener.init($org.apache.commons.io.input.Tailer)
org.apache.commons.io.IOUtilsTestCase.testURIToString($java.lang.String)
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_IO84()
org.apache.commons.io.IOUtilsTestCase.testToByteArrayFromURI()
org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullFile()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullOut()
org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory_Errors()
org.apache.commons.io.input.BOMInputStreamTest.testSkipWithBOM()
org.apache.commons.io.IOUtilsTestCase.testSkipFileInput()
org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor()
org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArrayWithEncoding()
org.apache.commons.io.input.TailerTest$TestTailerListener.clear()
org.apache.commons.io.input.XmlStreamReaderTest.getXML($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.FileUtilsTestCase.testSizeOf()
org.apache.commons.io.FileUtilsTestCase.testChecksumCRC32()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding()
org.apache.commons.io.FileUtilsTestCase.testToFile4()
org.apache.commons.io.FileUtilsTestCase.testToFiles1()
org.apache.commons.io.input.BOMInputStreamTest.assertData($byte[]$byte[]$int)
org.apache.commons.io.FileUtilsTestCase.testContentEquals()
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullIn()
org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithEncoding()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullOut()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testCopyFile1()
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf32Le()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUcs2()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory()
org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile()
org.apache.commons.io.input.compatibility.XmlStreamReader.getXmlProlog($java.io.BufferedInputStream$java.lang.String)
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithOffsetAndLength()
org.apache.commons.io.input.BOMInputStreamTest.parseXml($java.io.Reader)
org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile1()
org.apache.commons.io.FileUtilsTestCase.testReadFileToByteArray()
org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream($byte[]$boolean)
org.apache.commons.io.IOUtilsTestCase.testCharSkipInvalid()
org.apache.commons.io.FileUtilsTestCase.testFileUtils()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArrayNull()
org.apache.commons.io.input.TailerTest.testIO335()
org.apache.commons.io.IOUtilsTestCase.testCharNoSkip()
org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
======================================================
======================================================
ALL ENTITY TO TEST : 


org.apache.commons.io.input.Tailer.run()
org.apache.commons.io.comparator.DirectoryFileComparator.<clinit>()
org.apache.commons.io.monitor.FileAlterationObserver.getListeners()
org.apache.commons.io.FileUtils.writeByteArrayToFile($java.io.File$byte[]$int$int)
org.apache.commons.io.input.XmlStreamReader.<init>($java.io.InputStream)
org.apache.commons.io.filefilter.FileFilterUtils.filter($org.apache.commons.io.filefilter.IOFileFilter$java.io.File[])
org.apache.commons.io.IOUtils.toString($java.net.URL)
org.apache.commons.io.input.Tailer.<init>($java.io.File$org.apache.commons.io.input.TailerListener)
org.apache.commons.io.IOUtils.copyLarge($java.io.Reader$java.io.Writer$long$long$char[])
org.apache.commons.io.LineIterator.nextLine()
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.io.File$java.nio.charset.Charset)
org.apache.commons.io.monitor.FileAlterationObserver.removeListener($org.apache.commons.io.monitor.FileAlterationListener)
org.apache.commons.io.input.BOMInputStream.fbLength
org.apache.commons.io.FileSystemUtils.freeSpaceKb()
org.apache.commons.io.output.LockableFileWriter.<init>($java.io.File$java.nio.charset.Charset)
org.apache.commons.io.FileUtils.toFile($java.net.URL)
org.apache.commons.io.monitor.FilesystemObserver.<init>($java.io.File$java.io.FileFilter)
org.apache.commons.io.monitor.FileAlterationObserver.<init>($java.io.File$java.io.FileFilter)
org.apache.commons.io.output.LockableFileWriter.<init>($java.io.File$boolean)
org.apache.commons.io.input.Tailer.file
org.apache.commons.io.monitor.FilesystemObserver.<init>($java.lang.String)
org.apache.commons.io.output.LockableFileWriter.<init>($java.io.File$java.lang.String)
org.apache.commons.io.input.Tailer.getFile()
org.apache.commons.io.input.Tailer.getRun()
org.apache.commons.io.output.LockableFileWriter.<init>($java.io.File$java.nio.charset.Charset$boolean$java.lang.String)
org.apache.commons.io.FileUtils.sizeOfDirectory($java.io.File)
org.apache.commons.io.FileUtils.UTF8
org.apache.commons.io.input.BOMInputStream.markFbIndex
org.apache.commons.io.input.BOMInputStream.ByteOrderMarkLengthComparator
org.apache.commons.io.FileUtils.iterateFiles($java.io.File$java.lang.String[]$boolean)
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_INSENSITIVE_REVERSE
org.apache.commons.io.output.LockableFileWriter.<init>($java.io.File$java.lang.String$boolean$java.lang.String)
org.apache.commons.io.comparator.PathFileComparator.PATH_REVERSE
org.apache.commons.io.comparator.SizeFileComparator.SIZE_COMPARATOR
org.apache.commons.io.IOUtils.LINE_SEPARATOR
org.apache.commons.io.filefilter.DelegateFileFilter.accept($java.io.File$java.lang.String)
org.apache.commons.io.FileUtils.isFileNewer($java.io.File$java.util.Date)
org.apache.commons.io.FileUtils.copyDirectory($java.io.File$java.io.File$java.io.FileFilter$boolean)
org.apache.commons.io.FileSystemUtils.freeSpace($java.lang.String)
org.apache.commons.io.input.Tailer.end
org.apache.commons.io.IOUtils.toString($java.net.URI$java.nio.charset.Charset)
org.apache.commons.io.FileUtils.copyFileToDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.IOUtils.copy($java.io.InputStream$java.io.Writer$java.nio.charset.Charset)
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.io.File$java.lang.String$boolean)
org.apache.commons.io.monitor.FilesystemObserver.<init>($java.lang.String$java.io.FileFilter)
org.apache.commons.io.IOUtils.read($java.io.Reader$char[]$int$int)
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String$java.nio.charset.Charset)
org.apache.commons.io.FileUtils.sizeOf($java.io.File)
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String$java.lang.String)
org.apache.commons.io.IOUtils.toByteArray($java.net.URL)
org.apache.commons.io.monitor.FileAlterationObserver.toString()
org.apache.commons.io.IOUtils.copyLarge($java.io.InputStream$java.io.OutputStream)
org.apache.commons.io.IOUtils.toCharArray($java.io.InputStream$java.lang.String)
org.apache.commons.io.IOUtils.closeQuietly($java.net.Socket)
org.apache.commons.io.IOUtils.write($char[]$java.io.OutputStream$java.lang.String)
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.io.File$java.nio.charset.Charset$boolean)
org.apache.commons.io.input.XmlStreamReader.<init>($java.net.URLConnection$java.lang.String)
org.apache.commons.io.IOUtils.copyLarge($java.io.InputStream$java.io.OutputStream$byte[])
org.apache.commons.io.FileUtils.copyInputStreamToFile($java.io.InputStream$java.io.File)
org.apache.commons.io.filefilter.AndFileFilter.accept($java.io.File)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.util.Collection$java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.filter($org.apache.commons.io.filefilter.IOFileFilter$java.lang.Iterable$java.util.Collection)
org.apache.commons.io.IOUtils.closeQuietly($java.net.ServerSocket)
org.apache.commons.io.FileUtils.setUpEffectiveFileFilter($org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtils.cleanDirectory($java.io.File)
org.apache.commons.io.comparator.SizeFileComparator.compare($java.io.File$java.io.File)
org.apache.commons.io.FileUtils.ONE_PB_BI
org.apache.commons.io.FileUtils.copyDirectoryToDirectory($java.io.File$java.io.File)
org.apache.commons.io.FileUtils.ONE_GB_BI
org.apache.commons.io.monitor.FilesystemObserver.<init>($java.lang.String$java.io.FileFilter$java.util.Comparator)
org.apache.commons.io.IOUtils.toByteArray($java.io.Reader)
org.apache.commons.io.input.BOMInputStream.hasBOM($org.apache.commons.io.ByteOrderMark)
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String$boolean)
org.apache.commons.io.FileUtils.readFileToByteArray($java.io.File)
org.apache.commons.io.FileUtils.sizeOfAsBigInteger($java.io.File)
org.apache.commons.io.FileUtils.listFiles($java.io.File$org.apache.commons.io.filefilter.IOFileFilter$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.input.BOMInputStream.boms
org.apache.commons.io.comparator.DefaultFileComparator.<clinit>()
org.apache.commons.io.input.BOMInputStream.include
org.apache.commons.io.FileUtils.isFileNewer($java.io.File$long)
org.apache.commons.io.monitor.FileAlterationObserver.<init>($java.lang.String$java.io.FileFilter)
org.apache.commons.io.IOUtils.readFully($java.io.InputStream$byte[])
org.apache.commons.io.IOUtils.closeQuietly($java.io.InputStream)
org.apache.commons.io.IOUtils.closeQuietly($java.io.Closeable)
org.apache.commons.io.FileSystemUtils.freeSpaceWindows($java.lang.String$long)
org.apache.commons.io.FileUtils.doCopyFile($java.io.File$java.io.File$boolean)
org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding($java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.comparator.DirectoryFileComparator.DIRECTORY_REVERSE
org.apache.commons.io.comparator.NameFileComparator.<clinit>()
org.apache.commons.io.input.Tailer.<init>($java.io.File$org.apache.commons.io.input.TailerListener$long$boolean$int)
org.apache.commons.io.FileUtils.toSuffixes($java.lang.String[])
org.apache.commons.io.IOUtils.toByteArray($java.net.URI)
org.apache.commons.io.comparator.DirectoryFileComparator.DIRECTORY_COMPARATOR
org.apache.commons.io.monitor.FileAlterationObserver.doDelete($org.apache.commons.io.monitor.FileEntry)
org.apache.commons.io.FileUtils.copyDirectory($java.io.File$java.io.File)
org.apache.commons.io.IOUtils.toByteArray($java.lang.String)
org.apache.commons.io.input.BOMInputStream.read($byte[]$int$int)
org.apache.commons.io.input.BOMInputStream.<init>($java.io.InputStream$boolean)
org.apache.commons.io.IOUtils.toString($java.net.URI)
org.apache.commons.io.input.XmlStreamReader.getContentTypeEncoding($java.lang.String)
org.apache.commons.io.comparator.NameFileComparator.NAME_COMPARATOR
org.apache.commons.io.input.XmlStreamReader.<init>($java.io.InputStream$java.lang.String$boolean)
org.apache.commons.io.input.BOMInputStream.readFirstBytes()
org.apache.commons.io.FileUtils.readLines($java.io.File$java.lang.String)
org.apache.commons.io.IOUtils.copy($java.io.Reader$java.io.OutputStream)
org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy.doDelete($java.io.File)
org.apache.commons.io.input.XmlStreamReader.<init>($java.io.InputStream$java.lang.String$boolean$java.lang.String)
org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify()
org.apache.commons.io.IOUtils.toByteArray($java.net.URLConnection)
org.apache.commons.io.IOUtils.toCharArray($java.io.InputStream)
org.apache.commons.io.IOUtils.toByteArray($java.io.Reader$java.lang.String)
org.apache.commons.io.IOUtils.write($java.lang.CharSequence$java.io.Writer)
org.apache.commons.io.input.Tailer.<init>($java.io.File$org.apache.commons.io.input.TailerListener$long$boolean$boolean)
org.apache.commons.io.input.Tailer.DEFAULT_BUFSIZE
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String)
org.apache.commons.io.input.Tailer.create($java.io.File$org.apache.commons.io.input.TailerListener$long$boolean$boolean)
org.apache.commons.io.IOUtils.toCharArray($java.io.Reader)
org.apache.commons.io.output.XmlStreamWriter.<clinit>()
org.apache.commons.io.FileUtils.waitFor($java.io.File$int)
org.apache.commons.io.FileUtils.lineIterator($java.io.File)
org.apache.commons.io.filefilter.FileFilterUtils.filter($org.apache.commons.io.filefilter.IOFileFilter$java.lang.Iterable)
org.apache.commons.io.IOUtils.writeLines($java.util.Collection$java.lang.String$java.io.OutputStream)
org.apache.commons.io.input.Tailer.<init>($java.io.File$org.apache.commons.io.input.TailerListener$long$boolean$boolean$int)
org.apache.commons.io.input.Tailer.readLines($java.io.RandomAccessFile)
org.apache.commons.io.FileUtils.directoryContains($java.io.File$java.io.File)
org.apache.commons.io.input.XmlStreamReader.XML_GUESS_BYTES
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence$java.lang.String$boolean)
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.io.File$java.lang.String)
org.apache.commons.io.FileUtils.checksum($java.io.File$java.util.zip.Checksum)
org.apache.commons.io.input.Tailer.reOpen
org.apache.commons.io.IOUtils.write($java.lang.String$java.io.OutputStream$java.lang.String)
org.apache.commons.io.IOUtils.write($java.lang.StringBuffer$java.io.Writer)
org.apache.commons.io.input.XmlStreamReader.<init>($java.io.File)
org.apache.commons.io.monitor.FileAlterationObserver.<init>($java.io.File)
org.apache.commons.io.IOUtils.copy($java.io.InputStream$java.io.OutputStream)
org.apache.commons.io.comparator.NameFileComparator.NAME_INSENSITIVE_REVERSE
org.apache.commons.io.input.BOMInputStream.read($byte[])
org.apache.commons.io.IOUtils.read($java.io.Reader$char[])
org.apache.commons.io.IOUtils.toBufferedReader($java.io.Reader)
org.apache.commons.io.IOUtils.toByteArray($java.io.InputStream$long)
org.apache.commons.io.IOUtils.write($char[]$java.io.Writer)
org.apache.commons.io.FileUtils.isFileOlder($java.io.File$java.util.Date)
org.apache.commons.io.input.XmlStreamReader.CHARSET_PATTERN
org.apache.commons.io.FileUtils.forceDelete($java.io.File)
org.apache.commons.io.IOUtils.toString($java.io.InputStream)
org.apache.commons.io.IOUtils.writeLines($java.util.Collection$java.lang.String$java.io.OutputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.writeLines($java.util.Collection$java.lang.String$java.io.OutputStream$java.lang.String)
org.apache.commons.io.IOUtils.write($char[]$java.io.OutputStream)
org.apache.commons.io.comparator.NameFileComparator.NAME_INSENSITIVE_COMPARATOR
org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry($org.apache.commons.io.monitor.FileEntry$java.io.File)
org.apache.commons.io.IOUtils.toInputStream($java.lang.CharSequence$java.lang.String)
org.apache.commons.io.FileUtils.moveFileToDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.input.BOMInputStream.markedAtStart
org.apache.commons.io.IOUtils.toString($byte[])
org.apache.commons.io.comparator.LastModifiedFileComparator.LASTMODIFIED_REVERSE
org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding($java.lang.String$java.lang.String$java.lang.String$java.lang.String$boolean)
org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL($java.io.File$java.io.File$java.lang.String)
org.apache.commons.io.IOUtils.read($java.io.InputStream$byte[]$int$int)
org.apache.commons.io.monitor.FileObserver.<init>($java.io.File$java.io.FileFilter)
org.apache.commons.io.FileUtils.ONE_TB_BI
org.apache.commons.io.input.BOMInputStream$1.<init>()
org.apache.commons.io.IOUtils.readLines($java.io.InputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.toInputStream($java.lang.String$java.nio.charset.Charset)
org.apache.commons.io.output.LockableFileWriter.<init>($java.io.File$boolean$java.lang.String)
org.apache.commons.io.input.XmlStreamReader.<init>($java.io.InputStream$java.lang.String)
org.apache.commons.io.IOUtils.write($char[]$java.io.OutputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.DIR_SEPARATOR
org.apache.commons.io.comparator.NameFileComparator.NAME_SYSTEM_COMPARATOR
org.apache.commons.io.FileSystemUtils.freeSpaceOS($java.lang.String$int$boolean$long)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.lang.String$java.util.Collection)
org.apache.commons.io.FileUtils.toFiles($java.net.URL[])
org.apache.commons.io.IOUtils.lineIterator($java.io.Reader)
org.apache.commons.io.IOUtils.skip($java.io.Reader$long)
org.apache.commons.io.FileUtils.copyFile($java.io.File$java.io.OutputStream)
org.apache.commons.io.input.BOMInputStream.<init>($java.io.InputStream$boolean$org.apache.commons.io.ByteOrderMark[])
org.apache.commons.io.FileUtils.byteCountToDisplaySize($long)
org.apache.commons.io.input.BOMInputStream.<init>($java.io.InputStream$org.apache.commons.io.ByteOrderMark[])
org.apache.commons.io.IOUtils.closeQuietly($java.nio.channels.Selector)
org.apache.commons.io.monitor.FileObserver.<init>($org.apache.commons.io.monitor.FileEntry$java.io.FileFilter$org.apache.commons.io.IOCase)
org.apache.commons.io.FileUtils.checksumCRC32($java.io.File)
org.apache.commons.io.FileSystemUtils.freeSpaceKb($long)
org.apache.commons.io.IOUtils.write($byte[]$java.io.Writer)
org.apache.commons.io.IOUtils.toString($java.io.Reader)
org.apache.commons.io.output.LockableFileWriter.<init>($java.lang.String$boolean$java.lang.String)
org.apache.commons.io.monitor.FileObserver.<init>($java.lang.String$java.io.FileFilter)
org.apache.commons.io.IOUtils.toInputStream($java.lang.CharSequence$java.nio.charset.Charset)
org.apache.commons.io.input.XmlStreamReader.doLenientDetection($java.lang.String$org.apache.commons.io.input.XmlStreamReaderException)
org.apache.commons.io.FileUtils.copyURLToFile($java.net.URL$java.io.File$int$int)
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_REVERSE
org.apache.commons.io.LineIterator.close()
org.apache.commons.io.input.Tailer.<init>($java.io.File$org.apache.commons.io.input.TailerListener$long$boolean)
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.io.File$java.nio.charset.CharsetEncoder$boolean)
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.lang.String$java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.filterList($org.apache.commons.io.filefilter.IOFileFilter$java.io.File[])
org.apache.commons.io.FileUtils.byteCountToDisplaySize($java.math.BigInteger)
org.apache.commons.io.filefilter.AndFileFilter.accept($java.io.File$java.lang.String)
org.apache.commons.io.IOUtils.readFully($java.io.Reader$char[]$int$int)
org.apache.commons.io.input.XmlStreamReader.BOMS
org.apache.commons.io.IOUtils.toByteArray($java.io.Reader$java.nio.charset.Charset)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.util.Collection$boolean)
org.apache.commons.io.IOUtils.toBufferedInputStream($java.io.InputStream)
org.apache.commons.io.comparator.PathFileComparator.PATH_COMPARATOR
org.apache.commons.io.monitor.FileAlterationObserver.getDirectory()
org.apache.commons.io.monitor.FileAlterationObserver.getFileFilter()
org.apache.commons.io.FileUtils.writeByteArrayToFile($java.io.File$byte[])
org.apache.commons.io.output.LockableFileWriter.<init>($java.lang.String$boolean)
org.apache.commons.io.IOUtils.readLines($java.io.InputStream$java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.filterSet($org.apache.commons.io.filefilter.IOFileFilter$java.io.File[])
org.apache.commons.io.FileUtils.EMPTY_FILE_ARRAY
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.lang.String$java.util.Collection$java.lang.String$boolean)
org.apache.commons.io.IOUtils.writeLines($java.util.Collection$java.lang.String$java.io.Writer)
org.apache.commons.io.FileUtils.convertFileCollectionToFileArray($java.util.Collection)
org.apache.commons.io.FileCleaningTracker$Reaper.run()
org.apache.commons.io.input.XmlStreamReader.isTextXml($java.lang.String)
org.apache.commons.io.comparator.DefaultFileComparator.DEFAULT_REVERSE
org.apache.commons.io.comparator.LastModifiedFileComparator.LASTMODIFIED_COMPARATOR
org.apache.commons.io.filefilter.NotFileFilter.accept($java.io.File)
org.apache.commons.io.IOUtils.SKIP_CHAR_BUFFER
org.apache.commons.io.FileUtils.isFileOlder($java.io.File$java.io.File)
org.apache.commons.io.monitor.FileAlterationObserver.rootEntry
org.apache.commons.io.IOUtils.readLines($java.io.Reader)
org.apache.commons.io.FileUtils.moveFile($java.io.File$java.io.File)
org.apache.commons.io.filefilter.AbstractFileFilter.accept($java.io.File)
org.apache.commons.io.FileSystemUtils.freeSpaceUnix($java.lang.String$boolean$boolean$long)
org.apache.commons.io.comparator.PathFileComparator.<clinit>()
org.apache.commons.io.FileUtils.copyFile($java.io.File$java.io.File)
org.apache.commons.io.monitor.FileAlterationMonitor.run()
org.apache.commons.io.comparator.SizeFileComparator.SIZE_SUMDIR_COMPARATOR
org.apache.commons.io.input.XmlStreamReader.<init>($java.net.URL)
org.apache.commons.io.input.Tailer.getDelay()
org.apache.commons.io.FileUtils.copyDirectory($java.io.File$java.io.File$java.io.FileFilter)
org.apache.commons.io.input.BOMInputStream.hasBOM()
org.apache.commons.io.IOUtils.SKIP_BYTE_BUFFER
org.apache.commons.io.IOUtils.<clinit>()
org.apache.commons.io.IOUtils.copyLarge($java.io.Reader$java.io.Writer$long$long)
org.apache.commons.io.comparator.SizeFileComparator.SIZE_REVERSE
org.apache.commons.io.output.DeferredFileOutputStream.writeTo($java.io.OutputStream)
org.apache.commons.io.output.LockableFileWriter.<init>($java.io.File)
org.apache.commons.io.monitor.FilesystemObserver.<init>($java.io.File)
org.apache.commons.io.comparator.NameFileComparator.NAME_REVERSE
org.apache.commons.io.IOUtils.toString($java.net.URI$java.lang.String)
org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL($java.io.Reader$java.io.Reader)
org.apache.commons.io.input.XmlStreamReader.UTF_32BE
org.apache.commons.io.input.XmlStreamReader.ENCODING_PATTERN
org.apache.commons.io.FileUtils.writeByteArrayToFile($java.io.File$byte[]$boolean)
org.apache.commons.io.input.XmlStreamReader.UTF_32
org.apache.commons.io.input.Tailer.stop()
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String$java.nio.charset.Charset$boolean)
org.apache.commons.io.comparator.NameFileComparator.NAME_SYSTEM_REVERSE
org.apache.commons.io.input.BOMInputStream.find()
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.lang.String$java.util.Collection$java.lang.String)
org.apache.commons.io.FileUtils.copyURLToFile($java.net.URL$java.io.File)
org.apache.commons.io.filefilter.AgeFileFilter.accept($java.io.File)
org.apache.commons.io.monitor.FileObserver.<init>($java.io.File)
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.lang.String$java.nio.charset.CharsetEncoder$boolean)
org.apache.commons.io.FileUtils.writeByteArrayToFile($java.io.File$byte[]$int$int$boolean)
org.apache.commons.io.monitor.FileObserver.<init>($java.lang.String)
org.apache.commons.io.input.Tailer.listener
org.apache.commons.io.monitor.FileAlterationObserver.addListener($org.apache.commons.io.monitor.FileAlterationListener)
org.apache.commons.io.IOUtils.closeQuietly($java.io.Writer)
org.apache.commons.io.IOUtils.contentEquals($java.io.InputStream$java.io.InputStream)
org.apache.commons.io.filefilter.OrFileFilter.accept($java.io.File$java.lang.String)
org.apache.commons.io.IOUtils.copy($java.io.Reader$java.io.Writer)
org.apache.commons.io.input.BOMInputStream.fbIndex
org.apache.commons.io.filefilter.FileFilterUtils.filterSet($org.apache.commons.io.filefilter.IOFileFilter$java.lang.Iterable)
org.apache.commons.io.FileUtils.readLines($java.io.File$java.nio.charset.Charset)
org.apache.commons.io.FileUtils.sizeOfDirectoryAsBigInteger($java.io.File)
org.apache.commons.io.FileUtils.ONE_KB_BI
org.apache.commons.io.input.BOMInputStream.<init>($java.io.InputStream)
org.apache.commons.io.IOUtils.write($byte[]$java.io.Writer$java.lang.String)
org.apache.commons.io.FileUtils.isSymlink($java.io.File)
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.lang.String$java.nio.charset.CharsetEncoder)
org.apache.commons.io.FileUtils.listFilesAndDirs($java.io.File$org.apache.commons.io.filefilter.IOFileFilter$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.monitor.FileObserver.<init>($java.io.File$java.io.FileFilter$org.apache.commons.io.IOCase)
org.apache.commons.io.IOUtils.copyLarge($java.io.InputStream$java.io.OutputStream$long$long$byte[])
org.apache.commons.io.input.BOMInputStream$1.compare($org.apache.commons.io.ByteOrderMark$org.apache.commons.io.ByteOrderMark)
org.apache.commons.io.IOUtils.write($java.lang.String$java.io.Writer)
org.apache.commons.io.FileUtils.isFileOlder($java.io.File$long)
org.apache.commons.io.output.FileWriterWithEncoding.initWriter($java.io.File$java.lang.Object$boolean)
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence$boolean)
org.apache.commons.io.IOUtils.write($java.lang.CharSequence$java.io.OutputStream$java.lang.String)
org.apache.commons.io.IOUtils.write($byte[]$java.io.Writer$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.closeQuietly($java.io.Reader)
org.apache.commons.io.IOUtils.write($java.lang.CharSequence$java.io.OutputStream)
org.apache.commons.io.FileCleaningTracker$Tracker.delete()
org.apache.commons.io.monitor.FileObserver.<init>($java.lang.String$java.io.FileFilter$org.apache.commons.io.IOCase)
org.apache.commons.io.FileUtils.readFileToString($java.io.File$java.lang.String)
org.apache.commons.io.input.Tailer.create($java.io.File$org.apache.commons.io.input.TailerListener$long$boolean$int)
org.apache.commons.io.FileDeleteStrategy.delete($java.io.File)
org.apache.commons.io.IOUtils.copy($java.io.InputStream$java.io.Writer$java.lang.String)
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence$java.lang.String)
org.apache.commons.io.IOUtils.write($java.lang.String$java.io.OutputStream)
org.apache.commons.io.IOUtils.toString($java.net.URL$java.nio.charset.Charset)
org.apache.commons.io.monitor.FileAlterationObserver.fileFilter
org.apache.commons.io.IOUtils.toString($java.io.InputStream$java.lang.String)
org.apache.commons.io.comparator.SizeFileComparator.SIZE_SUMDIR_REVERSE
org.apache.commons.io.FileUtils.<clinit>()
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.lang.String$java.lang.String$boolean)
org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify($org.apache.commons.io.monitor.FileEntry$org.apache.commons.io.monitor.FileEntry[]$java.io.File[])
org.apache.commons.io.FileSystemUtils.performCommand($java.lang.String[]$int$long)
org.apache.commons.io.IOUtils.copyLarge($java.io.InputStream$java.io.OutputStream$long$long)
org.apache.commons.io.FileUtils.copyDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.input.Tailer.run
org.apache.commons.io.IOUtils.closeQuietly($java.io.OutputStream)
org.apache.commons.io.IOUtils.close($java.net.URLConnection)
org.apache.commons.io.IOUtils.skipFully($java.io.Reader$long)
org.apache.commons.io.FileUtils.readFileToString($java.io.File)
org.apache.commons.io.FileUtils.checkDirectory($java.io.File)
org.apache.commons.io.filefilter.NotFileFilter.accept($java.io.File$java.lang.String)
org.apache.commons.io.input.Tailer.create($java.io.File$org.apache.commons.io.input.TailerListener$long$boolean)
org.apache.commons.io.FileUtils.validateListFilesParameters($java.io.File$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.LineIterator.hasNext()
org.apache.commons.io.IOUtils.toByteArray($java.io.InputStream)
org.apache.commons.io.input.XmlStreamReader.<init>($java.io.InputStream$boolean$java.lang.String)
org.apache.commons.io.input.XmlStreamReader.<clinit>()
org.apache.commons.io.comparator.PathFileComparator.PATH_SYSTEM_REVERSE
org.apache.commons.io.IOUtils.toCharArray($java.io.InputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.toInputStream($java.lang.String)
org.apache.commons.io.input.XmlStreamReader.getContentTypeMime($java.lang.String)
org.apache.commons.io.IOUtils.readFully($java.io.InputStream$byte[]$int$int)
org.apache.commons.io.input.BOMInputStream$1.compare($java.lang.Object$java.lang.Object)
org.apache.commons.io.input.Tailer.delayMillis
org.apache.commons.io.monitor.FileAlterationObserver.<init>($java.io.File$java.io.FileFilter$org.apache.commons.io.IOCase)
org.apache.commons.io.IOUtils.toString($byte[]$java.lang.String)
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_INSENSITIVE_COMPARATOR
org.apache.commons.io.input.Tailer.DEFAULT_DELAY_MILLIS
org.apache.commons.io.FileUtils.toURLs($java.io.File[])
org.apache.commons.io.FileUtils.setUpEffectiveDirFilter($org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.monitor.FileAlterationObserver.<init>($java.lang.String)
org.apache.commons.io.input.BOMInputStream.matches($org.apache.commons.io.ByteOrderMark)
org.apache.commons.io.IOUtils.write($java.lang.String$java.io.OutputStream$java.nio.charset.Charset)
org.apache.commons.io.input.XmlStreamReader.getXmlProlog($java.io.InputStream$java.lang.String)
org.apache.commons.io.FileUtils.innerListFiles($java.util.Collection$java.io.File$org.apache.commons.io.filefilter.IOFileFilter$boolean)
org.apache.commons.io.input.XmlStreamReader.isAppXml($java.lang.String)
org.apache.commons.io.monitor.FilesystemObserver.<init>($java.io.File$java.io.FileFilter$java.util.Comparator)
org.apache.commons.io.filefilter.OrFileFilter.accept($java.io.File)
org.apache.commons.io.FileSystemUtils.freeSpaceKb($java.lang.String)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.util.Collection)
org.apache.commons.io.FileSystemUtils.freeSpaceKb($java.lang.String$long)
org.apache.commons.io.input.BOMInputStream.getBOM()
org.apache.commons.io.FileUtils.forceDeleteOnExit($java.io.File)
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_COMPARATOR
org.apache.commons.io.FileUtils.ONE_MB_BI
org.apache.commons.io.input.XmlStreamReader.doRawStream($org.apache.commons.io.input.BOMInputStream$org.apache.commons.io.input.BOMInputStream$boolean)
org.apache.commons.io.input.BOMInputStream.reset()
org.apache.commons.io.filefilter.FileFilterUtils.filterList($org.apache.commons.io.filefilter.IOFileFilter$java.lang.Iterable)
org.apache.commons.io.IOUtils.write($java.lang.StringBuffer$java.io.OutputStream)
org.apache.commons.io.input.Tailer.<init>($java.io.File$org.apache.commons.io.input.TailerListener$long)
org.apache.commons.io.monitor.FileAlterationObserver.comparator
org.apache.commons.io.comparator.DefaultFileComparator.DEFAULT_COMPARATOR
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence$java.nio.charset.Charset$boolean)
org.apache.commons.io.IOUtils.contentEquals($java.io.Reader$java.io.Reader)
org.apache.commons.io.IOUtils.copyLarge($java.io.Reader$java.io.Writer)
org.apache.commons.io.monitor.FileAlterationObserver.listeners
org.apache.commons.io.monitor.FileAlterationObserver.listFiles($java.io.File)
org.apache.commons.io.FileUtils.moveDirectoryToDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.IOUtils.write($java.lang.StringBuffer$java.io.OutputStream$java.lang.String)
org.apache.commons.io.output.LockableFileWriter.initWriter($java.io.File$java.nio.charset.Charset$boolean)
org.apache.commons.io.output.LockableFileWriter.<init>($java.lang.String)
org.apache.commons.io.FileUtils.forceMkdir($java.io.File)
org.apache.commons.io.FileUtils.ONE_YB
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_SYSTEM_REVERSE
org.apache.commons.io.FileUtils.iterateFilesAndDirs($java.io.File$org.apache.commons.io.filefilter.IOFileFilter$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.IOUtils.readLines($java.io.InputStream)
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.lang.String$java.nio.charset.Charset$boolean)
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.lang.String$java.nio.charset.Charset)
org.apache.commons.io.FileUtils.iterateFiles($java.io.File$org.apache.commons.io.filefilter.IOFileFilter$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.MagicNumberFileFilter.accept($java.io.File)
org.apache.commons.io.IOUtils.lineIterator($java.io.InputStream$java.nio.charset.Charset)
org.apache.commons.io.comparator.SizeFileComparator.<clinit>()
org.apache.commons.io.IOUtils.toByteArray($java.io.InputStream$int)
org.apache.commons.io.input.XmlStreamReader.<init>($java.io.InputStream$boolean)
org.apache.commons.io.input.BOMInputStream.skip($long)
org.apache.commons.io.FileUtils.ONE_ZB
org.apache.commons.io.input.BOMInputStream.byteOrderMark
org.apache.commons.io.input.Tailer.inbuf
org.apache.commons.io.IOUtils.lineIterator($java.io.InputStream$java.lang.String)
org.apache.commons.io.FileUtils.readLines($java.io.File)
org.apache.commons.io.FileUtils.doCopyDirectory($java.io.File$java.io.File$java.io.FileFilter$boolean$java.util.List)
org.apache.commons.io.FileUtils.cleanDirectoryOnExit($java.io.File)
org.apache.commons.io.monitor.FileAlterationObserver.doCreate($org.apache.commons.io.monitor.FileEntry)
org.apache.commons.io.IOUtils.copyLarge($java.io.Reader$java.io.Writer$char[])
org.apache.commons.io.IOUtils.toInputStream($java.lang.String$java.lang.String)
org.apache.commons.io.monitor.FileAlterationMonitor.start()
org.apache.commons.io.FileUtils.contentEquals($java.io.File$java.io.File)
org.apache.commons.io.input.XmlStreamReader.UTF_32LE
org.apache.commons.io.input.BOMInputStream.getBOMCharsetName()
org.apache.commons.io.input.BOMInputStream.firstBytes
org.apache.commons.io.FileUtils.lineIterator($java.io.File$java.lang.String)
org.apache.commons.io.input.BOMInputStream.read()
org.apache.commons.io.monitor.FileAlterationObserver.<init>($org.apache.commons.io.monitor.FileEntry$java.io.FileFilter$org.apache.commons.io.IOCase)
org.apache.commons.io.FileUtils.deleteQuietly($java.io.File)
org.apache.commons.io.comparator.SizeFileComparator.compare($java.lang.Object$java.lang.Object)
org.apache.commons.io.IOUtils.skipFully($java.io.InputStream$long)
org.apache.commons.io.IOUtils.copy($java.io.InputStream$java.io.OutputStream$int)
org.apache.commons.io.comparator.LastModifiedFileComparator.<clinit>()
org.apache.commons.io.IOUtils.readFully($java.io.Reader$char[])
org.apache.commons.io.filefilter.AbstractFileFilter.accept($java.io.File$java.lang.String)
org.apache.commons.io.IOUtils.write($byte[]$java.io.OutputStream)
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.io.File$java.nio.charset.CharsetEncoder)
org.apache.commons.io.input.Tailer.create($java.io.File$org.apache.commons.io.input.TailerListener$long)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.util.Collection$java.lang.String$boolean)
org.apache.commons.io.FileUtils.ONE_EB_BI
org.apache.commons.io.monitor.FileAlterationObserver.<init>($java.lang.String$java.io.FileFilter$org.apache.commons.io.IOCase)
org.apache.commons.io.FileUtils.deleteDirectoryOnExit($java.io.File)
org.apache.commons.io.FileUtils.moveToDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.monitor.FilesystemObserver.<init>($org.apache.commons.io.monitor.FilesystemEntry$java.io.FileFilter$java.util.Comparator)
org.apache.commons.io.filefilter.DelegateFileFilter.accept($java.io.File)
org.apache.commons.io.LineIterator.closeQuietly($org.apache.commons.io.LineIterator)
org.apache.commons.io.input.Tailer.create($java.io.File$org.apache.commons.io.input.TailerListener)
org.apache.commons.io.FileUtils.decodeUrl($java.lang.String)
org.apache.commons.io.FileUtils.readFileToString($java.io.File$java.nio.charset.Charset)
org.apache.commons.io.comparator.PathFileComparator.PATH_INSENSITIVE_COMPARATOR
org.apache.commons.io.IOUtils.copy($java.io.Reader$java.io.OutputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.toString($java.io.InputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.skip($java.io.InputStream$long)
org.apache.commons.io.FileDeleteStrategy.deleteQuietly($java.io.File)
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_SYSTEM_COMPARATOR
org.apache.commons.io.input.BOMInputStream.mark($int)
org.apache.commons.io.input.Tailer.create($java.io.File$org.apache.commons.io.input.TailerListener$long$boolean$boolean$int)
org.apache.commons.io.FileUtils.deleteDirectory($java.io.File)
org.apache.commons.io.monitor.FileAlterationObserver.doMatch($org.apache.commons.io.monitor.FileEntry$java.io.File)
org.apache.commons.io.FileUtils.copyFileToDirectory($java.io.File$java.io.File)
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String$java.lang.String$boolean)
org.apache.commons.io.input.Tailer.RAF_MODE
org.apache.commons.io.FileUtils.listFiles($java.io.File$java.lang.String[]$boolean)
org.apache.commons.io.IOUtils.read($java.io.InputStream$byte[])
org.apache.commons.io.input.BOMInputStream.<clinit>()
org.apache.commons.io.input.XmlStreamReader.doHttpStream($org.apache.commons.io.input.BOMInputStream$org.apache.commons.io.input.BOMInputStream$java.lang.String$boolean)
org.apache.commons.io.IOUtils.copy($java.io.Reader$java.io.OutputStream$java.lang.String)
org.apache.commons.io.IOUtils.toInputStream($java.lang.CharSequence)
org.apache.commons.io.IOUtils.copy($java.io.InputStream$java.io.Writer)
org.apache.commons.io.comparator.ExtensionFileComparator.<clinit>()
org.apache.commons.io.monitor.FileAlterationObserver.initialize()
org.apache.commons.io.FileUtils.isFileNewer($java.io.File$java.io.File)
org.apache.commons.io.comparator.PathFileComparator.PATH_INSENSITIVE_REVERSE
org.apache.commons.io.FileUtils.moveDirectory($java.io.File$java.io.File)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.lang.String$java.util.Collection$boolean)
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence$java.nio.charset.Charset)
org.apache.commons.io.FileUtils.touch($java.io.File)
org.apache.commons.io.comparator.PathFileComparator.PATH_SYSTEM_COMPARATOR
org.apache.commons.io.IOUtils.write($java.lang.CharSequence$java.io.OutputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.toString($java.net.URL$java.lang.String)
org.apache.commons.io.FileUtils.copyFile($java.io.File$java.io.File$boolean)
======================================================
======================================================
ALL TESTS TO RUN : 


org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_StripDrive()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithoutBOM()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullStream()
org.apache.commons.io.FileUtilsTestCase.testChecksumDouble()
org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithoutBOM()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingAdditonalUTF16()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray_fromList()
org.apache.commons.io.FileUtilsTestCase.testCopyURLToFileWithTimeout()
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainsDirectory()
org.apache.commons.io.FileUtilsWaitForTestCase.tearDown()
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf16Be()
org.apache.commons.io.IOUtilsTestCase.testURIToStringNoEncoding()
org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent()
org.apache.commons.io.input.TailerTest$TestTailerListener.handle($java.lang.String)
org.apache.commons.io.IOUtilsTestCase.testURIToStringUsAciiEncoding()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArrayNullParameters()
org.apache.commons.io.FileUtilsWaitForTestCase.testWaitFor()
org.apache.commons.io.input.BOMInputStreamTest.testNoBoms()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset()
org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.monitor.FilesystemObserverTestCase.testDirectory()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356($int$int)
org.apache.commons.io.IOUtilsTestCase.testByteArrayToOutputStream()
org.apache.commons.io.IOUtilsTestCase.testSkipStream()
org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_directory()
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf32Be()
org.apache.commons.io.FileUtilsTestCase.testDecodeUrlLenient()
org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf16Be()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullOut()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf8()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge()
org.apache.commons.io.input.BOMInputStreamTest.<init>()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete()
org.apache.commons.io.filefilter.RegexFileFilterTestCase.tearDown()
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath()
org.apache.commons.io.comparator.DirectoryFileComparatorTest.setUp()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullOut()
org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid($java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteQuietlyNormal()
org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_Size()
org.apache.commons.io.input.XmlStreamReaderTest.testHttp()
org.apache.commons.io.input.BOMInputStreamTest.testClose()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf32Be()
org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_NegativeSize()
org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeMime($java.lang.String$java.lang.String)
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullStream()
org.apache.commons.io.IOUtilsTestCase.testSkip()
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.tearDown()
org.apache.commons.io.FileUtilsTestCase.testCopyFileToOutputStream()
org.apache.commons.io.input.XmlStreamReaderTest.<clinit>()
org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor()
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithSymlinkFile()
org.apache.commons.io.input.XmlStreamReaderTest.testRawBomUtf8()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding($java.lang.String$boolean$java.lang.String$java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf16Le()
org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer($java.lang.String$java.io.File$long$boolean)
org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile()
org.apache.commons.io.input.BOMInputStreamTest.testReadSmall()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryPreserveDates()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullData()
org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullData()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkTextXml($boolean$java.lang.String)
org.apache.commons.io.IOUtilsTestCase.testURIToStringNullEncoding()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf32Le()
org.apache.commons.io.LineIteratorTestCase.testValidEncoding()
org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNormal()
org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid($java.lang.String)
org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles()
org.apache.commons.io.IOUtilsTestCase.testSkipInvalid()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString()
org.apache.commons.io.FileUtilsTestCase.testToFiles4()
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponseKb()
org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullData()
org.apache.commons.io.input.compatibility.XmlStreamReader.isAppXml($java.lang.String)
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullData()
org.apache.commons.io.comparator.SizeFileComparatorTest.setUp()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.tearDown()
org.apache.commons.io.input.TailerTest$TestTailerListener.<init>()
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence1()
org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard()
org.apache.commons.io.input.compatibility.XmlStreamReader.calculateRawEncoding($java.lang.String$java.lang.String$java.lang.String$java.io.InputStream)
org.apache.commons.io.monitor.FileObserverTestCase.testFileDelete()
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch($java.io.File)
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortList()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullEncoding()
org.apache.commons.io.input.compatibility.XmlStreamReader.isTextXml($java.lang.String)
org.apache.commons.io.monitor.AbstractMonitorTestCase.createObserver($java.io.File$java.io.FileFilter)
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullStream()
org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding($java.lang.String$java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest$MockXmlStreamReader.<init>($java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest.testRawBomUtf32()
org.apache.commons.io.IOUtilsTestCase.testURLToStringNullEncoding()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullData()
org.apache.commons.io.input.TailerTest.testLongFile()
org.apache.commons.io.IOUtilsTestCase.testExtraLength()
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsDirectory()
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotExist()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullWriter()
org.apache.commons.io.FileUtilsTestCase.testIterateFilesAndDirs()
org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory($java.io.File$java.io.File$java.io.File)
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.input.TailerTest.createFile($java.io.File$long)
org.apache.commons.io.comparator.NameFileComparatorTest.testCaseSensitivity()
org.apache.commons.io.FileUtilsTestCase.<clinit>()
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnNullList()
org.apache.commons.io.monitor.FilesystemObserverTestCase.tearDown()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet()
org.apache.commons.io.FileCleaningTrackerTestCase.tearDown()
org.apache.commons.io.LineIteratorTestCase.testNextWithException()
org.apache.commons.io.input.BoundedInputStreamTest.testReadArray()
org.apache.commons.io.FileUtilsTestCase.testChecksum()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullIn()
org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_IllegalSize()
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesNested()
org.apache.commons.io.IOUtilsTestCase.testCloseQuietlySelectorTwice()
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.createCircularSymLink($java.io.File)
org.apache.commons.io.FileUtilsTestCase.testChecksumOnDirectory()
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_encoding_badEncoding()
org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM()
org.apache.commons.io.IOUtilsTestCase.testCloseQuietlySelectorIOException()
org.apache.commons.io.LineIteratorTestCase.testInvalidEncoding()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkAppXml($boolean$java.lang.String)
org.apache.commons.io.IOUtilsTestCase.testCharFullLength()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator()
org.apache.commons.io.LineIteratorTestCase.testMissingFile()
org.apache.commons.io.IOUtilsTestCase.testSkipFileReader()
org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySizeBigInteger()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf16Le()
org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly()
org.apache.commons.io.FileUtilsTestCase.testToURLs1()
org.apache.commons.io.FileUtilsTestCase.testForceMkdir()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStreamWithBufferSize()
org.apache.commons.io.input.TailerTest.testStopWithNoFile()
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsFile()
org.apache.commons.io.comparator.PathFileComparatorTest.setUp()
org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM()
org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked()
org.apache.commons.io.input.TailerTest.tearDown()
org.apache.commons.io.input.BOMInputStreamTest.parseXml($java.io.InputStream)
org.apache.commons.io.monitor.FilesystemObserverTestCase.createObserver($java.io.File$java.io.FileFilter)
org.apache.commons.io.LineIteratorTestCase.assertLines($java.util.List$org.apache.commons.io.LineIterator)
org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithBOM()
org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly()
org.apache.commons.io.FileUtilsTestCase.testToFile5()
org.apache.commons.io.IOUtilsTestCase.tearDown()
org.apache.commons.io.IOUtilsTestCase.testServerSocketCloseQuietly()
org.apache.commons.io.FileUtilsTestCase.testForceDeleteDir()
org.apache.commons.io.comparator.PathFileComparatorTest.testCaseSensitivity()
org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir()
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testFileDoesNotExist()
org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateHttpEncoding($java.lang.String$java.lang.String$java.lang.String$java.lang.String$boolean$java.lang.String)
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.comparator.ExtensionFileComparatorTest.setUp()
org.apache.commons.io.IOUtilsTestCase.testSocketCloseQuietly()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullOut()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullEncoding()
org.apache.commons.io.comparator.NameFileComparatorTest.setUp()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32()
org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile2()
org.apache.commons.io.LineIteratorTestCase.testNextOnly()
org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix()
org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString()
org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeEncoding($java.lang.String)
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NoSuchDirectoryResponse()
org.apache.commons.io.FileUtilsTestCase.testIO300()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullStream()
org.apache.commons.io.comparator.SizeFileComparatorTest.testNonexistantFile()
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest()
org.apache.commons.io.input.BOMInputStreamTest.testReadTwiceWithBOM()
org.apache.commons.io.input.TailerTest.testTailerEof()
org.apache.commons.io.monitor.FilesystemObserverTestCase.testFileDelete()
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_directory()
org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty()
org.apache.commons.io.FileUtilsListFilesTestCase.setUp()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray()
org.apache.commons.io.FileUtilsTestCase.testTouch()
org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_fileName_nullFile()
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Other()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullData()
org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoDate()
org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84()
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_InvalidTextResponse()
org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMBufferedRead()
org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.IOUtilsTestCase.testReaderToCharArray()
org.apache.commons.io.FileUtilsTestCase.testToFileUtf8()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding()
org.apache.commons.io.IOUtilsTestCase.testByteArrayToWriter()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullIn()
org.apache.commons.io.FileUtilsTestCase.testSizeOfAsBigInteger()
org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullData()
org.apache.commons.io.input.BOMInputStreamTest.createUtf16LeDataStream($byte[]$boolean)
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullStream()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullData()
org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile3()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUcs4()
org.apache.commons.io.FileUtilsTestCase.testDecodeUrlNullSafe()
org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExistsCannotCreate()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFilenameFiltering($int$org.apache.commons.io.filefilter.IOFileFilter$java.io.File$boolean)
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding()
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_NullPath()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding()
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyResponse()
org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyFile()
org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_LongSize()
org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Rename()
org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream()
org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_nullFile()
org.apache.commons.io.IOUtilsTestCase.testInputStreamToString()
org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySizeLong()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding()
org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile($java.io.File$java.lang.String[])
org.apache.commons.io.IOUtilsTestCase.testReaderToString()
org.apache.commons.io.comparator.DefaultFileComparatorTest.setUp()
org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete_Failed()
org.apache.commons.io.IOUtilsTestCase.testReadReader()
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testStillClearsIfGivenDirectoryIsASymlink()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullIn()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToChild()
org.apache.commons.io.FileUtilsTestCase.testToFile3()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testReverseComparator()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullData()
org.apache.commons.io.IOUtilsTestCase.testFullLength()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered()
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.tearDown()
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD()
org.apache.commons.io.FileUtilsTestCase.testListFiles()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding()
org.apache.commons.io.IOUtilsTestCase.testReadLines_Reader()
org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteForce()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullData()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding()
org.apache.commons.io.LineIteratorTestCase.createLinesFile($java.io.File$int)
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding()
org.apache.commons.io.input.TailerTest$TestTailerListener.init($org.apache.commons.io.input.Tailer)
org.apache.commons.io.IOUtilsTestCase.testURIToString($java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeEncoding($java.lang.String$java.lang.String)
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_IO84()
org.apache.commons.io.input.BOMInputStreamTest.testSkipWithBOM()
org.apache.commons.io.IOUtilsTestCase.testCloseQuietlySelector()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullStream()
org.apache.commons.io.FileUtilsTestCase.setUp()
org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArrayWithEncoding()
org.apache.commons.io.FileUtilsTestCase.testToFile4()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding()
org.apache.commons.io.input.BOMInputStreamTest.assertData($byte[]$byte[]$int)
org.apache.commons.io.FileUtilsTestCase.testContentEquals()
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullOut()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator()
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf32Le()
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkFile()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullWriter()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUcs2()
org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile()
org.apache.commons.io.input.compatibility.XmlStreamReader.getXmlProlog($java.io.BufferedInputStream$java.lang.String)
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithOffsetAndLength()
org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile1()
org.apache.commons.io.input.BOMInputStreamTest.parseXml($java.io.Reader)
org.apache.commons.io.LineIteratorTestCase.createLinesFile($java.io.File$java.lang.String$int)
org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream($byte[]$boolean)
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbLinux()
org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList()
org.apache.commons.io.FileUtilsTestCase.testFileUtils()
org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84()
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testFileDoesNotExistBug()
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithParentSymlinks()
org.apache.commons.io.IOUtilsTestCase.testSocketCloseQuietlyOnException()
org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted()
org.apache.commons.io.FileUtilsTestCase.testMoveFile_Errors()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer()
org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory_Errors()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortListNull()
org.apache.commons.io.monitor.FileAlterationObserverTestCase.testAddRemoveListeners()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself()
org.apache.commons.io.IOUtilsTestCase.testNoSkip()
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_ParseCommaFormatBytes()
org.apache.commons.io.input.XmlStreamReaderTest._testRawBomValid($java.lang.String)
org.apache.commons.io.FileUtilsTestCase.testToFile1()
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse1()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullIn()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithoutBOMUtf32Be()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullStream()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding()
org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithBOM()
org.apache.commons.io.IOUtilsTestCase.testInputStreamToBufferedInputStream()
org.apache.commons.io.input.TailerTest$TestTailerListener.handle($java.lang.Exception)
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullSeparator()
org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile1()
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbSolaris()
org.apache.commons.io.FileUtilsTestCase.testMoveFile_Rename()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.tearDown()
org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory()
org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithDefaultEncoding()
org.apache.commons.io.input.compatibility.XmlStreamReader.calculateHttpEncoding($java.lang.String$java.lang.String$java.lang.String$java.lang.String$java.lang.String$java.io.InputStream$boolean)
org.apache.commons.io.LineIteratorTestCase.tearDown()
org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSetNullParameters()
org.apache.commons.io.output.FileWriterWithEncodingTest.tearDown()
org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullStream()
org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMSingleRead()
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyPath()
org.apache.commons.io.FileUtilsTestCase.testCopyFile2WithoutFileDatePreservation()
org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_ZeroSize()
org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware()
org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir()
org.apache.commons.io.testtools.FileBasedTestCase.newFile($java.lang.String)
org.apache.commons.io.input.BOMInputStreamTest.createUtf32LeDataStream($byte[]$boolean)
org.apache.commons.io.FileUtilsTestCase.testToFile2()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testToString()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingAdditonalUTF32()
org.apache.commons.io.IOUtilsTestCase.testReadStreamWithOffset()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf8()
org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead()
org.apache.commons.io.input.BOMInputStreamTest.createUtf32BeDataStream($byte[]$boolean)
org.apache.commons.io.IOUtilsTestCase.testConstants()
org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateRawEncoding($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile2()
org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithBOM()
org.apache.commons.io.FileUtilsTestCase.test_openInputStream_notExists()
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithASymlinkDir()
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkDir()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateHttpEncoding($java.lang.String$java.lang.String$java.lang.String$java.lang.String$boolean$java.lang.String)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering($org.apache.commons.io.filefilter.IOFileFilter$java.io.File$boolean)
org.apache.commons.io.IOUtilsTestCase.testByteArrayToString()
org.apache.commons.io.FileUtilsTestCase.tearDown()
org.apache.commons.io.IOUtilsTestCase.testToByteArrayFromURL()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testComparator()
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testUnrealizedContainment()
org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_IO84()
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullStream()
org.apache.commons.io.FileUtilsTestCase.testIterateFiles()
org.apache.commons.io.LineIteratorTestCase.testCloseEarly()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest()
org.apache.commons.io.input.TailerTest.testBufferBreak()
org.apache.commons.io.input.compatibility.XmlStreamReader.<clinit>()
org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyDefaultEncoding()
org.apache.commons.io.FileUtilsTestCase.IGNOREtestCopyFileLarge()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream()
org.apache.commons.io.IOUtilsTestCase.testReadReaderWithOffset()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterListNullParameters()
org.apache.commons.io.monitor.FileSystemMonitorTestCase.touch($java.io.File)
org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse3()
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Unix()
org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullIn()
org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines($int)
org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectory()
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesRegular()
org.apache.commons.io.FileUtilsTestCase.testDecodeUrlEncodingUtf8()
org.apache.commons.io.output.FileWriterWithEncodingTest.setUp()
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testCleanEmpty()
org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExists()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile3()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullData()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullOut()
org.apache.commons.io.IOUtilsTestCase.testStringToInputStream()
org.apache.commons.io.FileUtilsTestCase.openOutputStream_noParent($boolean)
org.apache.commons.io.IOUtilsTestCase.testURLToStringUsAciiEncoding()
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainFile()
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_fileName_nullFile()
org.apache.commons.io.IOUtilsTestCase.testToByteArrayFromURLConnection()
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCorrectlyIdentifySymlinkWithParentSymLink()
org.apache.commons.io.input.BOMInputStreamTest.testSkipWithoutBOM()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding()
org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArray()
org.apache.commons.io.output.FileWriterWithEncodingTest.testSameEncoding()
org.apache.commons.io.monitor.FileSystemMonitorTestCase.tearDown()
org.apache.commons.io.FileUtilsListFilesTestCase.tearDown()
org.apache.commons.io.IOUtilsTestCase.testURLToString($java.lang.String)
org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithoutBOM()
org.apache.commons.io.FileUtilsTestCase.testCopyToSelf()
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseLinux()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream()
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testCanonicalPath()
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse2()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError($java.lang.String$boolean$java.lang.String$java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NormalResponse()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream()
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testSameFile()
org.apache.commons.io.LineIteratorTestCase.testFiltering($java.util.List$java.io.Reader)
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyMultiLineResponse()
org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream()
org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream()
org.apache.commons.io.IOUtilsTestCase.testCloseQuietlyNullSelector()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_3arg_nullSeparator()
org.apache.commons.io.IOUtilsTestCase.testToByteArray_Reader()
org.apache.commons.io.input.TailerTest$TestTailerListener.fileNotFound()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateRawEncoding($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.compatibility.XmlStreamReader.getXMLGuessEncoding($java.io.BufferedInputStream)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch($java.io.File)
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter()
org.apache.commons.io.IOUtilsTestCase.<clinit>()
org.apache.commons.io.monitor.FilesystemObserverTestCase.setUp()
org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyNonExistent()
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_nullFile()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStreamWithBufferSize($int)
org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyDir()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullStream()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory_Errors()
org.apache.commons.io.FileUtilsTestCase.testToFiles2()
org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterable()
org.apache.commons.io.input.TailerTest.testTailer()
org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectoryAsBigInteger()
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponse()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall()
org.apache.commons.io.IOUtilsTestCase.testCloseableCloseQuietlyOnException()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullData()
org.apache.commons.io.IOUtilsTestCase.testSkipReader()
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient($java.lang.String$java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers()
org.apache.commons.io.IOUtilsTestCase.testStringToWriter()
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyResponse()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullData()
org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullChecksum()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArray()
org.apache.commons.io.IOUtilsTestCase.testContentEqualsIgnoreEOL()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering($org.apache.commons.io.filefilter.IOFileFilter$java.io.File$boolean)
org.apache.commons.io.output.LockableFileWriterTest.testFileLocked()
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_InitError()
org.apache.commons.io.monitor.FileObserverTestCase.testObserveSingleFile()
org.apache.commons.io.monitor.FileSystemMonitorTestCase.setUp()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_Writer_nullData()
org.apache.commons.io.FileUtilsTestCase.testDecodeUrl()
org.apache.commons.io.input.BOMInputStreamTest.readBOMInputStreamTwice($java.lang.String)
org.apache.commons.io.IOUtilsTestCase.testCharSkip()
org.apache.commons.io.filefilter.FileFilterTestCase.tearDown()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter()
org.apache.commons.io.input.TailerTest$TestTailerListener.fileRotated()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullData()
org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFileFiltering($int$org.apache.commons.io.filefilter.IOFileFilter$java.io.File$boolean)
org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyUtf8Encoding()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullStream()
org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_exists()
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Errors()
org.apache.commons.io.IOUtilsTestCase.testURLToStringNoEncoding()
org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoFileReference()
org.apache.commons.io.FileUtilsTestCase.testToFiles3()
org.apache.commons.io.IOUtilsTestCase.testServerSocketCloseQuietlyOnException()
org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL()
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse4()
org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyForNull()
org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithoutBOM()
org.apache.commons.io.input.XmlStreamReaderTest.testRawBomUtf16()
org.apache.commons.io.input.BOMInputStreamTest$ExpectCloseInputStream.assertCloseCalled()
org.apache.commons.io.FileUtilsTestCase.testToFiles3a()
org.apache.commons.io.input.BOMInputStreamTest.readFile($org.apache.commons.io.input.BOMInputStream)
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullStream()
org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomInvalid($java.lang.String)
org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp()
org.apache.commons.io.FileUtilsTestCase.testCopyFile2ToDir()
org.apache.commons.io.FileUtilsTestCase.testReadLines()
org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence2()
org.apache.commons.io.testtools.FileBasedTestCase.createFile($java.io.File$long)
org.apache.commons.io.IOUtilsTestCase.testContentEqualsReaderReader()
org.apache.commons.io.IOUtilsTestCase.testCharExtraLength()
org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithBOM()
org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithBOM()
org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs()
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.setUp()
org.apache.commons.io.input.BOMInputStreamTest.testSupportCode()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullStream()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors()
org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_encoding_badEncoding()
org.apache.commons.io.input.compatibility.XmlStreamReader.getBOMEncoding($java.io.BufferedInputStream)
org.apache.commons.io.input.BOMInputStreamTest.createUtf16BeDataStream($byte[]$boolean)
org.apache.commons.io.FilenameUtilsTestCase.tearDown()
org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.FileUtilsTestCase.testToURLs3a()
org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding()
org.apache.commons.io.FilenameUtilsTestCase.setUp()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp()
org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithoutBOM()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullData()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset()
org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeMime($java.lang.String)
org.apache.commons.io.FileUtilsTestCase.testIO276()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFiltering($int$org.apache.commons.io.filefilter.IOFileFilter$java.io.File$boolean)
org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithoutBOM()
org.apache.commons.io.comparator.ExtensionFileComparatorTest.testCaseSensitivity()
org.apache.commons.io.input.BOMInputStreamTest.testReadTwiceWithoutBOM()
org.apache.commons.io.input.XmlStreamReaderTest.testRawContent()
org.apache.commons.io.IOUtilsTestCase.testCharSequenceToInputStream()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithoutBOMUtf32Le()
org.apache.commons.io.FileUtilsTestCase.testCopyFile2()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest()
org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude()
org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp()
org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoFile()
org.apache.commons.io.IOUtilsTestCase.testReadStream()
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.input.TailerTest$TestTailerListener.getLines()
org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileDelete()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray()
org.apache.commons.io.IOUtilsTestCase.testToByteArrayFromURI()
org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullFile()
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnCannotDeleteFile()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullOut()
org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory_Errors()
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseFreeBSD()
org.apache.commons.io.IOUtilsTestCase.testSkipFileInput()
org.apache.commons.io.filefilter.FileFilterTestCase.testOr()
org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullSeparator()
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Windows()
org.apache.commons.io.LineIteratorTestCase.setUp()
org.apache.commons.io.input.TailerTest$TestTailerListener.clear()
org.apache.commons.io.input.XmlStreamReaderTest.getXML($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyNullEncoding()
org.apache.commons.io.FileUtilsTestCase.testSizeOf()
org.apache.commons.io.FileUtilsTestCase.testChecksumCRC32()
org.apache.commons.io.FileUtilsTestCase.testToFiles1()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullIn()
org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithEncoding()
org.apache.commons.io.FileUtilsTestCase.test_openInputStream_exists()
org.apache.commons.io.FileUtilsTestCase.testCopyFile1()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory()
org.apache.commons.io.monitor.AbstractMonitorTestCase.tearDown()
org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNull()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList_fromArray()
org.apache.commons.io.FileUtilsTestCase.testReadFileToByteArray()
org.apache.commons.io.monitor.FilesystemObserverTestCase.testObserveSingleFile()
org.apache.commons.io.IOUtilsTestCase.testCharSkipInvalid()
org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray()
org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_existsButIsDirectory()
org.apache.commons.io.monitor.FileObserverTestCase.testDirectory()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArrayNull()
org.apache.commons.io.input.TailerTest.testIO335()
org.apache.commons.io.IOUtilsTestCase.testCharNoSkip()
org.apache.commons.io.FileUtilsTestCase.test_openInputStream_existsButIsDirectory()
org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding()
org.apache.commons.io.IOUtilsTestCase.testStringToByteArray()
