NUMBER OF NEW OR CHANGED ENTITIES : 138
NUMBER OF NEW OR CHANGED TESTS : 206
NUMBER OF ENTITY TO TEST : 192
NUMBER OF TEST TO RUN : 293
TOTAL TIME REQUIRED : 1.999358157 second
======================================================
======================================================
NEW OR CHANGED ENTITIES : 


org.apache.commons.io.filefilter.FileFilterUtils.sizeRangeFileFilter($long$long)
org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter($long)
org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter($byte[])
org.apache.commons.io.FileUtils.isFileOlder($java.io.File$java.io.File)
org.apache.commons.io.FileUtils.getTempDirectoryPath()
org.apache.commons.io.FileUtils.moveFile($java.io.File$java.io.File)
org.apache.commons.io.FileExistsException.<init>()
org.apache.commons.io.FileUtils.copyFile($java.io.File$java.io.File)
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String)
org.apache.commons.io.FileUtils.waitFor($java.io.File$int)
org.apache.commons.io.FileUtils.lineIterator($java.io.File)
org.apache.commons.io.FileUtils.openInputStream($java.io.File)
org.apache.commons.io.FileUtils.copyDirectory($java.io.File$java.io.File$java.io.FileFilter)
org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter($java.io.FilenameFilter)
org.apache.commons.io.FileUtils.toFile($java.net.URL)
org.apache.commons.io.FileCleaningTracker.addTracker($java.lang.String$java.lang.Object$org.apache.commons.io.FileDeleteStrategy)
org.apache.commons.io.FileUtils.getTempDirectory()
org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter($java.lang.String)
org.apache.commons.io.input.SwappedDataInputStream.readBoolean()
org.apache.commons.io.filefilter.FileFilterUtils.<clinit>()
org.apache.commons.io.FileUtils.openOutputStream($java.io.File)
org.apache.commons.io.FileUtils.moveDirectoryToDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter($java.lang.String$org.apache.commons.io.IOCase)
org.apache.commons.io.output.ProxyWriter.append($java.lang.CharSequence$int$int)
org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter($java.lang.String)
org.apache.commons.io.FileCleaningTracker.exitWhenFinished()
org.apache.commons.io.FileUtils.forceMkdir($java.io.File)
org.apache.commons.io.FileUtils.checksum($java.io.File$java.util.zip.Checksum)
org.apache.commons.io.output.LockableFileWriter.initWriter($java.io.File$java.lang.String$boolean)
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence)
org.apache.commons.io.input.ProxyInputStream.read($byte[])
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.lang.String$java.util.Collection$java.lang.String)
org.apache.commons.io.FileUtils.copyURLToFile($java.net.URL$java.io.File)
org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter($java.lang.String$org.apache.commons.io.IOCase)
org.apache.commons.io.input.ProxyReader.read($java.nio.CharBuffer)
org.apache.commons.io.output.ProxyWriter.write($char[])
org.apache.commons.io.FileUtils.sizeOfDirectory($java.io.File)
org.apache.commons.io.FileUtils.isFileOlder($java.io.File$java.util.Date)
org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter($org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtils.forceDelete($java.io.File)
org.apache.commons.io.FileUtils.iterateFiles($java.io.File$org.apache.commons.io.filefilter.IOFileFilter$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtils.iterateFiles($java.io.File$java.lang.String[]$boolean)
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter($java.io.File$boolean)
org.apache.commons.io.FileUtils.moveFileToDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.output.LockableFileWriter.write($int)
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter($long)
org.apache.commons.io.FileUtils.readLines($java.io.File)
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter($java.util.Date)
org.apache.commons.io.FileUtils.isSymlink($java.io.File)
org.apache.commons.io.FileCleaningTracker.<init>()
org.apache.commons.io.FileUtils.doCopyDirectory($java.io.File$java.io.File$java.io.FileFilter$boolean$java.util.List)
org.apache.commons.io.FileUtils.isFileNewer($java.io.File$java.util.Date)
org.apache.commons.io.FileUtils.cleanDirectoryOnExit($java.io.File)
org.apache.commons.io.FileExistsException.serialVersionUID
org.apache.commons.io.input.ProxyReader.read($char[])
org.apache.commons.io.FileUtils.copyDirectory($java.io.File$java.io.File$java.io.FileFilter$boolean)
org.apache.commons.io.filefilter.FileFilterUtils.directoryFileFilter()
org.apache.commons.io.output.LockableFileWriter.write($char[]$int$int)
org.apache.commons.io.output.LockableFileWriter.write($java.lang.String)
org.apache.commons.io.output.LockableFileWriter.close()
org.apache.commons.io.filefilter.FileFilterUtils.svnFilter
org.apache.commons.io.FileUtils.copyFileToDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.filefilter.FileFilterUtils.andFileFilter($org.apache.commons.io.filefilter.IOFileFilter$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.output.LockableFileWriter.write($char[])
org.apache.commons.io.FileUtils.contentEquals($java.io.File$java.io.File)
org.apache.commons.io.FileCleaningTracker.track($java.lang.String$java.lang.Object)
org.apache.commons.io.output.LockableFileWriter.flush()
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String$java.lang.String)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.lang.String$java.util.Collection)
org.apache.commons.io.output.LockableFileWriter.write($java.lang.String$int$int)
org.apache.commons.io.FileUtils.toFiles($java.net.URL[])
org.apache.commons.io.FileUtils.isFileOlder($java.io.File$long)
org.apache.commons.io.FileUtils.lineIterator($java.io.File$java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter($byte[]$long)
org.apache.commons.io.FileUtils.byteCountToDisplaySize($long)
org.apache.commons.io.FileUtils.innerListFiles($java.util.Collection$java.io.File$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtils.readFileToString($java.io.File$java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter()
org.apache.commons.io.FileUtils.deleteQuietly($java.io.File)
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence$java.lang.String)
org.apache.commons.io.output.ProxyWriter.append($java.lang.CharSequence)
org.apache.commons.io.filefilter.FileFilterUtils.makeSVNAware($org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtils.copyInputStreamToFile($java.io.InputStream$java.io.File)
org.apache.commons.io.filefilter.FileFilterUtils.falseFileFilter()
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.util.Collection$java.lang.String)
org.apache.commons.io.FileUtils.checksumCRC32($java.io.File)
org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware($org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.output.ProxyOutputStream.write($byte[])
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter($java.util.Date$boolean)
org.apache.commons.io.FileUtils.cleanDirectory($java.io.File)
org.apache.commons.io.filefilter.FileFilterUtils.orFileFilter($org.apache.commons.io.filefilter.IOFileFilter$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.output.ProxyWriter.write($java.lang.String)
org.apache.commons.io.FileUtils.deleteDirectoryOnExit($java.io.File)
org.apache.commons.io.FileUtils.moveToDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.FileUtils.copyDirectoryToDirectory($java.io.File$java.io.File)
org.apache.commons.io.FileUtils.copyURLToFile($java.net.URL$java.io.File$int$int)
org.apache.commons.io.FileUtils.getUserDirectoryPath()
org.apache.commons.io.output.ProxyWriter.append($char)
org.apache.commons.io.FileUtils.<clinit>()
org.apache.commons.io.FileCleaningTracker.getTrackCount()
org.apache.commons.io.FileUtils.copyDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.FileUtils.readFileToByteArray($java.io.File)
org.apache.commons.io.FileUtils.listFiles($java.io.File$org.apache.commons.io.filefilter.IOFileFilter$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtils.deleteDirectory($java.io.File)
org.apache.commons.io.FileUtils.readFileToString($java.io.File)
org.apache.commons.io.FileUtils.isFileNewer($java.io.File$long)
org.apache.commons.io.FileUtils.copyFileToDirectory($java.io.File$java.io.File)
org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter($java.io.FileFilter)
org.apache.commons.io.filefilter.FileFilterUtils.makeFileOnly($org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtils.doCopyFile($java.io.File$java.io.File$boolean)
org.apache.commons.io.filefilter.FileFilterUtils.cvsFilter
org.apache.commons.io.FileUtils.listFiles($java.io.File$java.lang.String[]$boolean)
org.apache.commons.io.FileUtils.getUserDirectory()
org.apache.commons.io.FileCleaningTracker.track($java.io.File$java.lang.Object$org.apache.commons.io.FileDeleteStrategy)
org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter($java.lang.String$org.apache.commons.io.IOCase)
org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter($long$boolean)
org.apache.commons.io.FileUtils.writeByteArrayToFile($java.io.File$byte[])
org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter($java.lang.String$long)
org.apache.commons.io.FileUtils.toSuffixes($java.lang.String[])
org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter($java.lang.String)
org.apache.commons.io.FileCleaningTracker.track($java.lang.String$java.lang.Object$org.apache.commons.io.FileDeleteStrategy)
org.apache.commons.io.FileUtils.copyDirectory($java.io.File$java.io.File)
org.apache.commons.io.FileCleaningTracker.track($java.io.File$java.lang.Object)
org.apache.commons.io.FileExistsException.<init>($java.io.File)
org.apache.commons.io.filefilter.FileFilterUtils.fileFileFilter()
org.apache.commons.io.FileUtils.toURLs($java.io.File[])
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter($java.io.File)
org.apache.commons.io.FileUtils.convertFileCollectionToFileArray($java.util.Collection)
org.apache.commons.io.filefilter.FileFilterUtils.makeDirectoryOnly($org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtils.isFileNewer($java.io.File$java.io.File)
org.apache.commons.io.FileUtils.moveDirectory($java.io.File$java.io.File)
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter($long$boolean)
org.apache.commons.io.FileUtils.readLines($java.io.File$java.lang.String)
org.apache.commons.io.FileUtils.touch($java.io.File)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.util.Collection)
org.apache.commons.io.FileExistsException.<init>($java.lang.String)
org.apache.commons.io.FileUtils.forceDeleteOnExit($java.io.File)
org.apache.commons.io.FileUtils.copyFile($java.io.File$java.io.File$boolean)
======================================================
======================================================
NEW OR CHANGED TESTS : 


org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold()
org.apache.commons.io.FileUtilsTestCase.testMoveFile_Errors()
org.apache.commons.io.FileUtilsTestCase.testChecksumDouble()
org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory_Errors()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortListNull()
org.apache.commons.io.FileUtilsTestCase.testCopyURLToFileWithTimeout()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold()
org.apache.commons.io.FileUtilsTestCase.testToFile1()
org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive()
org.apache.commons.io.IOUtilsTestCase.testInputStreamToBufferedInputStream()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset()
org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_noParentNoFile()
org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorArrayNull()
org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructStringBuilder()
org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile1()
org.apache.commons.io.IOUtilsTestCase.testByteArrayToOutputStream()
org.apache.commons.io.FileUtilsTestCase.testMoveFile_Rename()
org.apache.commons.io.IOUtilsTestCase.testSkipStream()
org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testThresholdReached()
org.apache.commons.io.input.ProxyReaderTest.testNullCharArray()
org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullListArgument()
org.apache.commons.io.CopyUtilsTest.testCopy_stringToWriter()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold()
org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix()
org.apache.commons.io.filefilter.FileFilterTestCase.testDirectory()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete()
org.apache.commons.io.input.ProxyReaderTest$CustomNullReader.<init>($int)
org.apache.commons.io.FileUtilsTestCase.testCopyFile2WithoutFileDatePreservation()
org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter()
org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware()
org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String()
org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir()
org.apache.commons.io.FileUtilsTestCase.testToFile2()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testToString()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream()
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadBoolean()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertTrueFiltersInvoked($int$org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[]$boolean[])
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile2()
org.apache.commons.io.FileUtilsTestCase.test_openInputStream_notExists()
org.apache.commons.io.input.ProxyReaderTest.<init>($java.lang.String)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering($org.apache.commons.io.filefilter.IOFileFilter$java.io.File$boolean)
org.apache.commons.io.IOUtilsTestCase.testByteArrayToString()
org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArrayArgument()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testBelowThreshold()
org.apache.commons.io.FileUtilsTestCase.testIterateFiles()
org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString()
org.apache.commons.io.FileUtilsTestCase.IGNOREtestCopyFileLarge()
org.apache.commons.io.FileUtilsTestCase.testToFiles4()
org.apache.commons.io.FileUtilsTestCase.testGetTempDirectoryPath()
org.apache.commons.io.input.ProxyReaderTest$CustomNullReader.read($char[])
org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold()
org.apache.commons.io.FileUtilsTestCase.testReadFileToString()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullIn()
org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectory()
org.apache.commons.io.output.ProxyWriterTest.testWriteCharArrayPartial()
org.apache.commons.io.output.ProxyWriterTest.testAppendCharSequence()
org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExists()
org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence1()
org.apache.commons.io.IOUtilsTestCase.testStringToInputStream()
org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard()
org.apache.commons.io.FileUtilsTestCase.openOutputStream_noParent($boolean)
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortList()
org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArray()
org.apache.commons.io.output.ProxyWriterTest.testNullCharArray()
org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory($java.io.File$java.io.File$java.io.File)
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg()
org.apache.commons.io.FileUtilsTestCase.testCopyToSelf()
org.apache.commons.io.FileUtilsTestCase.<clinit>()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileError()
org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriter()
org.apache.commons.io.filefilter.FileFilterTestCase.testAnd()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.determineWorkingDirectoryPath($java.lang.String$java.lang.String)
org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter()
org.apache.commons.io.FileUtilsTestCase.testChecksum()
org.apache.commons.io.FileUtilsTestCase.testChecksumOnDirectory()
org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream()
org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_3arg_nullSeparator()
org.apache.commons.io.output.ProxyWriterTest.testWriteString()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator()
org.apache.commons.io.IOUtilsTestCase.testSkipFileReader()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild()
org.apache.commons.io.output.ProxyWriterTest.testWriteStringPartial()
org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly()
org.apache.commons.io.FileUtilsTestCase.testToURLs1()
org.apache.commons.io.FileUtilsTestCase.testForceMkdir()
org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArgument()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter()
org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterableNull()
org.apache.commons.io.IOUtilsTestCase.<clinit>()
org.apache.commons.io.filefilter.FileFilterTestCase.testFiles()
org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyNonExistent()
org.apache.commons.io.output.ProxyWriterTest.testWriteCharArray()
org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyDir()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetFalseFilters($org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[])
org.apache.commons.io.filefilter.FileFilterTestCase.testCanWrite()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory_Errors()
org.apache.commons.io.FileUtilsTestCase.testToFiles2()
org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterable()
org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetTrueFilters($org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[])
org.apache.commons.io.FileUtilsTestCase.testForceDeleteDir()
org.apache.commons.io.IOUtilsTestCase.testSkipReader()
org.apache.commons.io.IOUtilsTestCase.testStringToWriter()
org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullChecksum()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArray()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering($org.apache.commons.io.filefilter.IOFileFilter$java.io.File$boolean)
org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile2()
org.apache.commons.io.CopyUtilsTest.testCopy_readerToWriter()
org.apache.commons.io.input.ProxyReaderTest$ProxyReaderImpl.<init>($java.io.Reader)
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_Writer_nullData()
org.apache.commons.io.FileUtilsTestCase.testGetUserDirectory()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFileFiltering($int$org.apache.commons.io.filefilter.IOFileFilter$java.io.File$boolean)
org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_exists()
org.apache.commons.io.FileUtilsTestCase.testTouch()
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Errors()
org.apache.commons.io.FileUtilsTestCase.testToFiles3()
org.apache.commons.io.filefilter.FileFilterTestCase.<clinit>()
org.apache.commons.io.IOUtilsTestCase.testReaderToCharArray()
org.apache.commons.io.IOUtilsTestCase.testByteArrayToWriter()
org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyForNull()
org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_noParentCreateFile()
org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile3()
org.apache.commons.io.FileUtilsTestCase.testCopyFile2ToDir()
org.apache.commons.io.FileUtilsTestCase.testReadLines()
org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExistsCannotCreate()
org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence2()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFilenameFiltering($int$org.apache.commons.io.filefilter.IOFileFilter$java.io.File$boolean)
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding()
org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyFile()
org.apache.commons.io.filefilter.FileFilterTestCase.testCanRead()
org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Rename()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors()
org.apache.commons.io.IOUtilsTestCase.testInputStreamToString()
org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive()
org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile($java.io.File)
org.apache.commons.io.IOUtilsTestCase.testReaderToString()
org.apache.commons.io.filefilter.FileFilterTestCase.testDelegateFileFilter()
org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete_Failed()
org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory()
org.apache.commons.io.output.ProxyWriterTest.testNullString()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullIn()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset()
org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter()
org.apache.commons.io.FileUtilsTestCase.testToFile3()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToChild()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFiltering($int$org.apache.commons.io.filefilter.IOFileFilter$java.io.File$boolean)
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered()
org.apache.commons.io.filefilter.FileFilterTestCase.testNot()
org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySize()
org.apache.commons.io.IOUtilsTestCase.testCharSequenceToInputStream()
org.apache.commons.io.FileUtilsTestCase.testCopyFile2()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest()
org.apache.commons.io.FileUtilsTestCase.testListFiles()
org.apache.commons.io.IOUtilsTestCase.testReadLines_Reader()
org.apache.commons.io.FileUtilsTestCase.testGetTempDirectory()
org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream()
org.apache.commons.io.output.ProxyWriterTest.<init>($java.lang.String)
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding()
org.apache.commons.io.filefilter.FileFilterTestCase.testFalse()
org.apache.commons.io.input.ProxyReaderTest.testNullCharBuffer()
org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullFile()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFalseFiltersInvoked($int$org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[]$boolean[])
org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory_Errors()
org.apache.commons.io.IOUtilsTestCase.testSkipFileInput()
org.apache.commons.io.FileUtilsTestCase.testGetUserDirectoryPath()
org.apache.commons.io.filefilter.FileFilterTestCase.testOr()
org.apache.commons.io.input.ProxyReaderTest$CustomNullReader.read($java.nio.CharBuffer)
org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArrayWithEncoding()
org.apache.commons.io.FileUtilsTestCase.testChecksumCRC32()
org.apache.commons.io.FileUtilsTestCase.testToFiles1()
org.apache.commons.io.FileUtilsTestCase.testToFile4()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding()
org.apache.commons.io.FileUtilsTestCase.testContentEquals()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullIn()
org.apache.commons.io.filefilter.FileFilterTestCase.testHidden()
org.apache.commons.io.FileUtilsTestCase.test_openInputStream_exists()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes()
org.apache.commons.io.FileUtilsTestCase.testCopyFile1()
org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory()
org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter()
org.apache.commons.io.filefilter.FileFilterTestCase.testTrue()
org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile()
org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile1()
org.apache.commons.io.FileUtilsTestCase.testReadFileToByteArray()
org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray()
org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard()
org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_existsButIsDirectory()
org.apache.commons.io.FileUtilsTestCase.testFileUtils()
org.apache.commons.io.FileUtilsTestCase.test_openInputStream_existsButIsDirectory()
org.apache.commons.io.IOUtilsTestCase.testStringToByteArray()
org.apache.commons.io.output.ProxyWriterTest.testNullCharSequencec()
======================================================
======================================================
ALL ENTITY TO TEST : 


org.apache.commons.io.filefilter.FileFilterUtils.sizeRangeFileFilter($long$long)
org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter($long)
org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter($byte[])
org.apache.commons.io.FileUtils.isFileOlder($java.io.File$java.io.File)
org.apache.commons.io.FileUtils.getTempDirectoryPath()
org.apache.commons.io.FileUtils.moveFile($java.io.File$java.io.File)
org.apache.commons.io.filefilter.AbstractFileFilter.accept($java.io.File)
org.apache.commons.io.FileExistsException.<init>()
org.apache.commons.io.FileUtils.copyFile($java.io.File$java.io.File)
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String)
org.apache.commons.io.FileCleaner.track($java.lang.String$java.lang.Object)
org.apache.commons.io.FileUtils.waitFor($java.io.File$int)
org.apache.commons.io.FileUtils.lineIterator($java.io.File)
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.io.File$java.nio.charset.Charset)
org.apache.commons.io.FileUtils.openInputStream($java.io.File)
org.apache.commons.io.DirectoryWalker.<init>($org.apache.commons.io.filefilter.IOFileFilter$org.apache.commons.io.filefilter.IOFileFilter$int)
org.apache.commons.io.FileUtils.copyDirectory($java.io.File$java.io.File$java.io.FileFilter)
org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter($java.io.FilenameFilter)
org.apache.commons.io.FileUtils.toFile($java.net.URL)
org.apache.commons.io.FileCleaningTracker.addTracker($java.lang.String$java.lang.Object$org.apache.commons.io.FileDeleteStrategy)
org.apache.commons.io.FileUtils.getTempDirectory()
org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter($java.lang.String)
org.apache.commons.io.output.LockableFileWriter.<init>($java.io.File)
org.apache.commons.io.input.SwappedDataInputStream.readBoolean()
org.apache.commons.io.filefilter.FileFilterUtils.<clinit>()
org.apache.commons.io.FileUtils.openOutputStream($java.io.File)
org.apache.commons.io.output.LockableFileWriter.<init>($java.io.File$boolean)
org.apache.commons.io.FileUtils.moveDirectoryToDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter($java.lang.String$org.apache.commons.io.IOCase)
org.apache.commons.io.output.ProxyWriter.append($java.lang.CharSequence$int$int)
org.apache.commons.io.output.LockableFileWriter.<init>($java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter($java.lang.String)
org.apache.commons.io.FileCleaningTracker.exitWhenFinished()
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.io.File$java.lang.String)
org.apache.commons.io.FileUtils.forceMkdir($java.io.File)
org.apache.commons.io.FileUtils.checksum($java.io.File$java.util.zip.Checksum)
org.apache.commons.io.output.LockableFileWriter.initWriter($java.io.File$java.lang.String$boolean)
org.apache.commons.io.output.LockableFileWriter.<init>($java.io.File$java.lang.String)
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence)
org.apache.commons.io.input.ProxyInputStream.read($byte[])
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.lang.String$java.util.Collection$java.lang.String)
org.apache.commons.io.FileUtils.copyURLToFile($java.net.URL$java.io.File)
org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter($java.lang.String$org.apache.commons.io.IOCase)
org.apache.commons.io.filefilter.AgeFileFilter.accept($java.io.File)
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.lang.String$java.nio.charset.Charset$boolean)
org.apache.commons.io.input.ProxyReader.read($java.nio.CharBuffer)
org.apache.commons.io.output.ProxyWriter.write($char[])
org.apache.commons.io.FileUtils.sizeOfDirectory($java.io.File)
org.apache.commons.io.FileUtils.isFileOlder($java.io.File$java.util.Date)
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.lang.String$java.nio.charset.CharsetEncoder$boolean)
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.lang.String$java.nio.charset.Charset)
org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter($org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtils.forceDelete($java.io.File)
org.apache.commons.io.FileUtils.iterateFiles($java.io.File$org.apache.commons.io.filefilter.IOFileFilter$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.OrFileFilter.accept($java.io.File$java.lang.String)
org.apache.commons.io.FileCleaningTracker.trackers
org.apache.commons.io.FileUtils.iterateFiles($java.io.File$java.lang.String[]$boolean)
org.apache.commons.io.output.LockableFileWriter.<init>($java.io.File$java.lang.String$boolean$java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter($java.io.File$boolean)
org.apache.commons.io.FileUtils.moveFileToDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.output.LockableFileWriter.write($int)
org.apache.commons.io.FileCleaner.getTrackCount()
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter($long)
org.apache.commons.io.filefilter.DelegateFileFilter.accept($java.io.File$java.lang.String)
org.apache.commons.io.FileUtils.readLines($java.io.File)
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter($java.util.Date)
org.apache.commons.io.FileUtils.isSymlink($java.io.File)
org.apache.commons.io.FileCleaningTracker.<init>()
org.apache.commons.io.FileUtils.doCopyDirectory($java.io.File$java.io.File$java.io.FileFilter$boolean$java.util.List)
org.apache.commons.io.FileUtils.isFileNewer($java.io.File$java.util.Date)
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.lang.String$java.nio.charset.CharsetEncoder)
org.apache.commons.io.FileCleaner.exitWhenFinished()
org.apache.commons.io.FileUtils.cleanDirectoryOnExit($java.io.File)
org.apache.commons.io.FileExistsException.serialVersionUID
org.apache.commons.io.input.ProxyReader.read($char[])
org.apache.commons.io.FileUtils.copyDirectory($java.io.File$java.io.File$java.io.FileFilter$boolean)
org.apache.commons.io.filefilter.FileFilterUtils.directoryFileFilter()
org.apache.commons.io.output.LockableFileWriter.write($char[]$int$int)
org.apache.commons.io.FileCleaner.<clinit>()
org.apache.commons.io.output.LockableFileWriter.write($java.lang.String)
org.apache.commons.io.output.LockableFileWriter.close()
org.apache.commons.io.filefilter.FileFilterUtils.svnFilter
org.apache.commons.io.FileUtils.copyFileToDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.output.LockableFileWriter.<init>($java.io.File$boolean$java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.andFileFilter($org.apache.commons.io.filefilter.IOFileFilter$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileCleaningTracker.q
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.io.File$java.lang.String$boolean)
org.apache.commons.io.output.LockableFileWriter.write($char[])
org.apache.commons.io.FileCleaner.track($java.io.File$java.lang.Object$org.apache.commons.io.FileDeleteStrategy)
org.apache.commons.io.FileUtils.contentEquals($java.io.File$java.io.File)
org.apache.commons.io.FileCleaningTracker.track($java.lang.String$java.lang.Object)
org.apache.commons.io.output.LockableFileWriter.flush()
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String$java.lang.String)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.lang.String$java.util.Collection)
org.apache.commons.io.output.LockableFileWriter.write($java.lang.String$int$int)
org.apache.commons.io.FileUtils.toFiles($java.net.URL[])
org.apache.commons.io.FileUtils.isFileOlder($java.io.File$long)
org.apache.commons.io.output.FileWriterWithEncoding.initWriter($java.io.File$java.lang.Object$boolean)
org.apache.commons.io.FileUtils.lineIterator($java.io.File$java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter($byte[]$long)
org.apache.commons.io.FileUtils.byteCountToDisplaySize($long)
org.apache.commons.io.FileUtils.innerListFiles($java.util.Collection$java.io.File$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileCleaningTracker$Tracker.delete()
org.apache.commons.io.FileCleaningTracker.reaper
org.apache.commons.io.FileUtils.readFileToString($java.io.File$java.lang.String)
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.io.File$java.nio.charset.Charset$boolean)
org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter()
org.apache.commons.io.FileUtils.deleteQuietly($java.io.File)
org.apache.commons.io.FileDeleteStrategy.delete($java.io.File)
org.apache.commons.io.comparator.SizeFileComparator.compare($java.lang.Object$java.lang.Object)
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence$java.lang.String)
org.apache.commons.io.output.ProxyWriter.append($java.lang.CharSequence)
org.apache.commons.io.filefilter.FileFilterUtils.makeSVNAware($org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtils.copyInputStreamToFile($java.io.InputStream$java.io.File)
org.apache.commons.io.filefilter.AndFileFilter.accept($java.io.File)
org.apache.commons.io.filefilter.FileFilterUtils.falseFileFilter()
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.util.Collection$java.lang.String)
org.apache.commons.io.FileUtils.checksumCRC32($java.io.File)
org.apache.commons.io.filefilter.AbstractFileFilter.accept($java.io.File$java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware($org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.output.ProxyOutputStream.write($byte[])
org.apache.commons.io.FileCleaner.track($java.lang.String$java.lang.Object$org.apache.commons.io.FileDeleteStrategy)
org.apache.commons.io.output.LockableFileWriter.<init>($java.lang.String$boolean$java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter($java.util.Date$boolean)
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.io.File$java.nio.charset.CharsetEncoder)
org.apache.commons.io.FileUtils.cleanDirectory($java.io.File)
org.apache.commons.io.comparator.SizeFileComparator.compare($java.io.File$java.io.File)
org.apache.commons.io.filefilter.FileFilterUtils.orFileFilter($org.apache.commons.io.filefilter.IOFileFilter$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.output.ProxyWriter.write($java.lang.String)
org.apache.commons.io.FileUtils.deleteDirectoryOnExit($java.io.File)
org.apache.commons.io.FileUtils.moveToDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.FileUtils.copyDirectoryToDirectory($java.io.File$java.io.File)
org.apache.commons.io.FileUtils.copyURLToFile($java.net.URL$java.io.File$int$int)
org.apache.commons.io.filefilter.DelegateFileFilter.accept($java.io.File)
org.apache.commons.io.output.TeeOutputStream.write($byte[])
org.apache.commons.io.FileUtils.getUserDirectoryPath()
org.apache.commons.io.output.ProxyWriter.append($char)
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.io.File$java.nio.charset.CharsetEncoder$boolean)
org.apache.commons.io.FileUtils.<clinit>()
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.lang.String$java.lang.String$boolean)
org.apache.commons.io.output.FileWriterWithEncoding.<init>($java.lang.String$java.lang.String)
org.apache.commons.io.filefilter.AndFileFilter.accept($java.io.File$java.lang.String)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
org.apache.commons.io.FileUtils.copyDirectory($java.io.File$java.io.File$boolean)
org.apache.commons.io.FileDeleteStrategy.deleteQuietly($java.io.File)
org.apache.commons.io.FileUtils.readFileToByteArray($java.io.File)
org.apache.commons.io.FileUtils.listFiles($java.io.File$org.apache.commons.io.filefilter.IOFileFilter$org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtils.deleteDirectory($java.io.File)
org.apache.commons.io.FileUtils.readFileToString($java.io.File)
org.apache.commons.io.FileUtils.isFileNewer($java.io.File$long)
org.apache.commons.io.filefilter.NotFileFilter.accept($java.io.File$java.lang.String)
org.apache.commons.io.FileUtils.copyFileToDirectory($java.io.File$java.io.File)
org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter($java.io.FileFilter)
org.apache.commons.io.filefilter.FileFilterUtils.makeFileOnly($org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtils.doCopyFile($java.io.File$java.io.File$boolean)
org.apache.commons.io.filefilter.FileFilterUtils.cvsFilter
org.apache.commons.io.FileUtils.listFiles($java.io.File$java.lang.String[]$boolean)
org.apache.commons.io.FileUtils.getUserDirectory()
org.apache.commons.io.FileCleaningTracker.track($java.io.File$java.lang.Object$org.apache.commons.io.FileDeleteStrategy)
org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter($java.lang.String$org.apache.commons.io.IOCase)
org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter($long$boolean)
org.apache.commons.io.FileUtils.writeByteArrayToFile($java.io.File$byte[])
org.apache.commons.io.output.LockableFileWriter.<init>($java.lang.String$boolean)
org.apache.commons.io.FileCleaner.track($java.io.File$java.lang.Object)
org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter($java.lang.String$long)
org.apache.commons.io.FileUtils.toSuffixes($java.lang.String[])
org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter($java.lang.String)
org.apache.commons.io.FileCleaningTracker.track($java.lang.String$java.lang.Object$org.apache.commons.io.FileDeleteStrategy)
org.apache.commons.io.FileUtils.copyDirectory($java.io.File$java.io.File)
org.apache.commons.io.FileCleaningTracker.track($java.io.File$java.lang.Object)
org.apache.commons.io.FileExistsException.<init>($java.io.File)
org.apache.commons.io.input.TeeInputStream.read($byte[])
org.apache.commons.io.filefilter.FileFilterUtils.fileFileFilter()
org.apache.commons.io.FileUtils.toURLs($java.io.File[])
org.apache.commons.io.FileUtils.EMPTY_FILE_ARRAY
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter($java.io.File)
org.apache.commons.io.FileUtils.convertFileCollectionToFileArray($java.util.Collection)
org.apache.commons.io.filefilter.FileFilterUtils.makeDirectoryOnly($org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileCleaningTracker$Reaper.run()
org.apache.commons.io.FileUtils.isFileNewer($java.io.File$java.io.File)
org.apache.commons.io.FileUtils.moveDirectory($java.io.File$java.io.File)
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter($long$boolean)
org.apache.commons.io.FileUtils.readLines($java.io.File$java.lang.String)
org.apache.commons.io.filefilter.OrFileFilter.accept($java.io.File)
org.apache.commons.io.FileUtils.touch($java.io.File)
org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy.doDelete($java.io.File)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.util.Collection)
org.apache.commons.io.FileExistsException.<init>($java.lang.String)
org.apache.commons.io.FileUtils.forceDeleteOnExit($java.io.File)
org.apache.commons.io.filefilter.NotFileFilter.accept($java.io.File)
org.apache.commons.io.FileCleaningTracker.exitWhenFinished
org.apache.commons.io.FileUtils.copyFile($java.io.File$java.io.File$boolean)
======================================================
======================================================
ALL TESTS TO RUN : 


org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold()
org.apache.commons.io.FileUtilsTestCase.testMoveFile_Errors()
org.apache.commons.io.FileUtilsTestCase.testChecksumDouble()
org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerNull()
org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory_Errors()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortListNull()
org.apache.commons.io.FileCleaningTrackerTestCase.newInstance()
org.apache.commons.io.FileUtilsTestCase.testCopyURLToFileWithTimeout()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold()
org.apache.commons.io.FileUtilsTestCase.testToFile1()
org.apache.commons.io.FileUtilsWaitForTestCase.tearDown()
org.apache.commons.io.output.TeeOutputStreamTest.testTee()
org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive()
org.apache.commons.io.FileUtilsWaitForTestCase.testWaitFor()
org.apache.commons.io.IOUtilsTestCase.testInputStreamToBufferedInputStream()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset()
org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_noParentNoFile()
org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorArrayNull()
org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructStringBuilder()
org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile1()
org.apache.commons.io.monitor.FilesystemObserverTestCase.testDirectory()
org.apache.commons.io.IOUtilsTestCase.testByteArrayToOutputStream()
org.apache.commons.io.FileUtilsTestCase.testMoveFile_Rename()
org.apache.commons.io.IOUtilsTestCase.testSkipStream()
org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_directory()
org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testThresholdReached()
org.apache.commons.io.input.ProxyReaderTest.testNullCharArray()
org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullListArgument()
org.apache.commons.io.LineIteratorTestCase.tearDown()
org.apache.commons.io.CopyUtilsTest.testCopy_stringToWriter()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold()
org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix()
org.apache.commons.io.filefilter.FileFilterTestCase.testDirectory()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete()
org.apache.commons.io.filefilter.RegexFileFilterTestCase.tearDown()
org.apache.commons.io.input.ProxyReaderTest$CustomNullReader.<init>($int)
org.apache.commons.io.FileUtilsTestCase.testCopyFile2WithoutFileDatePreservation()
org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter()
org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinishedFirst()
org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteQuietlyNormal()
org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware()
org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String()
org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir()
org.apache.commons.io.testtools.FileBasedTestCase.newFile($java.lang.String)
org.apache.commons.io.FileUtilsTestCase.testToFile2()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testToString()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream()
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.tearDown()
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadBoolean()
org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy()
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithSymlinkFile()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertTrueFiltersInvoked($int$org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[]$boolean[])
org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished_NoTrackAfter()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile2()
org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer($java.lang.String$java.io.File$long$boolean)
org.apache.commons.io.FileUtilsTestCase.test_openInputStream_notExists()
org.apache.commons.io.input.ProxyReaderTest.<init>($java.lang.String)
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithASymlinkDir()
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkDir()
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering($org.apache.commons.io.filefilter.IOFileFilter$java.io.File$boolean)
org.apache.commons.io.IOUtilsTestCase.testByteArrayToString()
org.apache.commons.io.FileUtilsTestCase.tearDown()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testComparator()
org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArrayArgument()
org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes()
org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testBelowThreshold()
org.apache.commons.io.FileUtilsTestCase.testIterateFiles()
org.apache.commons.io.LineIteratorTestCase.testValidEncoding()
org.apache.commons.io.LineIteratorTestCase.testCloseEarly()
org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNormal()
org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest()
org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles()
org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString()
org.apache.commons.io.FileUtilsTestCase.IGNOREtestCopyFileLarge()
org.apache.commons.io.FileUtilsTestCase.testToFiles4()
org.apache.commons.io.FileUtilsTestCase.testGetTempDirectoryPath()
org.apache.commons.io.input.ProxyReaderTest$CustomNullReader.read($char[])
org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold()
org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension()
org.apache.commons.io.FileUtilsTestCase.testReadFileToString()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullIn()
org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines($int)
org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectory()
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesRegular()
org.apache.commons.io.output.ProxyWriterTest.testWriteCharArrayPartial()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.tearDown()
org.apache.commons.io.output.ProxyWriterTest.testAppendCharSequence()
org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExists()
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testCleanEmpty()
org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence1()
org.apache.commons.io.IOUtilsTestCase.testStringToInputStream()
org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard()
org.apache.commons.io.FileUtilsTestCase.openOutputStream_noParent($boolean)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch($java.io.File)
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_fileName_nullFile()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortList()
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCorrectlyIdentifySymlinkWithParentSymLink()
org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArray()
org.apache.commons.io.output.ProxyWriterTest.testNullCharArray()
org.apache.commons.io.output.FileWriterWithEncodingTest.testSameEncoding()
org.apache.commons.io.FileUtilsListFilesTestCase.tearDown()
org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory($java.io.File$java.io.File$java.io.File)
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg()
org.apache.commons.io.FileUtilsTestCase.testCopyToSelf()
org.apache.commons.io.FileUtilsTestCase.<clinit>()
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnNullList()
org.apache.commons.io.monitor.FilesystemObserverTestCase.tearDown()
org.apache.commons.io.FileCleaningTrackerTestCase.tearDown()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileError()
org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriter()
org.apache.commons.io.filefilter.FileFilterTestCase.testAnd()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.determineWorkingDirectoryPath($java.lang.String$java.lang.String)
org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter()
org.apache.commons.io.FileUtilsTestCase.testChecksum()
org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_NullStrategy()
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesNested()
org.apache.commons.io.DirectoryWalkerTestCase.<clinit>()
org.apache.commons.io.FileUtilsTestCase.testChecksumOnDirectory()
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_encoding_badEncoding()
org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream()
org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream()
org.apache.commons.io.LineIteratorTestCase.testInvalidEncoding()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_3arg_nullSeparator()
org.apache.commons.io.output.ProxyWriterTest.testWriteString()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator()
org.apache.commons.io.LineIteratorTestCase.testMissingFile()
org.apache.commons.io.IOUtilsTestCase.testSkipFileReader()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild()
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.<init>($org.apache.commons.io.filefilter.IOFileFilter$org.apache.commons.io.filefilter.IOFileFilter$int)
org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount()
org.apache.commons.io.output.ProxyWriterTest.testWriteStringPartial()
org.apache.commons.io.DirectoryWalkerTestCaseJava4.<clinit>()
org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly()
org.apache.commons.io.FileUtilsTestCase.testToURLs1()
org.apache.commons.io.FileUtilsTestCase.testForceMkdir()
org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArgument()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter()
org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterableNull()
org.apache.commons.io.IOUtilsTestCase.<clinit>()
org.apache.commons.io.monitor.FilesystemObserverTestCase.setUp()
org.apache.commons.io.filefilter.FileFilterTestCase.testFiles()
org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyNonExistent()
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_nullFile()
org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked()
org.apache.commons.io.output.ProxyWriterTest.testWriteCharArray()
org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyDir()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetFalseFilters($org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[])
org.apache.commons.io.filefilter.FileFilterTestCase.testCanWrite()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory_Errors()
org.apache.commons.io.FileUtilsTestCase.testToFiles2()
org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterable()
org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly()
org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerFile()
org.apache.commons.io.IOUtilsTestCase.tearDown()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetTrueFilters($org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[])
org.apache.commons.io.FileUtilsTestCase.testForceDeleteDir()
org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir()
org.apache.commons.io.IOUtilsTestCase.testSkipReader()
org.apache.commons.io.IOUtilsTestCase.testStringToWriter()
org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullChecksum()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArray()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering($org.apache.commons.io.filefilter.IOFileFilter$java.io.File$boolean)
org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile2()
org.apache.commons.io.output.LockableFileWriterTest.testFileLocked()
org.apache.commons.io.LineIteratorTestCase.testNextOnly()
org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix()
org.apache.commons.io.CopyUtilsTest.testCopy_readerToWriter()
org.apache.commons.io.input.ProxyReaderTest$ProxyReaderImpl.<init>($java.io.Reader)
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_Writer_nullData()
org.apache.commons.io.FileUtilsTestCase.testGetUserDirectory()
org.apache.commons.io.filefilter.FileFilterTestCase.tearDown()
org.apache.commons.io.comparator.SizeFileComparatorTest.testNonexistantFile()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest()
org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2()
org.apache.commons.io.monitor.FilesystemObserverTestCase.testFileDelete()
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_directory()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFileFiltering($int$org.apache.commons.io.filefilter.IOFileFilter$java.io.File$boolean)
org.apache.commons.io.FileUtilsListFilesTestCase.setUp()
org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_exists()
org.apache.commons.io.FileUtilsTestCase.testTouch()
org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_fileName_nullFile()
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Errors()
org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoFileReference()
org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoDate()
org.apache.commons.io.FileUtilsTestCase.testToFiles3()
org.apache.commons.io.filefilter.FileFilterTestCase.<clinit>()
org.apache.commons.io.IOUtilsTestCase.testReaderToCharArray()
org.apache.commons.io.IOUtilsTestCase.testByteArrayToWriter()
org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyForNull()
org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_noParentCreateFile()
org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile3()
org.apache.commons.io.FileUtilsTestCase.testCopyFile2ToDir()
org.apache.commons.io.FileUtilsTestCase.testReadLines()
org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExistsCannotCreate()
org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence2()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFilenameFiltering($int$org.apache.commons.io.filefilter.IOFileFilter$java.io.File$boolean)
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding()
org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyFile()
org.apache.commons.io.filefilter.FileFilterTestCase.testCanRead()
org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder()
org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Rename()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors()
org.apache.commons.io.IOUtilsTestCase.testInputStreamToString()
org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_encoding_badEncoding()
org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_nullFile()
org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive()
org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile($java.io.File)
org.apache.commons.io.IOUtilsTestCase.testReaderToString()
org.apache.commons.io.filefilter.FileFilterTestCase.testDelegateFileFilter()
org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete_Failed()
org.apache.commons.io.FilenameUtilsTestCase.tearDown()
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testStillClearsIfGivenDirectoryIsASymlink()
org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory()
org.apache.commons.io.output.ProxyWriterTest.testNullString()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullIn()
org.apache.commons.io.FilenameUtilsTestCase.setUp()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset()
org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter()
org.apache.commons.io.FileUtilsTestCase.testToFile3()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToChild()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFiltering($int$org.apache.commons.io.filefilter.IOFileFilter$java.io.File$boolean)
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered()
org.apache.commons.io.filefilter.FileFilterTestCase.testNot()
org.apache.commons.io.LineIteratorTestCase.testNextLineOnly()
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.tearDown()
org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySize()
org.apache.commons.io.IOUtilsTestCase.testCharSequenceToInputStream()
org.apache.commons.io.FileUtilsTestCase.testCopyFile2()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest()
org.apache.commons.io.FileUtilsTestCase.testListFiles()
org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoFile()
org.apache.commons.io.IOUtilsTestCase.testReadLines_Reader()
org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteForce()
org.apache.commons.io.FileUtilsTestCase.testGetTempDirectory()
org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream()
org.apache.commons.io.output.ProxyWriterTest.<init>($java.lang.String)
org.apache.commons.io.LineIteratorTestCase.createFile($java.io.File$java.lang.String$int)
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding()
org.apache.commons.io.filefilter.FileFilterTestCase.testFalse()
org.apache.commons.io.input.ProxyReaderTest.testNullCharBuffer()
org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullFile()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFalseFiltersInvoked($int$org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[]$boolean[])
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnCannotDeleteFile()
org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory_Errors()
org.apache.commons.io.IOUtilsTestCase.testSkipFileInput()
org.apache.commons.io.FileUtilsTestCase.testGetUserDirectoryPath()
org.apache.commons.io.filefilter.FileFilterTestCase.testOr()
org.apache.commons.io.input.ProxyReaderTest$CustomNullReader.read($java.nio.CharBuffer)
org.apache.commons.io.FileUtilsTestCase.setUp()
org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArrayWithEncoding()
org.apache.commons.io.LineIteratorTestCase.setUp()
org.apache.commons.io.FileUtilsTestCase.testChecksumCRC32()
org.apache.commons.io.FileUtilsTestCase.testToFiles1()
org.apache.commons.io.FileUtilsTestCase.testToFile4()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding()
org.apache.commons.io.FileUtilsTestCase.testContentEquals()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullIn()
org.apache.commons.io.filefilter.FileFilterTestCase.testHidden()
org.apache.commons.io.FileUtilsTestCase.test_openInputStream_exists()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes()
org.apache.commons.io.FileUtilsTestCase.testCopyFile1()
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkFile()
org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory()
org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter()
org.apache.commons.io.filefilter.FileFilterTestCase.testTrue()
org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile()
org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.<init>($org.apache.commons.io.filefilter.IOFileFilter$org.apache.commons.io.filefilter.IOFileFilter$int)
org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNull()
org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile1()
org.apache.commons.io.FileUtilsTestCase.testReadFileToByteArray()
org.apache.commons.io.monitor.FilesystemObserverTestCase.testObserveSingleFile()
org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray()
org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard()
org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_existsButIsDirectory()
org.apache.commons.io.FileUtilsTestCase.testFileUtils()
org.apache.commons.io.FileUtilsTestCase.test_openInputStream_existsButIsDirectory()
org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding()
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithParentSymlinks()
org.apache.commons.io.IOUtilsTestCase.testStringToByteArray()
org.apache.commons.io.output.ProxyWriterTest.testNullCharSequencec()
