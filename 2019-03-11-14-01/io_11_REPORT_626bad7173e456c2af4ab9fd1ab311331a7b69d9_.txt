NUMBER OF NEW OR CHANGED ENTITIES : 100
NUMBER OF NEW OR CHANGED TESTS : 325
NUMBER OF ENTITY TO TEST : 183
NUMBER OF TEST TO RUN : 418
TOTAL TIME REQUIRED : 1.727756165 second
======================================================
======================================================
NEW OR CHANGED ENTITIES : 


org.apache.commons.io.input.Tailer.run()
org.apache.commons.io.comparator.DirectoryFileComparator.<clinit>()
org.apache.commons.io.input.CharSequenceInputStream.available()
org.apache.commons.io.input.CharSequenceInputStream.<init>($java.lang.CharSequence$java.nio.charset.Charset)
org.apache.commons.io.comparator.PathFileComparator.<clinit>()
org.apache.commons.io.filefilter.WildcardFileFilter.<init>($java.util.List$org.apache.commons.io.IOCase)
org.apache.commons.io.comparator.SizeFileComparator.SIZE_SUMDIR_COMPARATOR
org.apache.commons.io.comparator.DefaultFileComparator.DEFAULT_COMPARATOR
org.apache.commons.io.input.CharSequenceInputStream.mark_bbuf
org.apache.commons.io.input.Tailer.<init>($java.io.File$java.nio.charset.Charset$org.apache.commons.io.input.TailerListener$long$boolean$boolean$int)
org.apache.commons.io.input.Tailer.getDelay()
org.apache.commons.io.input.ReversedLinesFileReader.close()
org.apache.commons.io.input.Tailer.<init>($java.io.File$org.apache.commons.io.input.TailerListener$long$boolean$boolean$int)
org.apache.commons.io.input.Tailer.readLines($java.io.RandomAccessFile)
org.apache.commons.io.input.Tailer.DEFAULT_CHARSET
org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer($int)
org.apache.commons.io.IOUtils.<clinit>()
org.apache.commons.io.comparator.SizeFileComparator.SIZE_REVERSE
org.apache.commons.io.comparator.NameFileComparator.NAME_REVERSE
org.apache.commons.io.input.Tailer.stop()
org.apache.commons.io.comparator.NameFileComparator.NAME_SYSTEM_REVERSE
org.apache.commons.io.input.ReversedLinesFileReader.<init>($java.io.File$java.nio.charset.Charset)
org.apache.commons.io.output.ByteArrayOutputStream.reuseBuffers
org.apache.commons.io.input.Tailer.getFile()
org.apache.commons.io.input.Tailer.<clinit>()
org.apache.commons.io.input.Tailer.getRun()
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_SYSTEM_REVERSE
org.apache.commons.io.comparator.NameFileComparator.NAME_INSENSITIVE_REVERSE
org.apache.commons.io.input.CharSequenceInputStream.skip($long)
org.apache.commons.io.filefilter.WildcardFileFilter.<init>($java.lang.String$org.apache.commons.io.IOCase)
org.apache.commons.io.output.ByteArrayOutputStream.write($byte[]$int$int)
org.apache.commons.io.filefilter.MagicNumberFileFilter.accept($java.io.File)
org.apache.commons.io.comparator.SizeFileComparator.<clinit>()
org.apache.commons.io.comparator.NameFileComparator.NAME_INSENSITIVE_COMPARATOR
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_INSENSITIVE_REVERSE
org.apache.commons.io.FilenameUtils.splitOnTokens($java.lang.String)
org.apache.commons.io.comparator.PathFileComparator.PATH_REVERSE
org.apache.commons.io.comparator.SizeFileComparator.SIZE_COMPARATOR
org.apache.commons.io.output.ByteArrayOutputStream.<init>($int)
org.apache.commons.io.comparator.LastModifiedFileComparator.LASTMODIFIED_REVERSE
org.apache.commons.io.filefilter.MagicNumberFileFilter.<init>($byte[]$long)
org.apache.commons.io.filefilter.WildcardFileFilter.<init>($java.lang.String[]$org.apache.commons.io.IOCase)
org.apache.commons.io.comparator.NameFileComparator.NAME_SYSTEM_COMPARATOR
org.apache.commons.io.output.ByteArrayOutputStream.toString($java.nio.charset.Charset)
org.apache.commons.io.ByteOrderMark.UTF_BOM
org.apache.commons.io.input.CharSequenceInputStream.<init>($java.lang.CharSequence$java.lang.String)
org.apache.commons.io.input.CharSequenceInputStream.<init>($java.lang.CharSequence$java.lang.String$int)
org.apache.commons.io.filefilter.WildcardFileFilter.<init>($java.lang.String[])
org.apache.commons.io.input.CharSequenceInputStream.read($byte[])
org.apache.commons.io.input.ReversedLinesFileReader.readLine()
org.apache.commons.io.monitor.FileAlterationObserver.<init>($org.apache.commons.io.monitor.FileEntry$java.io.FileFilter$org.apache.commons.io.IOCase)
org.apache.commons.io.HexDump.<clinit>()
org.apache.commons.io.filefilter.WildcardFileFilter.toString()
org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveProxyClass($java.lang.String[])
org.apache.commons.io.input.CharSequenceInputStream.fillBuffer()
org.apache.commons.io.comparator.LastModifiedFileComparator.<clinit>()
org.apache.commons.io.filefilter.WildcardFileFilter.<init>($java.lang.String)
org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveClass($java.io.ObjectStreamClass)
org.apache.commons.io.filefilter.MagicNumberFileFilter.<init>($java.lang.String$long)
org.apache.commons.io.input.CharSequenceInputStream.read($byte[]$int$int)
org.apache.commons.io.FilenameUtils.<clinit>()
org.apache.commons.io.input.Tailer.stop($java.lang.Exception)
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_REVERSE
org.apache.commons.io.FileUtils.decodeUrl($java.lang.String)
org.apache.commons.io.comparator.SizeFileComparator.SIZE_SUMDIR_REVERSE
org.apache.commons.io.FileUtils.<clinit>()
org.apache.commons.io.comparator.PathFileComparator.PATH_INSENSITIVE_COMPARATOR
org.apache.commons.io.input.CharSequenceInputStream.read()
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_SYSTEM_COMPARATOR
org.apache.commons.io.filefilter.MagicNumberFileFilter.toString()
org.apache.commons.io.filefilter.WildcardFileFilter.accept($java.io.File$java.lang.String)
org.apache.commons.io.output.ByteArrayOutputStream.toString($java.lang.String)
org.apache.commons.io.comparator.DefaultFileComparator.<clinit>()
org.apache.commons.io.input.ReversedLinesFileReader.<init>($java.io.File)
org.apache.commons.io.comparator.PathFileComparator.PATH_COMPARATOR
org.apache.commons.io.input.XmlStreamReader.<clinit>()
org.apache.commons.io.comparator.DirectoryFileComparator.DIRECTORY_REVERSE
org.apache.commons.io.comparator.PathFileComparator.PATH_SYSTEM_REVERSE
org.apache.commons.io.comparator.NameFileComparator.<clinit>()
org.apache.commons.io.comparator.DirectoryFileComparator.DIRECTORY_COMPARATOR
org.apache.commons.io.input.ReversedLinesFileReader.<init>($java.io.File$int$java.lang.String)
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_INSENSITIVE_COMPARATOR
org.apache.commons.io.input.CharSequenceInputStream.<init>($java.lang.CharSequence$java.nio.charset.Charset$int)
org.apache.commons.io.comparator.ExtensionFileComparator.<clinit>()
org.apache.commons.io.input.Tailer.cset
org.apache.commons.io.comparator.NameFileComparator.NAME_COMPARATOR
org.apache.commons.io.filefilter.WildcardFileFilter.<init>($java.util.List)
org.apache.commons.io.comparator.PathFileComparator.PATH_INSENSITIVE_REVERSE
org.apache.commons.io.input.XmlStreamReader.isAppXml($java.lang.String)
org.apache.commons.io.filefilter.WildcardFileFilter.accept($java.io.File)
org.apache.commons.io.output.ByteArrayOutputStream.<clinit>()
org.apache.commons.io.input.XmlStreamReader.isTextXml($java.lang.String)
org.apache.commons.io.comparator.DefaultFileComparator.DEFAULT_REVERSE
org.apache.commons.io.input.CharSequenceInputStream.mark_cbuf
org.apache.commons.io.input.ReversedLinesFileReader.<init>($java.io.File$int$java.nio.charset.Charset)
org.apache.commons.io.comparator.LastModifiedFileComparator.LASTMODIFIED_COMPARATOR
org.apache.commons.io.comparator.PathFileComparator.PATH_SYSTEM_COMPARATOR
org.apache.commons.io.FileSystemUtils.<clinit>()
org.apache.commons.io.output.ByteArrayOutputStream.toString()
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_COMPARATOR
======================================================
======================================================
NEW OR CHANGED TESTS : 


org.apache.commons.io.DemuxTestCase.startReader($java.lang.String$java.lang.String$org.apache.commons.io.input.DemuxInputStream)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals($java.lang.Object[]$java.lang.Object[])
org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithoutBOM()
org.apache.commons.io.input.CharSequenceInputStreamTest.testAvailableSkip($java.lang.String)
org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithoutBOM()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortListNull()
org.apache.commons.io.FilenameUtilsTestCase.testGetExtension()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray_fromList()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop($java.lang.String$int)
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset($java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testRawBomValid($java.lang.String)
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_USASCII()
org.apache.commons.io.output.StringBuilderWriterTest.testWriteChar()
org.apache.commons.io.DemuxTestCase.testInputStream()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithoutBOMUtf32Be()
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf16Be()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.<clinit>()
org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithBOM()
org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArrayNullParameters()
org.apache.commons.io.input.BOMInputStreamTest.testNoBoms()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset()
org.apache.commons.io.filefilter.FileFilterTestCase.testDelegation()
org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructStringBuilder()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead($java.lang.String$java.lang.String)
org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray()
org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testUnsupportedEncodingUTF16()
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf32Be()
org.apache.commons.io.FilenameUtilsTestCase.testEquals_fullControl()
org.apache.commons.io.input.ReaderInputStreamTest.testUTF16WithSingleByteRead()
org.apache.commons.io.input.ProxyReaderTest.testNullCharArray()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf16Be()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S0_UTF16()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSetNullParameters()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf8()
org.apache.commons.io.input.TailerTest.testMultiByteBreak()
org.apache.commons.io.input.CharSequenceInputStreamTest.testAvailableRead($java.lang.String)
org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMSingleRead()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop_UTF8()
org.apache.commons.io.comparator.DirectoryFileComparatorTest.setUp()
org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid($java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.FilenameUtilsTestCase.testEquals()
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_USASCII()
org.apache.commons.io.input.XmlStreamReaderTest.testHttp()
org.apache.commons.io.input.BOMInputStreamTest.testClose()
org.apache.commons.io.input.CountingInputStreamTest.testZeroLength3()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf32Be()
org.apache.commons.io.output.StringBuilderWriterTest.testWriteString()
org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens()
org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.filefilter.FileFilterTestCase.testEnsureTestCoverage()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testToString()
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testObject2()
org.apache.commons.io.IOUtilsTestCase.testAsBufferedNull()
org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength()
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf8()
org.apache.commons.io.FilenameUtilsTestCase.testIndexOfExtension()
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadBoolean()
org.apache.commons.io.input.TailerTest.testInterrupt()
org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead()
org.apache.commons.io.input.ReaderInputStreamTest.testLargeUTF8WithBufferedRead()
org.apache.commons.io.FilenameUtilsTestCase.testGetBaseName()
org.apache.commons.io.input.XmlStreamReaderTest.<clinit>()
org.apache.commons.io.input.XmlStreamReaderTest.testRawBomUtf8()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding($java.lang.String$boolean$java.lang.String$java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf16Le()
org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateRawEncoding($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop_UTF16()
org.apache.commons.io.output.StringBuilderWriterTest.testAppendCharSequence()
org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML()
org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithBOM()
org.apache.commons.io.CharsetsTestCase.testRequiredCharsets()
org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructCapacity()
org.apache.commons.io.input.BOMInputStreamTest.testReadSmall()
org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized()
org.apache.commons.io.output.WriterOutputStreamTest.testWriteImmediately()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip($java.lang.String)
org.apache.commons.io.CharsetsTestCase.testUtf16Be()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateHttpEncoding($java.lang.String$java.lang.String$java.lang.String$java.lang.String$boolean$java.lang.String)
org.apache.commons.io.output.StringBuilderWriterTest.<clinit>()
org.apache.commons.io.DemuxTestCase.testOutputStream()
org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testComparator()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356($int$int$int$java.lang.String)
org.apache.commons.io.input.NullReaderTest.testMarkAndReset()
org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testUnsupportedEncodingBig5()
org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes()
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String()
org.apache.commons.io.output.StringBuilderWriterTest.testWriteCharArray()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf32Le()
org.apache.commons.io.output.TaggedOutputStreamTest.testOtherException()
org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion()
org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid($java.lang.String)
org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator()
org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf8()
org.apache.commons.io.input.compatibility.XmlStreamReader.<clinit>()
org.apache.commons.io.input.ReaderInputStreamTest.testCharsetMismatchInfiniteLoop()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString()
org.apache.commons.io.input.CountingInputStreamTest.testZeroLength2()
org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_UTF8()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterListNullParameters()
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testObject1()
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinderString.find($java.io.File)
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong()
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testLong()
org.apache.commons.io.DemuxTestCase.doStart()
org.apache.commons.io.input.compatibility.XmlStreamReader.isAppXml($java.lang.String)
org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM()
org.apache.commons.io.comparator.SizeFileComparatorTest.setUp()
org.apache.commons.io.input.CountingInputStreamTest.testEOF2()
org.apache.commons.io.input.NullReaderTest.testEOFException()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.tearDown()
org.apache.commons.io.output.ProxyWriterTest.testWriteCharArrayPartial()
org.apache.commons.io.input.ReaderInputStreamTest.testReadZero()
org.apache.commons.io.output.ProxyWriterTest.testAppendCharSequence()
org.apache.commons.io.IOUtilsTestCase.testAsBufferedInputStream()
org.apache.commons.io.input.CharSequenceReaderTest.testRead()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncodingUtf32()
org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomCp1047()
org.apache.commons.io.input.ReaderInputStreamTest.testReadZeroEmptyString()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterValidation()
org.apache.commons.io.output.CountingOutputStreamTest.testCounting()
org.apache.commons.io.CharsetsTestCase.testUtf8()
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_fileName_nullFile()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortList()
org.apache.commons.io.DemuxTestCase.getOutput($java.lang.String)
org.apache.commons.io.input.compatibility.XmlStreamReader.isTextXml($java.lang.String)
org.apache.commons.io.FilenameUtilsTestCase.testIndexOfLastSeparator()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError($java.lang.String$java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding($java.lang.String$java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.BOMInputStreamTest.testSkipWithoutBOM()
org.apache.commons.io.input.XmlStreamReaderTest.testRawBomUtf32()
org.apache.commons.io.output.ProxyWriterTest.testNullCharArray()
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFully()
org.apache.commons.io.output.StringBuilderWriterTest.testClose()
org.apache.commons.io.CharsetsTestCase.testToCharset()
org.apache.commons.io.FilenameUtilsWildcardTestCase.testLocaleIndependence()
org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithoutBOM()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S1_UTF8()
org.apache.commons.io.input.TailerTest.createFile($java.io.File$long)
org.apache.commons.io.FilenameUtilsTestCase.testIsExtension()
org.apache.commons.io.comparator.NameFileComparatorTest.testCaseSensitivity()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet()
org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf16BE()
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_RequiredCharsets()
org.apache.commons.io.input.CountingInputStreamTest.testZeroLength1()
org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath()
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadShort()
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeSingleByteRead_UTF8()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError($java.lang.String$boolean$java.lang.String$java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_encoding_badEncoding()
org.apache.commons.io.input.CharSequenceInputStreamTest.checkAvail($java.io.InputStream$int)
org.apache.commons.io.input.compatibility.XmlStreamReader.<init>($java.net.URLConnection)
org.apache.commons.io.input.CountingInputStreamTest.testEOF3()
org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero_EmptyString()
org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM()
org.apache.commons.io.output.StringBuilderWriterTest.testAppendChar()
org.apache.commons.io.input.CountingInputStreamTest.testResetting()
org.apache.commons.io.output.ProxyWriterTest.testWriteString()
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find($java.io.File)
org.apache.commons.io.input.CharSequenceReaderTest.testMarkSupported()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateRawEncoding($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.NullInputStreamTest.testMarkAndReset()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUnsupportedEncodingBig5()
org.apache.commons.io.input.ReaderInputStreamTest.testWithBufferedRead($java.lang.String$java.lang.String)
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf16Le()
org.apache.commons.io.input.NullReaderTest.testMarkNotSupported()
org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_UTF8()
org.apache.commons.io.output.ProxyWriterTest.testWriteStringPartial()
org.apache.commons.io.input.TailerTest.testStopWithNoFile()
org.apache.commons.io.FilenameUtilsTestCase.testGetPathNoEndSeparator()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_UTF8()
org.apache.commons.io.comparator.PathFileComparatorTest.setUp()
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFloat()
org.apache.commons.io.IOUtilsTestCase.<clinit>()
org.apache.commons.io.IOUtilsTestCase.testAsBufferedWriter()
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_nullFile()
org.apache.commons.io.FilenameUtilsWildcardTestCase.<clinit>()
org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM()
org.apache.commons.io.input.TaggedInputStreamTest.testOtherException()
org.apache.commons.io.output.ProxyWriterTest.testWriteCharArray()
org.apache.commons.io.CharsetsTestCase.testUtf16()
org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterable()
org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithBOM()
org.apache.commons.io.input.TailerTest.testTailer()
org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf16LE()
org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32LE()
org.apache.commons.io.input.ReaderInputStreamTest.testLargeUTF8WithSingleByteRead()
org.apache.commons.io.input.NullInputStreamTest.testEOFException()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D20_S0_UTF8()
org.apache.commons.io.comparator.PathFileComparatorTest.testCaseSensitivity()
org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_RequiredCharsets()
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadDouble()
org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateHttpEncoding($java.lang.String$java.lang.String$java.lang.String$java.lang.String$boolean$java.lang.String)
org.apache.commons.io.comparator.ExtensionFileComparatorTest.setUp()
org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient($java.lang.String$java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.NullInputStreamTest.testMarkNotSupported()
org.apache.commons.io.input.NullInputStreamTest.testSkip()
org.apache.commons.io.comparator.NameFileComparatorTest.setUp()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUnsupportedEncodingUTF16()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArray()
org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem()
org.apache.commons.io.IOUtilsTestCase.testAsBufferedOutputStream()
org.apache.commons.io.output.WriterOutputStreamTest.testFlush()
org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_RequiredCharset()
org.apache.commons.io.output.StringBuilderWriterTest.testWriteCharArrayPortion()
org.apache.commons.io.input.CharSequenceInputStreamTest.testAvailable()
org.apache.commons.io.input.ClosedInputStreamTest.testRead()
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedShort()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D13_S0_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S2_UTF8()
org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_UTF16()
org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix()
org.apache.commons.io.IOUtilsTestCase.testAsBufferedReader()
org.apache.commons.io.comparator.SizeFileComparatorTest.testNonexistantFile()
org.apache.commons.io.FilenameUtilsTestCase.testGetPath()
org.apache.commons.io.input.BOMInputStreamTest.testReadTwiceWithBOM()
org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp()
org.apache.commons.io.input.TailerTest.testTailerEof()
org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32BE()
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_directory()
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S0_UTF8()
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testExpected()
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLine()
org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty()
org.apache.commons.io.input.compatibility.XmlStreamReader.doRawStream($java.io.InputStream)
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray()
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadInt()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_UTF8()
org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84()
org.apache.commons.io.input.ReaderInputStreamTest.testWithSingleByteRead($java.lang.String$java.lang.String)
org.apache.commons.io.filefilter.FileFilterTestCase.<clinit>()
org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMBufferedRead()
org.apache.commons.io.input.CountingInputStreamTest.testSkipping()
org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithoutBOM()
org.apache.commons.io.input.XmlStreamReaderTest.testRawBomUtf16()
org.apache.commons.io.input.CountingInputStreamTest.testEOF1()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUcs4()
org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomInvalid($java.lang.String)
org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp()
org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes()
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStreamWithReset()
org.apache.commons.io.CharsetsTestCase.testUsAscii()
org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithBufferedRead()
org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithSingleByteRead()
org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithBOM()
org.apache.commons.io.output.StringBuilderWriterTest.testWriteStringPortion()
org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithBOM()
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedByte()
org.apache.commons.io.DemuxTestCase.<clinit>()
org.apache.commons.io.input.BOMInputStreamTest.testSupportCode()
org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomIso8859_1()
org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch2()
org.apache.commons.io.input.compatibility.XmlStreamReader.<init>($java.io.InputStream$boolean)
org.apache.commons.io.comparator.DefaultFileComparatorTest.setUp()
org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructNull()
org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_AvailableCharset()
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testPrimitiveLong()
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadByte()
org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.ReaderInputStreamTest.<clinit>()
org.apache.commons.io.DemuxTestCase.doJoin()
org.apache.commons.io.output.ProxyWriterTest.testNullString()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp()
org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithoutBOM()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset()
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch($java.lang.String$java.lang.String$boolean)
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testReverseComparator()
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeBufferedRead_RequiredCharsets()
org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithoutBOM()
org.apache.commons.io.comparator.ExtensionFileComparatorTest.testCaseSensitivity()
org.apache.commons.io.input.BOMInputStreamTest.testReadTwiceWithoutBOM()
org.apache.commons.io.input.XmlStreamReaderTest.testRawContent()
org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedOnSystem()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithoutBOMUtf32Le()
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testResolveProxyClass()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_RequiredCharsets()
org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension()
org.apache.commons.io.filefilter.FileFilterTestCase.testNullFilters()
org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude()
org.apache.commons.io.output.StringBuilderWriterTest.testAppendCharSequencePortion()
org.apache.commons.io.DemuxTestCase.getInput($java.lang.String)
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStream()
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkSupported()
org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero_RequiredCharsets()
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadChar()
org.apache.commons.io.FilenameUtilsTestCase.testGetName()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray()
org.apache.commons.io.CharsetsTestCase.testUtf16Le()
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeSingleByteRead_RequiredCharsets()
org.apache.commons.io.input.ProxyReaderTest.testNullCharBuffer()
org.apache.commons.io.input.BOMInputStreamTest.testSkipWithBOM()
org.apache.commons.io.output.CountingOutputStreamTest.assertByteArrayEquals($java.lang.String$byte[]$int$int)
org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero($java.lang.String)
org.apache.commons.io.input.CharSequenceInputStreamTest.testCharsetMismatchInfiniteLoop($java.lang.String)
org.apache.commons.io.input.CountingInputStreamTest.testCounting()
org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUsAscii()
org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor()
org.apache.commons.io.input.XmlStreamReaderTest.getXML($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncoding()
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUTF()
org.apache.commons.io.input.NullReaderTest.testSkip()
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes()
org.apache.commons.io.DemuxTestCase.startWriter($java.lang.String$java.lang.String$org.apache.commons.io.output.DemuxOutputStream)
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf32Le()
org.apache.commons.io.input.CharSequenceInputStreamTest.testCharsetMismatchInfiniteLoop_RequiredCharsets()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUcs2()
org.apache.commons.io.CharsetsTestCase.testIso8859_1()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList_fromArray()
org.apache.commons.io.FilenameUtilsWildcardTestCase.test_IO_246()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList()
org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find($java.io.File)
org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedError_IO_128()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D13_S1_UTF8()
org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArrayNull()
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeBufferedRead_UTF8()
org.apache.commons.io.input.TailerTest.testIO335()
org.apache.commons.io.input.CharSequenceInputStreamTest.<clinit>()
org.apache.commons.io.output.ProxyWriterTest.testNullCharSequencec()
======================================================
======================================================
ALL ENTITY TO TEST : 


org.apache.commons.io.input.Tailer.run()
org.apache.commons.io.comparator.DirectoryFileComparator.<clinit>()
org.apache.commons.io.monitor.FileAlterationObserver.getListeners()
org.apache.commons.io.FileUtils.ONE_MB_BI
org.apache.commons.io.output.ByteArrayOutputStream.currentBufferIndex
org.apache.commons.io.input.CharSequenceInputStream.available()
org.apache.commons.io.monitor.FileAlterationObserver.rootEntry
org.apache.commons.io.input.CharSequenceInputStream.<init>($java.lang.CharSequence$java.nio.charset.Charset)
org.apache.commons.io.filefilter.MagicNumberFileFilter.magicNumbers
org.apache.commons.io.comparator.PathFileComparator.<clinit>()
org.apache.commons.io.filefilter.WildcardFileFilter.<init>($java.util.List$org.apache.commons.io.IOCase)
org.apache.commons.io.output.XmlStreamWriter.<clinit>()
org.apache.commons.io.monitor.FileAlterationObserver.removeListener($org.apache.commons.io.monitor.FileAlterationListener)
org.apache.commons.io.HexDump._hexcodes
org.apache.commons.io.FilenameUtils.isSystemWindows()
org.apache.commons.io.monitor.FileAlterationObserver.comparator
org.apache.commons.io.monitor.FileAlterationMonitor.run()
org.apache.commons.io.input.CharSequenceInputStream.encoder
org.apache.commons.io.comparator.SizeFileComparator.SIZE_SUMDIR_COMPARATOR
org.apache.commons.io.comparator.DefaultFileComparator.DEFAULT_COMPARATOR
org.apache.commons.io.input.CharSequenceInputStream.mark_bbuf
org.apache.commons.io.input.Tailer.<init>($java.io.File$java.nio.charset.Charset$org.apache.commons.io.input.TailerListener$long$boolean$boolean$int)
org.apache.commons.io.input.Tailer.getDelay()
org.apache.commons.io.input.ReversedLinesFileReader.close()
org.apache.commons.io.input.Tailer.<init>($java.io.File$org.apache.commons.io.input.TailerListener$long$boolean$boolean$int)
org.apache.commons.io.input.Tailer.readLines($java.io.RandomAccessFile)
org.apache.commons.io.input.Tailer.DEFAULT_CHARSET
org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer($int)
org.apache.commons.io.IOUtils.<clinit>()
org.apache.commons.io.comparator.SizeFileComparator.SIZE_REVERSE
org.apache.commons.io.filefilter.MagicNumberFileFilter.byteOffset
org.apache.commons.io.monitor.FileAlterationObserver.listeners
org.apache.commons.io.comparator.NameFileComparator.NAME_REVERSE
org.apache.commons.io.input.ReversedLinesFileReader.encoding
org.apache.commons.io.input.XmlStreamReader.XML_GUESS_BYTES
org.apache.commons.io.monitor.FileAlterationObserver.listFiles($java.io.File)
org.apache.commons.io.input.Tailer.file
org.apache.commons.io.input.XmlStreamReader.ENCODING_PATTERN
org.apache.commons.io.filefilter.WildcardFileFilter.caseSensitivity
org.apache.commons.io.input.ReversedLinesFileReader.currentFilePart
org.apache.commons.io.input.ReversedLinesFileReader.blockSize
org.apache.commons.io.FileUtils.ONE_YB
org.apache.commons.io.input.Tailer.stop()
org.apache.commons.io.input.Tailer.reOpen
org.apache.commons.io.comparator.NameFileComparator.NAME_SYSTEM_REVERSE
org.apache.commons.io.input.ReversedLinesFileReader.<init>($java.io.File$java.nio.charset.Charset)
org.apache.commons.io.output.ByteArrayOutputStream.reuseBuffers
org.apache.commons.io.input.Tailer.getFile()
org.apache.commons.io.input.Tailer.<clinit>()
org.apache.commons.io.input.Tailer.getRun()
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_SYSTEM_REVERSE
org.apache.commons.io.comparator.NameFileComparator.NAME_INSENSITIVE_REVERSE
org.apache.commons.io.HexDump._shifts
org.apache.commons.io.input.CharSequenceInputStream.skip($long)
org.apache.commons.io.filefilter.WildcardFileFilter.<init>($java.lang.String$org.apache.commons.io.IOCase)
org.apache.commons.io.output.DeferredFileOutputStream.<init>($int$java.io.File$java.lang.String$java.lang.String$java.io.File)
org.apache.commons.io.output.ByteArrayOutputStream.write($byte[]$int$int)
org.apache.commons.io.input.XmlStreamReader.CHARSET_PATTERN
org.apache.commons.io.input.Tailer.listener
org.apache.commons.io.filefilter.MagicNumberFileFilter.accept($java.io.File)
org.apache.commons.io.monitor.FileAlterationObserver.addListener($org.apache.commons.io.monitor.FileAlterationListener)
org.apache.commons.io.comparator.SizeFileComparator.<clinit>()
org.apache.commons.io.FileSystemUtils.DF
org.apache.commons.io.comparator.NameFileComparator.NAME_INSENSITIVE_COMPARATOR
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_INSENSITIVE_REVERSE
org.apache.commons.io.FilenameUtils.splitOnTokens($java.lang.String)
org.apache.commons.io.comparator.PathFileComparator.PATH_REVERSE
org.apache.commons.io.FileUtils.ONE_ZB
org.apache.commons.io.comparator.SizeFileComparator.SIZE_COMPARATOR
org.apache.commons.io.output.ByteArrayOutputStream.<init>($int)
org.apache.commons.io.comparator.LastModifiedFileComparator.LASTMODIFIED_REVERSE
org.apache.commons.io.input.ReversedLinesFileReader.avoidNewlineSplitBufferSize
org.apache.commons.io.IOUtils.LINE_SEPARATOR
org.apache.commons.io.output.ByteArrayOutputStream.currentBuffer
org.apache.commons.io.input.CharSequenceInputStream.cbuf
org.apache.commons.io.input.Tailer.inbuf
org.apache.commons.io.FileUtils.ONE_KB_BI
org.apache.commons.io.filefilter.MagicNumberFileFilter.<init>($byte[]$long)
org.apache.commons.io.filefilter.WildcardFileFilter.wildcards
org.apache.commons.io.monitor.FileAlterationObserver.doCreate($org.apache.commons.io.monitor.FileEntry)
org.apache.commons.io.FileUtils.ONE_TB_BI
org.apache.commons.io.input.Tailer.end
org.apache.commons.io.filefilter.WildcardFileFilter.<init>($java.lang.String[]$org.apache.commons.io.IOCase)
org.apache.commons.io.HexDump.EOL
org.apache.commons.io.IOUtils.DIR_SEPARATOR
org.apache.commons.io.comparator.NameFileComparator.NAME_SYSTEM_COMPARATOR
org.apache.commons.io.output.ByteArrayOutputStream.toString($java.nio.charset.Charset)
org.apache.commons.io.input.ReversedLinesFileReader.totalByteLength
org.apache.commons.io.monitor.FileAlterationObserver.toString()
org.apache.commons.io.input.CharSequenceInputStream.bbuf
org.apache.commons.io.ByteOrderMark.UTF_BOM
org.apache.commons.io.input.CharSequenceInputStream.<init>($java.lang.CharSequence$java.lang.String)
org.apache.commons.io.input.CharSequenceInputStream.<init>($java.lang.CharSequence$java.lang.String$int)
org.apache.commons.io.filefilter.WildcardFileFilter.<init>($java.lang.String[])
org.apache.commons.io.input.CharSequenceInputStream.read($byte[])
org.apache.commons.io.input.ReversedLinesFileReader.readLine()
org.apache.commons.io.monitor.FilesystemObserver.<init>($org.apache.commons.io.monitor.FilesystemEntry$java.io.FileFilter$org.apache.commons.io.IOCase)
org.apache.commons.io.monitor.FileAlterationObserver.<init>($org.apache.commons.io.monitor.FileEntry$java.io.FileFilter$org.apache.commons.io.IOCase)
org.apache.commons.io.input.ReversedLinesFileReader.trailingNewlineOfFileSkipped
org.apache.commons.io.HexDump.<clinit>()
org.apache.commons.io.input.XmlStreamReader.<init>($java.net.URLConnection$java.lang.String)
org.apache.commons.io.filefilter.WildcardFileFilter.toString()
org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveProxyClass($java.lang.String[])
org.apache.commons.io.monitor.FileObserver.<init>($org.apache.commons.io.monitor.FileEntry$java.io.FileFilter$org.apache.commons.io.IOCase)
org.apache.commons.io.FilenameUtils.OTHER_SEPARATOR
org.apache.commons.io.IOCase.<clinit>()
org.apache.commons.io.input.CharSequenceInputStream.fillBuffer()
org.apache.commons.io.comparator.LastModifiedFileComparator.<clinit>()
org.apache.commons.io.filefilter.WildcardFileFilter.<init>($java.lang.String)
org.apache.commons.io.input.ReversedLinesFileReader.byteDecrement
org.apache.commons.io.output.ByteArrayOutputStream.buffers
org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveClass($java.io.ObjectStreamClass)
org.apache.commons.io.filefilter.MagicNumberFileFilter.<init>($java.lang.String$long)
org.apache.commons.io.input.CharSequenceInputStream.read($byte[]$int$int)
org.apache.commons.io.FilenameUtils.<clinit>()
org.apache.commons.io.input.ReversedLinesFileReader.totalBlockCount
org.apache.commons.io.input.Tailer.stop($java.lang.Exception)
org.apache.commons.io.monitor.FileAlterationObserver.fileFilter
org.apache.commons.io.FileUtils.ONE_EB_BI
org.apache.commons.io.output.ByteArrayOutputStream.filledBufferSum
org.apache.commons.io.input.ReversedLinesFileReader.newLineSequences
org.apache.commons.io.FileUtils.ONE_PB_BI
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_REVERSE
org.apache.commons.io.FileUtils.ONE_GB_BI
org.apache.commons.io.FileUtils.decodeUrl($java.lang.String)
org.apache.commons.io.comparator.SizeFileComparator.SIZE_SUMDIR_REVERSE
org.apache.commons.io.FileUtils.<clinit>()
org.apache.commons.io.comparator.PathFileComparator.PATH_INSENSITIVE_COMPARATOR
org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify($org.apache.commons.io.monitor.FileEntry$org.apache.commons.io.monitor.FileEntry[]$java.io.File[])
org.apache.commons.io.FileSystemUtils.OS
org.apache.commons.io.input.CharSequenceInputStream.read()
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_SYSTEM_COMPARATOR
org.apache.commons.io.filefilter.MagicNumberFileFilter.toString()
org.apache.commons.io.filefilter.WildcardFileFilter.accept($java.io.File$java.lang.String)
org.apache.commons.io.output.ByteArrayOutputStream.toString($java.lang.String)
org.apache.commons.io.input.Tailer.run
org.apache.commons.io.output.ByteArrayOutputStream.count
org.apache.commons.io.monitor.FileAlterationObserver.doMatch($org.apache.commons.io.monitor.FileEntry$java.io.File)
org.apache.commons.io.comparator.DefaultFileComparator.<clinit>()
org.apache.commons.io.input.XmlStreamReader.BOMS
org.apache.commons.io.input.ReversedLinesFileReader.<init>($java.io.File)
org.apache.commons.io.input.XmlStreamReader.<init>($java.io.InputStream$boolean$java.lang.String)
org.apache.commons.io.comparator.PathFileComparator.PATH_COMPARATOR
org.apache.commons.io.monitor.FileAlterationObserver.getFileFilter()
org.apache.commons.io.monitor.FileAlterationObserver.getDirectory()
org.apache.commons.io.input.XmlStreamReader.<clinit>()
org.apache.commons.io.comparator.DirectoryFileComparator.DIRECTORY_REVERSE
org.apache.commons.io.comparator.PathFileComparator.PATH_SYSTEM_REVERSE
org.apache.commons.io.comparator.NameFileComparator.<clinit>()
org.apache.commons.io.FileSystemUtils.INSTANCE
org.apache.commons.io.comparator.DirectoryFileComparator.DIRECTORY_COMPARATOR
org.apache.commons.io.input.ReversedLinesFileReader.randomAccessFile
org.apache.commons.io.input.Tailer.delayMillis
org.apache.commons.io.monitor.FileAlterationObserver.doDelete($org.apache.commons.io.monitor.FileEntry)
org.apache.commons.io.input.ReversedLinesFileReader.<init>($java.io.File$int$java.lang.String)
org.apache.commons.io.FilenameUtils.EXTENSION_SEPARATOR_STR
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_INSENSITIVE_COMPARATOR
org.apache.commons.io.FileUtils.EMPTY_FILE_ARRAY
org.apache.commons.io.input.CharSequenceInputStream.<init>($java.lang.CharSequence$java.nio.charset.Charset$int)
org.apache.commons.io.comparator.ExtensionFileComparator.<clinit>()
org.apache.commons.io.input.XmlStreamReader.getContentTypeEncoding($java.lang.String)
org.apache.commons.io.monitor.FileAlterationObserver.initialize()
org.apache.commons.io.input.Tailer.cset
org.apache.commons.io.comparator.NameFileComparator.NAME_COMPARATOR
org.apache.commons.io.filefilter.WildcardFileFilter.<init>($java.util.List)
org.apache.commons.io.comparator.PathFileComparator.PATH_INSENSITIVE_REVERSE
org.apache.commons.io.input.XmlStreamReader.isAppXml($java.lang.String)
org.apache.commons.io.filefilter.WildcardFileFilter.accept($java.io.File)
org.apache.commons.io.output.ByteArrayOutputStream.<clinit>()
org.apache.commons.io.input.XmlStreamReader.isTextXml($java.lang.String)
org.apache.commons.io.comparator.DefaultFileComparator.DEFAULT_REVERSE
org.apache.commons.io.input.CharSequenceInputStream.mark_cbuf
org.apache.commons.io.input.ReversedLinesFileReader.<init>($java.io.File$int$java.nio.charset.Charset)
org.apache.commons.io.comparator.LastModifiedFileComparator.LASTMODIFIED_COMPARATOR
org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify()
org.apache.commons.io.output.ByteArrayOutputStream.<init>()
org.apache.commons.io.input.XmlStreamReader.<init>($java.io.InputStream$java.lang.String$boolean$java.lang.String)
org.apache.commons.io.comparator.PathFileComparator.PATH_SYSTEM_COMPARATOR
org.apache.commons.io.FileSystemUtils.<clinit>()
org.apache.commons.io.FilenameUtils.SYSTEM_SEPARATOR
org.apache.commons.io.output.ByteArrayOutputStream.EMPTY_BYTE_ARRAY
org.apache.commons.io.output.ByteArrayOutputStream.toString()
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_COMPARATOR
======================================================
======================================================
ALL TESTS TO RUN : 


org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithoutBOM()
org.apache.commons.io.input.CharSequenceInputStreamTest.testAvailableSkip($java.lang.String)
org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithoutBOM()
org.apache.commons.io.FilenameUtilsTestCase.testGetExtension()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray_fromList()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop($java.lang.String$int)
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset($java.lang.String)
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf16Be()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.<clinit>()
org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArrayNullParameters()
org.apache.commons.io.input.BOMInputStreamTest.testNoBoms()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset()
org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructStringBuilder()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead($java.lang.String$java.lang.String)
org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testUnsupportedEncodingUTF16()
org.apache.commons.io.FilenameUtilsTestCase.testEquals_fullControl()
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf32Be()
org.apache.commons.io.input.ReaderInputStreamTest.testUTF16WithSingleByteRead()
org.apache.commons.io.input.ProxyReaderTest.testNullCharArray()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf16Be()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S0_UTF16()
org.apache.commons.io.CopyUtilsTest.testCopy_stringToWriter()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf8()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge()
org.apache.commons.io.input.TailerTest.testMultiByteBreak()
org.apache.commons.io.input.CharSequenceInputStreamTest.testAvailableRead($java.lang.String)
org.apache.commons.io.comparator.DirectoryFileComparatorTest.setUp()
org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid($java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest.testHttp()
org.apache.commons.io.input.BOMInputStreamTest.testClose()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf32Be()
org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens()
org.apache.commons.io.filefilter.FileFilterTestCase.testEnsureTestCoverage()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream()
org.apache.commons.io.FilenameUtilsTestCase.testIndexOfExtension()
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadBoolean()
org.apache.commons.io.input.TailerTest.testInterrupt()
org.apache.commons.io.input.ReaderInputStreamTest.testLargeUTF8WithBufferedRead()
org.apache.commons.io.FilenameUtilsTestCase.testGetBaseName()
org.apache.commons.io.input.XmlStreamReaderTest.<clinit>()
org.apache.commons.io.input.XmlStreamReaderTest.testRawBomUtf8()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding($java.lang.String$boolean$java.lang.String$java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf16Le()
org.apache.commons.io.output.StringBuilderWriterTest.testAppendCharSequence()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop_UTF16()
org.apache.commons.io.input.BOMInputStreamTest.testReadSmall()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullData()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullData()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip($java.lang.String)
org.apache.commons.io.output.StringBuilderWriterTest.<clinit>()
org.apache.commons.io.DemuxTestCase.testOutputStream()
org.apache.commons.io.input.NullReaderTest.testMarkAndReset()
org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testUnsupportedEncodingBig5()
org.apache.commons.io.output.StringBuilderWriterTest.testWriteCharArray()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf32Le()
org.apache.commons.io.output.TaggedOutputStreamTest.testOtherException()
org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid($java.lang.String)
org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString()
org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding()
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinderString.find($java.io.File)
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullData()
org.apache.commons.io.DemuxTestCase.doStart()
org.apache.commons.io.input.compatibility.XmlStreamReader.isAppXml($java.lang.String)
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullData()
org.apache.commons.io.comparator.SizeFileComparatorTest.setUp()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.tearDown()
org.apache.commons.io.input.NullReaderTest.testEOFException()
org.apache.commons.io.input.ReaderInputStreamTest.testReadZero()
org.apache.commons.io.IOUtilsTestCase.testAsBufferedInputStream()
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncodingUtf32()
org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomCp1047()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterValidation()
org.apache.commons.io.CharsetsTestCase.testUtf8()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortList()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullEncoding()
org.apache.commons.io.input.compatibility.XmlStreamReader.isTextXml($java.lang.String)
org.apache.commons.io.FilenameUtilsTestCase.testIndexOfLastSeparator()
org.apache.commons.io.monitor.AbstractMonitorTestCase.createObserver($java.io.File$java.io.FileFilter)
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError($java.lang.String$java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding($java.lang.String$java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest.testRawBomUtf32()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullData()
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFully()
org.apache.commons.io.FilenameUtilsWildcardTestCase.testLocaleIndependence()
org.apache.commons.io.input.TailerTest.createFile($java.io.File$long)
org.apache.commons.io.comparator.NameFileComparatorTest.testCaseSensitivity()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet()
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_RequiredCharsets()
org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriter()
org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullIn()
org.apache.commons.io.FileUtilsTestCase.createCircularSymLink($java.io.File)
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_encoding_badEncoding()
org.apache.commons.io.input.CharSequenceInputStreamTest.checkAvail($java.io.InputStream$int)
org.apache.commons.io.input.compatibility.XmlStreamReader.<init>($java.net.URLConnection)
org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero_EmptyString()
org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM()
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find($java.io.File)
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator()
org.apache.commons.io.input.NullInputStreamTest.testMarkAndReset()
org.apache.commons.io.input.ReaderInputStreamTest.testWithBufferedRead($java.lang.String$java.lang.String)
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf16Le()
org.apache.commons.io.input.NullReaderTest.testMarkNotSupported()
org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_UTF8()
org.apache.commons.io.output.ProxyWriterTest.testWriteStringPartial()
org.apache.commons.io.input.TailerTest.testStopWithNoFile()
org.apache.commons.io.FilenameUtilsTestCase.testGetPathNoEndSeparator()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testFileSizeIsExactMultipleOfBlockSize()
org.apache.commons.io.comparator.PathFileComparatorTest.setUp()
org.apache.commons.io.FilenameUtilsWildcardTestCase.<clinit>()
org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM()
org.apache.commons.io.input.TaggedInputStreamTest.testOtherException()
org.apache.commons.io.output.ProxyWriterTest.testWriteCharArray()
org.apache.commons.io.input.TailerTest.tearDown()
org.apache.commons.io.CharsetsTestCase.testUtf16()
org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithBOM()
org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf16LE()
org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32LE()
org.apache.commons.io.comparator.PathFileComparatorTest.testCaseSensitivity()
org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_RequiredCharsets()
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadDouble()
org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateHttpEncoding($java.lang.String$java.lang.String$java.lang.String$java.lang.String$boolean$java.lang.String)
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testShiftJISFile()
org.apache.commons.io.comparator.ExtensionFileComparatorTest.setUp()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullEncoding()
org.apache.commons.io.comparator.NameFileComparatorTest.setUp()
org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem()
org.apache.commons.io.IOUtilsTestCase.testAsBufferedOutputStream()
org.apache.commons.io.output.WriterOutputStreamTest.testFlush()
org.apache.commons.io.output.StringBuilderWriterTest.testWriteCharArrayPortion()
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedShort()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D13_S0_UTF8()
org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_UTF16()
org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray()
org.apache.commons.io.IOUtilsTestCase.testAsBufferedReader()
org.apache.commons.io.comparator.SizeFileComparatorTest.testNonexistantFile()
org.apache.commons.io.input.BOMInputStreamTest.testReadTwiceWithBOM()
org.apache.commons.io.input.TailerTest.testTailerEof()
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_directory()
org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32BE()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S0_UTF8()
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testExpected()
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLine()
org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty()
org.apache.commons.io.input.compatibility.XmlStreamReader.doRawStream($java.io.InputStream)
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullData()
org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84()
org.apache.commons.io.input.ReaderInputStreamTest.testWithSingleByteRead($java.lang.String$java.lang.String)
org.apache.commons.io.filefilter.FileFilterTestCase.<clinit>()
org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMBufferedRead()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullIn()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullData()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullData()
org.apache.commons.io.input.CountingInputStreamTest.testEOF1()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUcs4()
org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithBufferedRead()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding()
org.apache.commons.io.output.StringBuilderWriterTest.testWriteStringPortion()
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedByte()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter()
org.apache.commons.io.HexDumpTest.testDump()
org.apache.commons.io.DemuxTestCase.<clinit>()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding()
org.apache.commons.io.comparator.DefaultFileComparatorTest.setUp()
org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructNull()
org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_AvailableCharset()
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testPrimitiveLong()
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadByte()
org.apache.commons.io.input.ReaderInputStreamTest.<clinit>()
org.apache.commons.io.output.ProxyWriterTest.testNullString()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullIn()
org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.closeReader()
org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testReverseComparator()
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeBufferedRead_RequiredCharsets()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullData()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream()
org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedOnSystem()
org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding()
org.apache.commons.io.output.StringBuilderWriterTest.testAppendCharSequencePortion()
org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullData()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding()
org.apache.commons.io.DemuxTestCase.getInput($java.lang.String)
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding()
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkSupported()
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadChar()
org.apache.commons.io.FilenameUtilsTestCase.testGetName()
org.apache.commons.io.CharsetsTestCase.testUtf16Le()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines($org.apache.commons.io.input.ReversedLinesFileReader)
org.apache.commons.io.input.BOMInputStreamTest.testSkipWithBOM()
org.apache.commons.io.output.CountingOutputStreamTest.assertByteArrayEquals($java.lang.String$byte[]$int$int)
org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero($java.lang.String)
org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToOutputStream()
org.apache.commons.io.input.NullReaderTest.testSkip()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding()
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf32Le()
org.apache.commons.io.input.CharSequenceInputStreamTest.testCharsetMismatchInfiniteLoop_RequiredCharsets()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUcs2()
org.apache.commons.io.CharsetsTestCase.testIso8859_1()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList()
org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find($java.io.File)
org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedError_IO_128()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D13_S1_UTF8()
org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84()
org.apache.commons.io.output.ProxyWriterTest.testNullCharSequencec()
org.apache.commons.io.DemuxTestCase.startReader($java.lang.String$java.lang.String$org.apache.commons.io.input.DemuxInputStream)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals($java.lang.Object[]$java.lang.Object[])
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortListNull()
org.apache.commons.io.monitor.FileAlterationObserverTestCase.testAddRemoveListeners()
org.apache.commons.io.testtools.FileBasedTestCase.generateTestData($long)
org.apache.commons.io.input.XmlStreamReaderTest._testRawBomValid($java.lang.String)
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_USASCII()
org.apache.commons.io.output.StringBuilderWriterTest.testWriteChar()
org.apache.commons.io.DemuxTestCase.testInputStream()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithoutBOMUtf32Be()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullIn()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding()
org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithBOM()
org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream()
org.apache.commons.io.filefilter.FileFilterTestCase.testDelegation()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullSeparator()
org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSetNullParameters()
org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter()
org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMSingleRead()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop_UTF8()
org.apache.commons.io.FilenameUtilsTestCase.testEquals()
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_USASCII()
org.apache.commons.io.input.CountingInputStreamTest.testZeroLength3()
org.apache.commons.io.output.StringBuilderWriterTest.testWriteString()
org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.IOUtilsTestCase.testAsBufferedNull()
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testObject2()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testToString()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength()
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf8()
org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead()
org.apache.commons.io.IOUtilsTestCase.testConstants()
org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateRawEncoding($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML()
org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithBOM()
org.apache.commons.io.CharsetsTestCase.testRequiredCharsets()
org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructCapacity()
org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized()
org.apache.commons.io.output.WriterOutputStreamTest.testWriteImmediately()
org.apache.commons.io.CharsetsTestCase.testUtf16Be()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateHttpEncoding($java.lang.String$java.lang.String$java.lang.String$java.lang.String$boolean$java.lang.String)
org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testComparator()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356($int$int$int$java.lang.String)
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.closeReader()
org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes()
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines()
org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion()
org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf8()
org.apache.commons.io.input.compatibility.XmlStreamReader.<clinit>()
org.apache.commons.io.input.ReaderInputStreamTest.testCharsetMismatchInfiniteLoop()
org.apache.commons.io.input.CountingInputStreamTest.testZeroLength2()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream()
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_UTF8()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterListNullParameters()
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testObject1()
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testLong()
org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullIn()
org.apache.commons.io.input.CountingInputStreamTest.testEOF2()
org.apache.commons.io.output.ProxyWriterTest.testWriteCharArrayPartial()
org.apache.commons.io.output.ProxyWriterTest.testAppendCharSequence()
org.apache.commons.io.input.CharSequenceReaderTest.testRead()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullData()
org.apache.commons.io.input.ReaderInputStreamTest.testReadZeroEmptyString()
org.apache.commons.io.output.CountingOutputStreamTest.testCounting()
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_fileName_nullFile()
org.apache.commons.io.DemuxTestCase.getOutput($java.lang.String)
org.apache.commons.io.input.BOMInputStreamTest.testSkipWithoutBOM()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding()
org.apache.commons.io.output.ProxyWriterTest.testNullCharArray()
org.apache.commons.io.output.StringBuilderWriterTest.testClose()
org.apache.commons.io.CharsetsTestCase.testToCharset()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S1_UTF8()
org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithoutBOM()
org.apache.commons.io.FilenameUtilsTestCase.testIsExtension()
org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf16BE()
org.apache.commons.io.input.CountingInputStreamTest.testZeroLength1()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream()
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadShort()
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeSingleByteRead_UTF8()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError($java.lang.String$boolean$java.lang.String$java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream()
org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream()
org.apache.commons.io.input.CountingInputStreamTest.testEOF3()
org.apache.commons.io.output.StringBuilderWriterTest.testAppendChar()
org.apache.commons.io.input.CountingInputStreamTest.testResetting()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_3arg_nullSeparator()
org.apache.commons.io.output.ProxyWriterTest.testWriteString()
org.apache.commons.io.input.CharSequenceReaderTest.testMarkSupported()
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateRawEncoding($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUnsupportedEncodingBig5()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_UTF8()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter()
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFloat()
org.apache.commons.io.IOUtilsTestCase.<clinit>()
org.apache.commons.io.IOUtilsTestCase.testAsBufferedWriter()
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_nullFile()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStreamWithBufferSize($int)
org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterable()
org.apache.commons.io.input.TailerTest.testTailer()
org.apache.commons.io.input.ReaderInputStreamTest.testLargeUTF8WithSingleByteRead()
org.apache.commons.io.input.NullInputStreamTest.testEOFException()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D20_S0_UTF8()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullData()
org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient($java.lang.String$java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.NullInputStreamTest.testMarkNotSupported()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullData()
org.apache.commons.io.input.NullInputStreamTest.testSkip()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUnsupportedEncodingUTF16()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArray()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testEmptyFile()
org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_RequiredCharset()
org.apache.commons.io.input.CharSequenceInputStreamTest.testAvailable()
org.apache.commons.io.input.ClosedInputStreamTest.testRead()
org.apache.commons.io.CopyUtilsTest.testCopy_readerToWriter()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S2_UTF8()
org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter()
org.apache.commons.io.FilenameUtilsTestCase.testGetPath()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullData()
org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp()
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream()
org.apache.commons.io.CopyUtilsTest.testCopy_stringToOutputStream()
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadInt()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_UTF8()
org.apache.commons.io.input.CountingInputStreamTest.testSkipping()
org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithoutBOM()
org.apache.commons.io.input.XmlStreamReaderTest.testRawBomUtf16()
org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomInvalid($java.lang.String)
org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp()
org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes()
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStreamWithReset()
org.apache.commons.io.CharsetsTestCase.testUsAscii()
org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithSingleByteRead()
org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithBOM()
org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithBOM()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.closeReader()
org.apache.commons.io.input.BOMInputStreamTest.testSupportCode()
org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomIso8859_1()
org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch2()
org.apache.commons.io.input.compatibility.XmlStreamReader.<init>($java.io.InputStream$boolean)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.DemuxTestCase.doJoin()
org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testFileSizeIsExactMultipleOfBlockSize()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding()
org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithoutBOM()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullData()
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch($java.lang.String$java.lang.String$boolean)
org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithoutBOM()
org.apache.commons.io.comparator.ExtensionFileComparatorTest.testCaseSensitivity()
org.apache.commons.io.input.BOMInputStreamTest.testReadTwiceWithoutBOM()
org.apache.commons.io.input.XmlStreamReaderTest.testRawContent()
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithoutBOMUtf32Le()
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testResolveProxyClass()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_RequiredCharsets()
org.apache.commons.io.filefilter.FileFilterTestCase.testNullFilters()
org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude()
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStream()
org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero_RequiredCharsets()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray()
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeSingleByteRead_RequiredCharsets()
org.apache.commons.io.input.ProxyReaderTest.testNullCharBuffer()
org.apache.commons.io.input.CharSequenceInputStreamTest.testCharsetMismatchInfiniteLoop($java.lang.String)
org.apache.commons.io.input.CountingInputStreamTest.testCounting()
org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUsAscii()
org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullSeparator()
org.apache.commons.io.input.XmlStreamReaderTest.getXML($java.lang.String$java.lang.String$java.lang.String$java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncoding()
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUTF()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullIn()
org.apache.commons.io.DemuxTestCase.startWriter($java.lang.String$java.lang.String$org.apache.commons.io.output.DemuxOutputStream)
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList_fromArray()
org.apache.commons.io.FilenameUtilsWildcardTestCase.test_IO_246()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.testDataIntegrityWithBufferedReader()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArrayNull()
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeBufferedRead_UTF8()
org.apache.commons.io.input.TailerTest.testIO335()
org.apache.commons.io.input.CharSequenceInputStreamTest.<clinit>()
