NUMBER OF NEW OR CHANGED ENTITIES : 175
NUMBER OF NEW OR CHANGED TESTS : 119
NUMBER OF ENTITY TO TEST : 294
NUMBER OF TEST TO RUN : 402
TOTAL TIME REQUIRED : 1.240030061 second
======================================================
======================================================
NEW OR CHANGED ENTITIES : 


org.apache.commons.io.IOUtils.toByteArray($java.io.Reader$java.lang.String)
org.apache.commons.io.comparator.DirectoryFileComparator.<clinit>()
org.apache.commons.io.IOUtils.write($java.lang.CharSequence$java.io.Writer)
org.apache.commons.io.input.CharSequenceInputStream.available()
org.apache.commons.io.IOUtils.readLines($java.io.Reader)
org.apache.commons.io.IOUtils.skipFully($java.nio.channels.ReadableByteChannel$long)
org.apache.commons.io.input.CharSequenceInputStream.<init>($java.lang.CharSequence$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.toString($java.net.URL)
org.apache.commons.io.IOUtils.copyLarge($java.io.Reader$java.io.Writer$long$long$char[])
org.apache.commons.io.comparator.PathFileComparator.<clinit>()
org.apache.commons.io.IOUtils.write($java.lang.StringBuffer$java.io.OutputStream)
org.apache.commons.io.IOUtils.toCharArray($java.io.Reader)
org.apache.commons.io.output.ByteArrayOutputStream.write($java.io.InputStream)
org.apache.commons.io.comparator.SizeFileComparator.SIZE_SUMDIR_COMPARATOR
org.apache.commons.io.comparator.DefaultFileComparator.DEFAULT_COMPARATOR
org.apache.commons.io.IOUtils.writeLines($java.util.Collection$java.lang.String$java.io.OutputStream)
org.apache.commons.io.input.ReversedLinesFileReader.close()
org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer($int)
org.apache.commons.io.IOUtils.contentEquals($java.io.Reader$java.io.Reader)
org.apache.commons.io.IOUtils.copyLarge($java.io.Reader$java.io.Writer)
org.apache.commons.io.IOUtils.<clinit>()
org.apache.commons.io.IOUtils.copyLarge($java.io.Reader$java.io.Writer$long$long)
org.apache.commons.io.comparator.SizeFileComparator.SIZE_REVERSE
org.apache.commons.io.comparator.NameFileComparator.NAME_REVERSE
org.apache.commons.io.IOUtils.toString($java.net.URI$java.lang.String)
org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL($java.io.Reader$java.io.Reader)
org.apache.commons.io.IOUtils.write($java.lang.StringBuffer$java.io.OutputStream$java.lang.String)
org.apache.commons.io.comparator.NameFileComparator.NAME_SYSTEM_REVERSE
org.apache.commons.io.IOUtils.write($java.lang.String$java.io.OutputStream$java.lang.String)
org.apache.commons.io.IOUtils.write($java.lang.StringBuffer$java.io.Writer)
org.apache.commons.io.input.ReversedLinesFileReader.<init>($java.io.File$java.nio.charset.Charset)
org.apache.commons.io.output.ByteArrayOutputStream.reuseBuffers
org.apache.commons.io.IOUtils.copy($java.io.InputStream$java.io.OutputStream)
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_SYSTEM_REVERSE
org.apache.commons.io.IOUtils.readLines($java.io.InputStream)
org.apache.commons.io.comparator.NameFileComparator.NAME_INSENSITIVE_REVERSE
org.apache.commons.io.IOUtils.read($java.io.Reader$char[])
org.apache.commons.io.IOUtils.read($java.nio.channels.ReadableByteChannel$java.nio.ByteBuffer)
org.apache.commons.io.input.CharSequenceInputStream.skip($long)
org.apache.commons.io.IOUtils.toByteArray($java.io.InputStream$long)
org.apache.commons.io.IOUtils.write($char[]$java.io.Writer)
org.apache.commons.io.output.ByteArrayOutputStream.write($byte[]$int$int)
org.apache.commons.io.IOUtils.toString($java.io.InputStream)
org.apache.commons.io.IOUtils.writeLines($java.util.Collection$java.lang.String$java.io.OutputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.writeLines($java.util.Collection$java.lang.String$java.io.OutputStream$java.lang.String)
org.apache.commons.io.IOUtils.contentEquals($java.io.InputStream$java.io.InputStream)
org.apache.commons.io.IOUtils.lineIterator($java.io.InputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.write($char[]$java.io.OutputStream)
org.apache.commons.io.comparator.SizeFileComparator.<clinit>()
org.apache.commons.io.IOUtils.copy($java.io.Reader$java.io.Writer)
org.apache.commons.io.comparator.NameFileComparator.NAME_INSENSITIVE_COMPARATOR
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_INSENSITIVE_REVERSE
org.apache.commons.io.IOUtils.toByteArray($java.io.InputStream$int)
org.apache.commons.io.IOUtils.toInputStream($java.lang.CharSequence$java.lang.String)
org.apache.commons.io.comparator.PathFileComparator.PATH_REVERSE
org.apache.commons.io.comparator.SizeFileComparator.SIZE_COMPARATOR
org.apache.commons.io.IOUtils.toString($byte[])
org.apache.commons.io.output.ByteArrayOutputStream.<init>($int)
org.apache.commons.io.comparator.LastModifiedFileComparator.LASTMODIFIED_REVERSE
org.apache.commons.io.IOUtils.asBufferedReader($java.io.Reader)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
org.apache.commons.io.IOUtils.lineIterator($java.io.InputStream$java.lang.String)
org.apache.commons.io.IOUtils.write($byte[]$java.io.Writer$java.lang.String)
org.apache.commons.io.IOUtils.read($java.io.InputStream$byte[]$int$int)
org.apache.commons.io.IOUtils.skip($java.nio.channels.ReadableByteChannel$long)
org.apache.commons.io.IOUtils.copyLarge($java.io.Reader$java.io.Writer$char[])
org.apache.commons.io.IOUtils.toString($java.net.URI$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.toInputStream($java.lang.String$java.lang.String)
org.apache.commons.io.IOUtils.readLines($java.io.InputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.toInputStream($java.lang.String$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.copy($java.io.InputStream$java.io.Writer$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.write($char[]$java.io.OutputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.copyLarge($java.io.InputStream$java.io.OutputStream$long$long$byte[])
org.apache.commons.io.IOUtils.read($java.io.Reader$char[]$int$int)
org.apache.commons.io.comparator.NameFileComparator.NAME_SYSTEM_COMPARATOR
org.apache.commons.io.IOUtils.toByteArray($java.net.URL)
org.apache.commons.io.output.ByteArrayOutputStream.toString($java.nio.charset.Charset)
org.apache.commons.io.IOUtils.lineIterator($java.io.Reader)
org.apache.commons.io.IOUtils.write($java.lang.String$java.io.Writer)
org.apache.commons.io.IOUtils.skip($java.io.Reader$long)
org.apache.commons.io.IOUtils.write($java.lang.CharSequence$java.io.OutputStream$java.lang.String)
org.apache.commons.io.IOUtils.copyLarge($java.io.InputStream$java.io.OutputStream)
org.apache.commons.io.IOUtils.toCharArray($java.io.InputStream$java.lang.String)
org.apache.commons.io.IOUtils.write($byte[]$java.io.Writer$java.nio.charset.Charset)
org.apache.commons.io.input.CharSequenceInputStream.<init>($java.lang.CharSequence$java.lang.String)
org.apache.commons.io.IOUtils.write($java.lang.CharSequence$java.io.OutputStream)
org.apache.commons.io.input.CharSequenceInputStream.<init>($java.lang.CharSequence$java.lang.String$int)
org.apache.commons.io.input.CharSequenceInputStream.read($byte[])
org.apache.commons.io.IOUtils.write($char[]$java.io.OutputStream$java.lang.String)
org.apache.commons.io.input.ReversedLinesFileReader.readLine()
org.apache.commons.io.monitor.FileAlterationObserver.<init>($org.apache.commons.io.monitor.FileEntry$java.io.FileFilter$org.apache.commons.io.IOCase)
org.apache.commons.io.input.CharSequenceInputStream.mark($int)
org.apache.commons.io.output.ByteArrayOutputStream.toInputStream()
org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveProxyClass($java.lang.String[])
org.apache.commons.io.IOUtils.copyLarge($java.io.InputStream$java.io.OutputStream$byte[])
org.apache.commons.io.IOUtils.copy($java.io.InputStream$java.io.Writer$java.lang.String)
org.apache.commons.io.IOUtils.skipFully($java.io.InputStream$long)
org.apache.commons.io.input.CharSequenceInputStream.fillBuffer()
org.apache.commons.io.IOUtils.write($byte[]$java.io.Writer)
org.apache.commons.io.IOUtils.copy($java.io.InputStream$java.io.OutputStream$int)
org.apache.commons.io.comparator.LastModifiedFileComparator.<clinit>()
org.apache.commons.io.IOUtils.asBufferedOutputStream($java.io.OutputStream)
org.apache.commons.io.IOUtils.write($java.lang.String$java.io.OutputStream)
org.apache.commons.io.IOUtils.readFully($java.io.Reader$char[])
org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveClass($java.io.ObjectStreamClass)
org.apache.commons.io.IOUtils.toString($java.io.Reader)
org.apache.commons.io.IOUtils.toString($java.net.URL$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.write($byte[]$java.io.OutputStream)
org.apache.commons.io.input.CharSequenceInputStream.read($byte[]$int$int)
org.apache.commons.io.IOUtils.toInputStream($java.lang.CharSequence$java.nio.charset.Charset)
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_REVERSE
org.apache.commons.io.IOUtils.toByteArray($java.io.Reader)
org.apache.commons.io.IOUtils.toString($java.io.InputStream$java.lang.String)
org.apache.commons.io.comparator.SizeFileComparator.SIZE_SUMDIR_REVERSE
org.apache.commons.io.comparator.PathFileComparator.PATH_INSENSITIVE_COMPARATOR
org.apache.commons.io.input.CharSequenceInputStream.read()
org.apache.commons.io.IOUtils.copyLarge($java.io.InputStream$java.io.OutputStream$long$long)
org.apache.commons.io.output.ByteArrayOutputStream.size()
org.apache.commons.io.IOUtils.copy($java.io.Reader$java.io.OutputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.toString($java.io.InputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.skip($java.io.InputStream$long)
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_SYSTEM_COMPARATOR
org.apache.commons.io.output.ByteArrayOutputStream.toString($java.lang.String)
org.apache.commons.io.IOUtils.readFully($java.nio.channels.ReadableByteChannel$java.nio.ByteBuffer)
org.apache.commons.io.IOUtils.readFully($java.io.Reader$char[]$int$int)
org.apache.commons.io.comparator.DefaultFileComparator.<clinit>()
org.apache.commons.io.IOUtils.skipFully($java.io.Reader$long)
org.apache.commons.io.IOUtils.toByteArray($java.io.Reader$java.nio.charset.Charset)
org.apache.commons.io.input.ReversedLinesFileReader.<init>($java.io.File)
org.apache.commons.io.IOUtils.asBufferedInputStream($java.io.InputStream)
org.apache.commons.io.IOUtils.readFully($java.io.InputStream$byte[])
org.apache.commons.io.IOUtils.toByteArray($java.io.InputStream)
org.apache.commons.io.comparator.PathFileComparator.PATH_COMPARATOR
org.apache.commons.io.output.ByteArrayOutputStream.writeTo($java.io.OutputStream)
org.apache.commons.io.comparator.DirectoryFileComparator.DIRECTORY_REVERSE
org.apache.commons.io.comparator.PathFileComparator.PATH_SYSTEM_REVERSE
org.apache.commons.io.IOUtils.toCharArray($java.io.InputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.toInputStream($java.lang.String)
org.apache.commons.io.comparator.NameFileComparator.<clinit>()
org.apache.commons.io.IOUtils.read($java.io.InputStream$byte[])
org.apache.commons.io.IOUtils.readFully($java.io.InputStream$byte[]$int$int)
org.apache.commons.io.IOUtils.readLines($java.io.InputStream$java.lang.String)
org.apache.commons.io.IOUtils.toByteArray($java.net.URI)
org.apache.commons.io.comparator.DirectoryFileComparator.DIRECTORY_COMPARATOR
org.apache.commons.io.IOUtils.asBufferedWriter($java.io.Writer)
org.apache.commons.io.IOUtils.copy($java.io.Reader$java.io.OutputStream$java.lang.String)
org.apache.commons.io.input.ReversedLinesFileReader.<init>($java.io.File$int$java.lang.String)
org.apache.commons.io.IOUtils.toString($byte[]$java.lang.String)
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_INSENSITIVE_COMPARATOR
org.apache.commons.io.IOUtils.toByteArray($java.lang.String)
org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream($java.io.InputStream)
org.apache.commons.io.IOUtils.toInputStream($java.lang.CharSequence)
org.apache.commons.io.input.CharSequenceInputStream.<init>($java.lang.CharSequence$java.nio.charset.Charset$int)
org.apache.commons.io.IOUtils.copy($java.io.InputStream$java.io.Writer)
org.apache.commons.io.comparator.ExtensionFileComparator.<clinit>()
org.apache.commons.io.IOUtils.writeLines($java.util.Collection$java.lang.String$java.io.Writer)
org.apache.commons.io.IOUtils.write($java.lang.String$java.io.OutputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.toString($java.net.URI)
org.apache.commons.io.output.ByteArrayOutputStream.write($int)
org.apache.commons.io.comparator.NameFileComparator.NAME_COMPARATOR
org.apache.commons.io.comparator.PathFileComparator.PATH_INSENSITIVE_REVERSE
org.apache.commons.io.output.ByteArrayOutputStream.reset()
org.apache.commons.io.output.ByteArrayOutputStream.<clinit>()
org.apache.commons.io.comparator.DefaultFileComparator.DEFAULT_REVERSE
org.apache.commons.io.input.ReversedLinesFileReader.<init>($java.io.File$int$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.copy($java.io.Reader$java.io.OutputStream)
org.apache.commons.io.comparator.LastModifiedFileComparator.LASTMODIFIED_COMPARATOR
org.apache.commons.io.comparator.PathFileComparator.PATH_SYSTEM_COMPARATOR
org.apache.commons.io.IOUtils.write($java.lang.CharSequence$java.io.OutputStream$java.nio.charset.Charset)
org.apache.commons.io.input.CharSequenceInputStream.reset()
org.apache.commons.io.IOUtils.toString($java.net.URL$java.lang.String)
org.apache.commons.io.IOUtils.toByteArray($java.net.URLConnection)
org.apache.commons.io.output.ByteArrayOutputStream.toString()
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_COMPARATOR
org.apache.commons.io.IOUtils.toCharArray($java.io.InputStream)
======================================================
======================================================
NEW OR CHANGED TESTS : 


org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_UTF8()
org.apache.commons.io.comparator.PathFileComparatorTest.setUp()
org.apache.commons.io.IOUtilsTestCase$6.<init>($org.apache.commons.io.IOUtilsTestCase)
org.apache.commons.io.DemuxTestCase.startReader($java.lang.String$java.lang.String$org.apache.commons.io.input.DemuxInputStream)
org.apache.commons.io.IOUtilsTestCase.<clinit>()
org.apache.commons.io.IOUtilsTestCase.testAsBufferedWriter()
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_nullFile()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortListNull()
org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterable()
org.apache.commons.io.input.TailerTest.testTailer()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray_fromList()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop($java.lang.String$int)
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset($java.lang.String)
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D20_S0_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_USASCII()
org.apache.commons.io.DemuxTestCase.testInputStream()
org.apache.commons.io.comparator.PathFileComparatorTest.testCaseSensitivity()
org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_RequiredCharsets()
org.apache.commons.io.IOUtilsTestCase$8.write($char[]$int$int)
org.apache.commons.io.comparator.ExtensionFileComparatorTest.setUp()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArrayNullParameters()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset()
org.apache.commons.io.filefilter.FileFilterTestCase.testDelegation()
org.apache.commons.io.IOUtilsTestCase$8.<init>($org.apache.commons.io.IOUtilsTestCase)
org.apache.commons.io.comparator.NameFileComparatorTest.setUp()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArray()
org.apache.commons.io.IOUtilsTestCase.testAsBufferedOutputStream()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead($java.lang.String$java.lang.String)
org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_RequiredCharset()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D13_S0_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S2_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_UTF16()
org.apache.commons.io.IOUtilsTestCase.testAsBufferedReader()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S0_UTF16()
org.apache.commons.io.comparator.SizeFileComparatorTest.testNonexistantFile()
org.apache.commons.io.IOUtilsTestCase$5.<init>($org.apache.commons.io.IOUtilsTestCase)
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSetNullParameters()
org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp()
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_directory()
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S0_UTF8()
org.apache.commons.io.comparator.DirectoryFileComparatorTest.setUp()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray()
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_USASCII()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_UTF8()
org.apache.commons.io.filefilter.FileFilterTestCase.<clinit>()
org.apache.commons.io.filefilter.FileFilterTestCase.testEnsureTestCoverage()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testToString()
org.apache.commons.io.IOUtilsTestCase.testAsBufferedNull()
org.apache.commons.io.input.TailerTest.testInterrupt()
org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp()
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStreamWithReset()
org.apache.commons.io.IOUtilsTestCase$7.read($char[]$int$int)
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop_UTF16()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip($java.lang.String)
org.apache.commons.io.DemuxTestCase.testOutputStream()
org.apache.commons.io.DemuxTestCase.<clinit>()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testComparator()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356($int$int$int$java.lang.String)
org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes()
org.apache.commons.io.comparator.DefaultFileComparatorTest.setUp()
org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_AvailableCharset()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString()
org.apache.commons.io.DemuxTestCase.doJoin()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset()
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_UTF8()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterListNullParameters()
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeBufferedRead_RequiredCharsets()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testReverseComparator()
org.apache.commons.io.IOUtilsTestCase$7.close()
org.apache.commons.io.comparator.ExtensionFileComparatorTest.testCaseSensitivity()
org.apache.commons.io.DemuxTestCase.doStart()
org.apache.commons.io.comparator.SizeFileComparatorTest.setUp()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_RequiredCharsets()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.tearDown()
org.apache.commons.io.IOUtilsTestCase.testAsBufferedInputStream()
org.apache.commons.io.filefilter.FileFilterTestCase.testNullFilters()
org.apache.commons.io.DemuxTestCase.getInput($java.lang.String)
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStream()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterValidation()
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkSupported()
org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero_RequiredCharsets()
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_fileName_nullFile()
org.apache.commons.io.DemuxTestCase.getOutput($java.lang.String)
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortList()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray()
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeSingleByteRead_RequiredCharsets()
org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero($java.lang.String)
org.apache.commons.io.input.CharSequenceInputStreamTest.testCharsetMismatchInfiniteLoop($java.lang.String)
org.apache.commons.io.input.TailerTest.createFile($java.io.File$long)
org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S1_UTF8()
org.apache.commons.io.comparator.NameFileComparatorTest.testCaseSensitivity()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet()
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_RequiredCharsets()
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeSingleByteRead_UTF8()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes()
org.apache.commons.io.DemuxTestCase.startWriter($java.lang.String$java.lang.String$org.apache.commons.io.output.DemuxOutputStream)
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_encoding_badEncoding()
org.apache.commons.io.input.CharSequenceInputStreamTest.testCharsetMismatchInfiniteLoop_RequiredCharsets()
org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero_EmptyString()
org.apache.commons.io.IOUtilsTestCase$5.read()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList_fromArray()
org.apache.commons.io.IOUtilsTestCase$8.close()
org.apache.commons.io.IOUtilsTestCase$7.<init>($org.apache.commons.io.IOUtilsTestCase)
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList()
org.apache.commons.io.IOUtilsTestCase$8.write($int)
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D13_S1_UTF8()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArrayNull()
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeBufferedRead_UTF8()
org.apache.commons.io.input.TailerTest.testIO335()
org.apache.commons.io.IOUtilsTestCase$6.write($int)
org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_UTF8()
org.apache.commons.io.input.CharSequenceInputStreamTest.<clinit>()
org.apache.commons.io.IOUtilsTestCase$8.flush()
org.apache.commons.io.input.TailerTest.testStopWithNoFile()
======================================================
======================================================
ALL ENTITY TO TEST : 


org.apache.commons.io.comparator.DirectoryFileComparator.<clinit>()
org.apache.commons.io.monitor.FileAlterationObserver.getListeners()
org.apache.commons.io.output.ByteArrayOutputStream.currentBufferIndex
org.apache.commons.io.monitor.FileAlterationObserver.rootEntry
org.apache.commons.io.IOUtils.readLines($java.io.Reader)
org.apache.commons.io.IOUtils.toString($java.net.URL)
org.apache.commons.io.IOUtils.copyLarge($java.io.Reader$java.io.Writer$long$long$char[])
org.apache.commons.io.comparator.PathFileComparator.<clinit>()
org.apache.commons.io.output.DeferredFileOutputStream.getData()
org.apache.commons.io.monitor.FileAlterationObserver.removeListener($org.apache.commons.io.monitor.FileAlterationListener)
org.apache.commons.io.input.ReversedLinesFileReader.access$500($org.apache.commons.io.input.ReversedLinesFileReader)
org.apache.commons.io.monitor.FileAlterationMonitor.run()
org.apache.commons.io.comparator.SizeFileComparator.SIZE_SUMDIR_COMPARATOR
org.apache.commons.io.input.ReversedLinesFileReader.close()
org.apache.commons.io.monitor.FilesystemObserver.<init>($java.io.File$java.io.FileFilter)
org.apache.commons.io.monitor.FileAlterationObserver.<init>($java.io.File$java.io.FileFilter)
org.apache.commons.io.IOUtils.SKIP_BYTE_BUFFER
org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer($int)
org.apache.commons.io.IOUtils.<clinit>()
org.apache.commons.io.IOUtils.copyLarge($java.io.Reader$java.io.Writer$long$long)
org.apache.commons.io.comparator.SizeFileComparator.SIZE_REVERSE
org.apache.commons.io.output.DeferredFileOutputStream.writeTo($java.io.OutputStream)
org.apache.commons.io.monitor.FilesystemObserver.<init>($java.io.File)
org.apache.commons.io.comparator.NameFileComparator.NAME_REVERSE
org.apache.commons.io.input.ReversedLinesFileReader.encoding
org.apache.commons.io.IOUtils.toString($java.net.URI$java.lang.String)
org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL($java.io.Reader$java.io.Reader)
org.apache.commons.io.input.ReversedLinesFileReader.currentFilePart
org.apache.commons.io.monitor.FilesystemObserver.<init>($java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String$java.nio.charset.Charset$boolean)
org.apache.commons.io.comparator.NameFileComparator.NAME_SYSTEM_REVERSE
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence)
org.apache.commons.io.output.ByteArrayOutputStream.reuseBuffers
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.lang.String$java.util.Collection$java.lang.String)
org.apache.commons.io.FileUtils.copyURLToFile($java.net.URL$java.io.File)
org.apache.commons.io.output.DeferredFileOutputStream.thresholdReached()
org.apache.commons.io.IOUtils.read($java.nio.channels.ReadableByteChannel$java.nio.ByteBuffer)
org.apache.commons.io.output.DeferredFileOutputStream.<init>($int$java.io.File$java.lang.String$java.lang.String$java.io.File)
org.apache.commons.io.output.ByteArrayOutputStream.write($byte[]$int$int)
org.apache.commons.io.monitor.FileAlterationObserver.addListener($org.apache.commons.io.monitor.FileAlterationListener)
org.apache.commons.io.output.ThresholdingOutputStream.write($byte[])
org.apache.commons.io.IOUtils.contentEquals($java.io.InputStream$java.io.InputStream)
org.apache.commons.io.IOUtils.copy($java.io.Reader$java.io.Writer)
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_INSENSITIVE_REVERSE
org.apache.commons.io.input.ReversedLinesFileReader.access$800($org.apache.commons.io.input.ReversedLinesFileReader)
org.apache.commons.io.comparator.PathFileComparator.PATH_REVERSE
org.apache.commons.io.comparator.SizeFileComparator.SIZE_COMPARATOR
org.apache.commons.io.FileUtils.readLines($java.io.File$java.nio.charset.Charset)
org.apache.commons.io.output.ByteArrayOutputStream.<init>($int)
org.apache.commons.io.IOUtils.LINE_SEPARATOR
org.apache.commons.io.input.CharSequenceInputStream.cbuf
org.apache.commons.io.IOUtils.asBufferedReader($java.io.Reader)
org.apache.commons.io.IOUtils.write($byte[]$java.io.Writer$java.lang.String)
org.apache.commons.io.IOUtils.skip($java.nio.channels.ReadableByteChannel$long)
org.apache.commons.io.input.ReversedLinesFileReader$FilePart.getNewLineMatchByteCount($byte[]$int)
org.apache.commons.io.IOUtils.toString($java.net.URI$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.copy($java.io.InputStream$java.io.Writer$java.nio.charset.Charset)
org.apache.commons.io.input.ReversedLinesFileReader$FilePart.access$100($org.apache.commons.io.input.ReversedLinesFileReader$FilePart)
org.apache.commons.io.monitor.FilesystemObserver.<init>($java.lang.String$java.io.FileFilter)
org.apache.commons.io.IOUtils.copyLarge($java.io.InputStream$java.io.OutputStream$long$long$byte[])
org.apache.commons.io.IOUtils.read($java.io.Reader$char[]$int$int)
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String$java.nio.charset.Charset)
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String$java.lang.String)
org.apache.commons.io.IOUtils.toByteArray($java.net.URL)
org.apache.commons.io.output.ByteArrayOutputStream.toString($java.nio.charset.Charset)
org.apache.commons.io.input.ReversedLinesFileReader.totalByteLength
org.apache.commons.io.IOUtils.write($java.lang.String$java.io.Writer)
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence$boolean)
org.apache.commons.io.input.ReversedLinesFileReader$FilePart.readLine()
org.apache.commons.io.monitor.FileAlterationObserver.toString()
org.apache.commons.io.IOUtils.write($java.lang.CharSequence$java.io.OutputStream$java.lang.String)
org.apache.commons.io.IOUtils.copyLarge($java.io.InputStream$java.io.OutputStream)
org.apache.commons.io.IOUtils.toCharArray($java.io.InputStream$java.lang.String)
org.apache.commons.io.IOUtils.write($byte[]$java.io.Writer$java.nio.charset.Charset)
org.apache.commons.io.input.CharSequenceInputStream.<init>($java.lang.CharSequence$java.lang.String)
org.apache.commons.io.IOUtils.write($java.lang.CharSequence$java.io.OutputStream)
org.apache.commons.io.input.CharSequenceInputStream.<init>($java.lang.CharSequence$java.lang.String$int)
org.apache.commons.io.input.CharSequenceInputStream.read($byte[])
org.apache.commons.io.IOUtils.write($char[]$java.io.OutputStream$java.lang.String)
org.apache.commons.io.input.ReversedLinesFileReader.access$600($org.apache.commons.io.input.ReversedLinesFileReader)
org.apache.commons.io.monitor.FilesystemObserver.<init>($org.apache.commons.io.monitor.FilesystemEntry$java.io.FileFilter$org.apache.commons.io.IOCase)
org.apache.commons.io.monitor.FilesystemObserver.<init>($java.lang.String$java.io.FileFilter$org.apache.commons.io.IOCase)
org.apache.commons.io.FileUtils.readFileToString($java.io.File$java.lang.String)
org.apache.commons.io.input.CharSequenceInputStream.mark($int)
org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveProxyClass($java.lang.String[])
org.apache.commons.io.IOUtils.copyLarge($java.io.InputStream$java.io.OutputStream$byte[])
org.apache.commons.io.IOUtils.copy($java.io.InputStream$java.io.Writer$java.lang.String)
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence$java.lang.String)
org.apache.commons.io.FileUtils.copyInputStreamToFile($java.io.InputStream$java.io.File)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.util.Collection$java.lang.String)
org.apache.commons.io.IOUtils.asBufferedOutputStream($java.io.OutputStream)
org.apache.commons.io.IOUtils.write($java.lang.String$java.io.OutputStream)
org.apache.commons.io.input.ReversedLinesFileReader.byteDecrement
org.apache.commons.io.output.ByteArrayOutputStream.buffers
org.apache.commons.io.IOUtils.toString($java.net.URL$java.nio.charset.Charset)
org.apache.commons.io.input.CharSequenceInputStream.read($byte[]$int$int)
org.apache.commons.io.monitor.FileAlterationObserver.fileFilter
org.apache.commons.io.output.ByteArrayOutputStream.filledBufferSum
org.apache.commons.io.input.ReversedLinesFileReader.newLineSequences
org.apache.commons.io.IOUtils.toByteArray($java.io.Reader)
org.apache.commons.io.IOUtils.toString($java.io.InputStream$java.lang.String)
org.apache.commons.io.comparator.SizeFileComparator.SIZE_SUMDIR_REVERSE
org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify($org.apache.commons.io.monitor.FileEntry$org.apache.commons.io.monitor.FileEntry[]$java.io.File[])
org.apache.commons.io.input.CharSequenceInputStream.read()
org.apache.commons.io.IOUtils.copyLarge($java.io.InputStream$java.io.OutputStream$long$long)
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String$boolean)
org.apache.commons.io.FileUtils.readFileToByteArray($java.io.File)
org.apache.commons.io.output.ByteArrayOutputStream.count
org.apache.commons.io.comparator.DefaultFileComparator.<clinit>()
org.apache.commons.io.IOUtils.skipFully($java.io.Reader$long)
org.apache.commons.io.FileUtils.readFileToString($java.io.File)
org.apache.commons.io.input.ReversedLinesFileReader.<init>($java.io.File)
org.apache.commons.io.monitor.FileAlterationObserver.<init>($java.lang.String$java.io.FileFilter)
org.apache.commons.io.IOUtils.readFully($java.io.InputStream$byte[])
org.apache.commons.io.IOUtils.toByteArray($java.io.InputStream)
org.apache.commons.io.comparator.DirectoryFileComparator.DIRECTORY_REVERSE
org.apache.commons.io.comparator.PathFileComparator.PATH_SYSTEM_REVERSE
org.apache.commons.io.IOUtils.toCharArray($java.io.InputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.toInputStream($java.lang.String)
org.apache.commons.io.comparator.NameFileComparator.<clinit>()
org.apache.commons.io.IOUtils.readFully($java.io.InputStream$byte[]$int$int)
org.apache.commons.io.IOUtils.toByteArray($java.net.URI)
org.apache.commons.io.monitor.FileAlterationObserver.<init>($java.io.File$java.io.FileFilter$org.apache.commons.io.IOCase)
org.apache.commons.io.comparator.DirectoryFileComparator.DIRECTORY_COMPARATOR
org.apache.commons.io.monitor.FileAlterationObserver.doDelete($org.apache.commons.io.monitor.FileEntry)
org.apache.commons.io.IOUtils.toString($byte[]$java.lang.String)
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_INSENSITIVE_COMPARATOR
org.apache.commons.io.IOUtils.toByteArray($java.lang.String)
org.apache.commons.io.monitor.FileAlterationObserver.<init>($java.lang.String)
org.apache.commons.io.IOUtils.write($java.lang.String$java.io.OutputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.toString($java.net.URI)
org.apache.commons.io.comparator.NameFileComparator.NAME_COMPARATOR
org.apache.commons.io.FileUtils.readLines($java.io.File$java.lang.String)
org.apache.commons.io.output.ByteArrayOutputStream.reset()
org.apache.commons.io.output.ByteArrayOutputStream.<clinit>()
org.apache.commons.io.input.ReversedLinesFileReader.<init>($java.io.File$int$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.copy($java.io.Reader$java.io.OutputStream)
org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify()
org.apache.commons.io.output.ByteArrayOutputStream.<init>()
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.util.Collection)
org.apache.commons.io.IOUtils.toByteArray($java.net.URLConnection)
org.apache.commons.io.output.ByteArrayOutputStream.toString()
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_COMPARATOR
org.apache.commons.io.IOUtils.toCharArray($java.io.InputStream)
org.apache.commons.io.IOUtils.toByteArray($java.io.Reader$java.lang.String)
org.apache.commons.io.IOUtils.write($java.lang.CharSequence$java.io.Writer)
org.apache.commons.io.output.DeferredFileOutputStream.<init>($int$java.io.File)
org.apache.commons.io.input.CharSequenceInputStream.available()
org.apache.commons.io.IOUtils.skipFully($java.nio.channels.ReadableByteChannel$long)
org.apache.commons.io.input.CharSequenceInputStream.<init>($java.lang.CharSequence$java.nio.charset.Charset)
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String)
org.apache.commons.io.IOUtils.write($java.lang.StringBuffer$java.io.OutputStream)
org.apache.commons.io.IOUtils.toCharArray($java.io.Reader)
org.apache.commons.io.output.ByteArrayOutputStream.write($java.io.InputStream)
org.apache.commons.io.FileUtils.lineIterator($java.io.File)
org.apache.commons.io.monitor.FileAlterationObserver.comparator
org.apache.commons.io.input.CharSequenceInputStream.encoder
org.apache.commons.io.comparator.DefaultFileComparator.DEFAULT_COMPARATOR
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence$java.nio.charset.Charset$boolean)
org.apache.commons.io.IOUtils.writeLines($java.util.Collection$java.lang.String$java.io.OutputStream)
org.apache.commons.io.IOUtils.contentEquals($java.io.Reader$java.io.Reader)
org.apache.commons.io.IOUtils.copyLarge($java.io.Reader$java.io.Writer)
org.apache.commons.io.monitor.FileAlterationObserver.listeners
org.apache.commons.io.output.ThresholdingOutputStream.write($int)
org.apache.commons.io.input.ReversedLinesFileReader.access$300($org.apache.commons.io.input.ReversedLinesFileReader)
org.apache.commons.io.monitor.FileAlterationObserver.listFiles($java.io.File)
org.apache.commons.io.IOUtils.write($java.lang.StringBuffer$java.io.OutputStream$java.lang.String)
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence$java.lang.String$boolean)
org.apache.commons.io.input.ReversedLinesFileReader.blockSize
org.apache.commons.io.FileUtils.checksum($java.io.File$java.util.zip.Checksum)
org.apache.commons.io.IOUtils.write($java.lang.String$java.io.OutputStream$java.lang.String)
org.apache.commons.io.IOUtils.write($java.lang.StringBuffer$java.io.Writer)
org.apache.commons.io.input.ReversedLinesFileReader.<init>($java.io.File$java.nio.charset.Charset)
org.apache.commons.io.monitor.FileAlterationObserver.<init>($java.io.File)
org.apache.commons.io.IOUtils.copy($java.io.InputStream$java.io.OutputStream)
org.apache.commons.io.monitor.FilesystemObserver.<init>($java.io.File$java.io.FileFilter$org.apache.commons.io.IOCase)
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_SYSTEM_REVERSE
org.apache.commons.io.IOUtils.readLines($java.io.InputStream)
org.apache.commons.io.comparator.NameFileComparator.NAME_INSENSITIVE_REVERSE
org.apache.commons.io.IOUtils.read($java.io.Reader$char[])
org.apache.commons.io.input.CharSequenceInputStream.skip($long)
org.apache.commons.io.IOUtils.toByteArray($java.io.InputStream$long)
org.apache.commons.io.IOUtils.write($char[]$java.io.Writer)
org.apache.commons.io.IOUtils.toString($java.io.InputStream)
org.apache.commons.io.IOUtils.writeLines($java.util.Collection$java.lang.String$java.io.OutputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.writeLines($java.util.Collection$java.lang.String$java.io.OutputStream$java.lang.String)
org.apache.commons.io.IOUtils.lineIterator($java.io.InputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.write($char[]$java.io.OutputStream)
org.apache.commons.io.comparator.SizeFileComparator.<clinit>()
org.apache.commons.io.comparator.NameFileComparator.NAME_INSENSITIVE_COMPARATOR
org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry($org.apache.commons.io.monitor.FileEntry$java.io.File)
org.apache.commons.io.IOUtils.toByteArray($java.io.InputStream$int)
org.apache.commons.io.IOUtils.toInputStream($java.lang.CharSequence$java.lang.String)
org.apache.commons.io.IOUtils.toString($byte[])
org.apache.commons.io.comparator.LastModifiedFileComparator.LASTMODIFIED_REVERSE
org.apache.commons.io.input.ReversedLinesFileReader.avoidNewlineSplitBufferSize
org.apache.commons.io.output.ByteArrayOutputStream.currentBuffer
org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL($java.io.File$java.io.File$java.lang.String)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
org.apache.commons.io.IOUtils.lineIterator($java.io.InputStream$java.lang.String)
org.apache.commons.io.FileUtils.readLines($java.io.File)
org.apache.commons.io.IOUtils.read($java.io.InputStream$byte[]$int$int)
org.apache.commons.io.input.ReversedLinesFileReader$FilePart.rollOver()
org.apache.commons.io.monitor.FileAlterationObserver.doCreate($org.apache.commons.io.monitor.FileEntry)
org.apache.commons.io.IOUtils.copyLarge($java.io.Reader$java.io.Writer$char[])
org.apache.commons.io.IOUtils.toInputStream($java.lang.String$java.lang.String)
org.apache.commons.io.IOUtils.readLines($java.io.InputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.toInputStream($java.lang.String$java.nio.charset.Charset)
org.apache.commons.io.monitor.FileAlterationMonitor.start()
org.apache.commons.io.IOUtils.write($char[]$java.io.OutputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.DIR_SEPARATOR
org.apache.commons.io.FileUtils.contentEquals($java.io.File$java.io.File)
org.apache.commons.io.comparator.NameFileComparator.NAME_SYSTEM_COMPARATOR
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.lang.String$java.util.Collection)
org.apache.commons.io.IOUtils.lineIterator($java.io.Reader)
org.apache.commons.io.IOUtils.skip($java.io.Reader$long)
org.apache.commons.io.input.CharSequenceInputStream.bbuf
org.apache.commons.io.input.CharSequenceInputStream.mark
org.apache.commons.io.FileUtils.lineIterator($java.io.File$java.lang.String)
org.apache.commons.io.FileUtils.copyFile($java.io.File$java.io.OutputStream)
org.apache.commons.io.input.ReversedLinesFileReader$FilePart.access$200($org.apache.commons.io.input.ReversedLinesFileReader$FilePart)
org.apache.commons.io.input.ReversedLinesFileReader.readLine()
org.apache.commons.io.monitor.FileAlterationObserver.<init>($org.apache.commons.io.monitor.FileEntry$java.io.FileFilter$org.apache.commons.io.IOCase)
org.apache.commons.io.input.ReversedLinesFileReader.trailingNewlineOfFileSkipped
org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold($int)
org.apache.commons.io.output.ByteArrayOutputStream.toInputStream()
org.apache.commons.io.FileUtils.checksumCRC32($java.io.File)
org.apache.commons.io.IOUtils.skipFully($java.io.InputStream$long)
org.apache.commons.io.input.CharSequenceInputStream.fillBuffer()
org.apache.commons.io.IOUtils.write($byte[]$java.io.Writer)
org.apache.commons.io.IOUtils.copy($java.io.InputStream$java.io.OutputStream$int)
org.apache.commons.io.comparator.LastModifiedFileComparator.<clinit>()
org.apache.commons.io.IOUtils.readFully($java.io.Reader$char[])
org.apache.commons.io.IOUtils.toString($java.io.Reader)
org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveClass($java.io.ObjectStreamClass)
org.apache.commons.io.IOUtils.write($byte[]$java.io.OutputStream)
org.apache.commons.io.input.ReversedLinesFileReader.totalBlockCount
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.util.Collection$java.lang.String$boolean)
org.apache.commons.io.monitor.FileAlterationObserver.<init>($java.lang.String$java.io.FileFilter$org.apache.commons.io.IOCase)
org.apache.commons.io.IOUtils.toInputStream($java.lang.CharSequence$java.nio.charset.Charset)
org.apache.commons.io.FileUtils.copyURLToFile($java.net.URL$java.io.File$int$int)
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_REVERSE
org.apache.commons.io.FileUtils.readFileToString($java.io.File$java.nio.charset.Charset)
org.apache.commons.io.comparator.PathFileComparator.PATH_INSENSITIVE_COMPARATOR
org.apache.commons.io.input.ReversedLinesFileReader.access$400($org.apache.commons.io.input.ReversedLinesFileReader)
org.apache.commons.io.output.ByteArrayOutputStream.size()
org.apache.commons.io.IOUtils.copy($java.io.Reader$java.io.OutputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.toString($java.io.InputStream$java.nio.charset.Charset)
org.apache.commons.io.IOUtils.skip($java.io.InputStream$long)
org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_SYSTEM_COMPARATOR
org.apache.commons.io.output.ByteArrayOutputStream.toString($java.lang.String)
org.apache.commons.io.IOUtils.readFully($java.nio.channels.ReadableByteChannel$java.nio.ByteBuffer)
org.apache.commons.io.IOUtils.readFully($java.io.Reader$char[]$int$int)
org.apache.commons.io.monitor.FileAlterationObserver.doMatch($org.apache.commons.io.monitor.FileEntry$java.io.File)
org.apache.commons.io.IOUtils.toByteArray($java.io.Reader$java.nio.charset.Charset)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.util.Collection$boolean)
org.apache.commons.io.IOUtils.asBufferedInputStream($java.io.InputStream)
org.apache.commons.io.IOUtils.toBufferedInputStream($java.io.InputStream)
org.apache.commons.io.FileUtils.writeStringToFile($java.io.File$java.lang.String$java.lang.String$boolean)
org.apache.commons.io.comparator.PathFileComparator.PATH_COMPARATOR
org.apache.commons.io.monitor.FileAlterationObserver.getDirectory()
org.apache.commons.io.monitor.FileAlterationObserver.getFileFilter()
org.apache.commons.io.output.ByteArrayOutputStream.writeTo($java.io.OutputStream)
org.apache.commons.io.IOUtils.read($java.io.InputStream$byte[])
org.apache.commons.io.IOUtils.readLines($java.io.InputStream$java.lang.String)
org.apache.commons.io.IOUtils.asBufferedWriter($java.io.Writer)
org.apache.commons.io.input.ReversedLinesFileReader.randomAccessFile
org.apache.commons.io.IOUtils.copy($java.io.Reader$java.io.OutputStream$java.lang.String)
org.apache.commons.io.input.ReversedLinesFileReader.<init>($java.io.File$int$java.lang.String)
org.apache.commons.io.input.ReversedLinesFileReader.access$700($org.apache.commons.io.input.ReversedLinesFileReader)
org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<init>($org.apache.commons.io.input.ReversedLinesFileReader$long$int$byte[]$org.apache.commons.io.input.ReversedLinesFileReader$1)
org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream($java.io.InputStream)
org.apache.commons.io.IOUtils.toInputStream($java.lang.CharSequence)
org.apache.commons.io.input.CharSequenceInputStream.<init>($java.lang.CharSequence$java.nio.charset.Charset$int)
org.apache.commons.io.IOUtils.copy($java.io.InputStream$java.io.Writer)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.lang.String$java.util.Collection$java.lang.String$boolean)
org.apache.commons.io.comparator.ExtensionFileComparator.<clinit>()
org.apache.commons.io.IOUtils.writeLines($java.util.Collection$java.lang.String$java.io.Writer)
org.apache.commons.io.monitor.FileAlterationObserver.initialize()
org.apache.commons.io.output.DeferredFileOutputStream.<init>($int$java.lang.String$java.lang.String$java.io.File)
org.apache.commons.io.output.ByteArrayOutputStream.write($int)
org.apache.commons.io.comparator.PathFileComparator.PATH_INSENSITIVE_REVERSE
org.apache.commons.io.output.ThresholdingOutputStream.write($byte[]$int$int)
org.apache.commons.io.FileUtils.writeLines($java.io.File$java.lang.String$java.util.Collection$boolean)
org.apache.commons.io.FileUtils.write($java.io.File$java.lang.CharSequence$java.nio.charset.Charset)
org.apache.commons.io.comparator.DefaultFileComparator.DEFAULT_REVERSE
org.apache.commons.io.comparator.LastModifiedFileComparator.LASTMODIFIED_COMPARATOR
org.apache.commons.io.comparator.PathFileComparator.PATH_SYSTEM_COMPARATOR
org.apache.commons.io.IOUtils.write($java.lang.CharSequence$java.io.OutputStream$java.nio.charset.Charset)
org.apache.commons.io.output.ByteArrayOutputStream.EMPTY_BYTE_ARRAY
org.apache.commons.io.input.CharSequenceInputStream.reset()
org.apache.commons.io.IOUtils.toString($java.net.URL$java.lang.String)
org.apache.commons.io.IOUtils.SKIP_CHAR_BUFFER
org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<init>($org.apache.commons.io.input.ReversedLinesFileReader$long$int$byte[])
======================================================
======================================================
ALL TESTS TO RUN : 


org.apache.commons.io.IOUtilsTestCase$6.<init>($org.apache.commons.io.IOUtilsTestCase)
org.apache.commons.io.output.CloseShieldOutputStreamTest$1.<init>($org.apache.commons.io.output.CloseShieldOutputStreamTest)
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullStream()
org.apache.commons.io.FileUtilsTestCase.testChecksumDouble()
org.apache.commons.io.LineIteratorTestCase.testOneLines()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray_fromList()
org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharSkipInvalid()
org.apache.commons.io.IOUtilsTestCase.testToString_URI()
org.apache.commons.io.FileUtilsTestCase.testCopyURLToFileWithTimeout()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop($java.lang.String$int)
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset($java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArrayNullParameters()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset()
org.apache.commons.io.IOUtilsTestCase$8.<init>($org.apache.commons.io.IOUtilsTestCase)
org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead($java.lang.String$java.lang.String)
org.apache.commons.io.monitor.FileAlterationMonitorTestCase.setUp()
org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testUnsupportedEncodingUTF16()
org.apache.commons.io.IOUtilsTestCase.testReadFully_ReadableByteChannel()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testThresholdReached()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S0_UTF16()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullOut()
org.apache.commons.io.IOUtilsTestCase$5.<init>($org.apache.commons.io.IOUtilsTestCase)
org.apache.commons.io.IOUtilsTestCase.testToByteArray_URI()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold()
org.apache.commons.io.CopyUtilsTest.testCopy_stringToWriter()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.monitor.FileAlterationObserverTestCase.setUp()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge()
org.apache.commons.io.comparator.DirectoryFileComparatorTest.setUp()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullOut()
org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String()
org.apache.commons.io.filefilter.FileFilterTestCase.testEnsureTestCoverage()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullStream()
org.apache.commons.io.input.TailerTest.testInterrupt()
org.apache.commons.io.FileUtilsTestCase.testCopyFileToOutputStream()
org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor()
org.apache.commons.io.IOUtilsTestCase$7.read($char[]$int$int)
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop_UTF16()
org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryPreserveDates()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullData()
org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullData()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip($java.lang.String)
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testIsoFileDefaults()
org.apache.commons.io.DemuxTestCase.testOutputStream()
org.apache.commons.io.LineIteratorTestCase.testThreeLines()
org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testUnsupportedEncodingBig5()
org.apache.commons.io.IOUtilsTestCase.testToString_ByteArray()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testBelowThreshold()
org.apache.commons.io.LineIteratorTestCase.testValidEncoding()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString()
org.apache.commons.io.IOUtilsTestCase.testSkip_InputStream()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding()
org.apache.commons.io.IOUtilsTestCase$7.close()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullData()
org.apache.commons.io.DemuxTestCase.doStart()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullData()
org.apache.commons.io.comparator.SizeFileComparatorTest.setUp()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.tearDown()
org.apache.commons.io.IOUtilsTestCase.testAsBufferedInputStream()
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.IOUtilsTestCase.testCopy_ByteArray_Writer()
org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence1()
org.apache.commons.io.IOUtilsTestCase.testToString_URI_CharsetName()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterValidation()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortList()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullEncoding()
org.apache.commons.io.monitor.AbstractMonitorTestCase.createObserver($java.io.File$java.io.FileFilter)
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullStream()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullData()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullWriter()
org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory($java.io.File$java.io.File$java.io.File)
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.input.TailerTest.createFile($java.io.File$long)
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkStreams($org.apache.commons.io.output.ByteArrayOutputStream$java.io.ByteArrayOutputStream)
org.apache.commons.io.comparator.NameFileComparatorTest.testCaseSensitivity()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet()
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_RequiredCharsets()
org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriter()
org.apache.commons.io.input.BoundedInputStreamTest.testReadArray()
org.apache.commons.io.FileUtilsTestCase.testChecksum()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullIn()
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_encoding_badEncoding()
org.apache.commons.io.FileUtilsTestCase.testChecksumOnDirectory()
org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero_EmptyString()
org.apache.commons.io.IOUtilsTestCase.testCopy_ByteArray_OutputStream()
org.apache.commons.io.LineIteratorTestCase.testInvalidEncoding()
org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharNoSkip()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator()
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData($org.apache.commons.io.output.ByteArrayOutputStream$java.io.ByteArrayOutputStream$int[])
org.apache.commons.io.LineIteratorTestCase.testMissingFile()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild()
org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_UTF8()
org.apache.commons.io.input.TailerTest.testStopWithNoFile()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStreamWithBufferSize()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testFileSizeIsExactMultipleOfBlockSize()
org.apache.commons.io.comparator.PathFileComparatorTest.setUp()
org.apache.commons.io.IOUtilsTestCase.testCopyLarge_FullLength()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly()
org.apache.commons.io.comparator.PathFileComparatorTest.testCaseSensitivity()
org.apache.commons.io.IOUtilsTestCase.testCopyLarge_NoSkip()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_RequiredCharsets()
org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir()
org.apache.commons.io.IOUtilsTestCase$8.write($char[]$int$int)
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testShiftJISFile()
org.apache.commons.io.comparator.ExtensionFileComparatorTest.setUp()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullOut()
org.apache.commons.io.IOUtilsTestCase.testSkip_ReadableByteChannel()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullEncoding()
org.apache.commons.io.comparator.NameFileComparatorTest.setUp()
org.apache.commons.io.IOUtilsTestCase.testAsBufferedOutputStream()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8File()
org.apache.commons.io.LineIteratorTestCase.testNextOnly()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D13_S0_UTF8()
org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullStream()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_UTF16()
org.apache.commons.io.IOUtilsTestCase.testAsBufferedReader()
org.apache.commons.io.comparator.SizeFileComparatorTest.testNonexistantFile()
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest()
org.apache.commons.io.IOUtilsTestCase.testToByteArray_URLConnection()
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_directory()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S0_UTF8()
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData($org.apache.commons.io.output.ByteArrayOutputStream$java.io.ByteArrayOutputStream$int)
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileWindowsBreaks()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullData()
org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84()
org.apache.commons.io.filefilter.FileFilterTestCase.<clinit>()
org.apache.commons.io.IOUtilsTestCase.testContentEquals_InputStream_InputStream()
org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.LineIteratorTestCase.testFilteringFileReader()
org.apache.commons.io.IOUtilsTestCase.testToString_URL()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullIn()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullData()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullStream()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullData()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter()
org.apache.commons.io.HexDumpTest.testDump()
org.apache.commons.io.DemuxTestCase.<clinit>()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF16BEFile()
org.apache.commons.io.output.ProxyOutputStreamTest.testWrite()
org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding()
org.apache.commons.io.comparator.DefaultFileComparatorTest.setUp()
org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_AvailableCharset()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullIn()
org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.closeReader()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToChild()
org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter()
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeBufferedRead_RequiredCharsets()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testReverseComparator()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullData()
org.apache.commons.io.IOUtilsTestCase.testCopyLarge_Skip()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding()
org.apache.commons.io.IOUtilsTestCase.testReadLines_Reader()
org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullData()
org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding()
org.apache.commons.io.DemuxTestCase.getInput($java.lang.String)
org.apache.commons.io.LineIteratorTestCase.createLinesFile($java.io.File$int)
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding()
org.apache.commons.io.IOUtilsTestCase.testRead_ReadableByteChannel()
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkSupported()
org.apache.commons.io.IOUtilsTestCase.testToCharArray_InputStream()
org.apache.commons.io.output.ProxyOutputStreamTest.setUp()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_IO84()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines($org.apache.commons.io.input.ReversedLinesFileReader)
org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero($java.lang.String)
org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToOutputStream()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullStream()
org.apache.commons.io.output.CloseShieldOutputStreamTest.setUp()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding()
org.apache.commons.io.FileUtilsTestCase.testContentEquals()
org.apache.commons.io.IOUtilsTestCase.testToBufferedInputStream_InputStream()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes()
org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharSkip()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullOut()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.IOUtilsTestCase.testCopy_String_Writer()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullWriter()
org.apache.commons.io.input.CharSequenceInputStreamTest.testCharsetMismatchInfiniteLoop_RequiredCharsets()
org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile()
org.apache.commons.io.IOUtilsTestCase$8.close()
org.apache.commons.io.LineIteratorTestCase.createLinesFile($java.io.File$java.lang.String$int)
org.apache.commons.io.IOUtilsTestCase$7.<init>($org.apache.commons.io.IOUtilsTestCase)
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList()
org.apache.commons.io.FileUtilsTestCase.testFileUtils()
org.apache.commons.io.IOUtilsTestCase$8.write($int)
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D13_S1_UTF8()
org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84()
org.apache.commons.io.IOUtilsTestCase.testToByteArray_URL()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF16LEFile()
org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold()
org.apache.commons.io.DemuxTestCase.startReader($java.lang.String$java.lang.String$org.apache.commons.io.input.DemuxInputStream)
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortListNull()
org.apache.commons.io.monitor.FileAlterationObserverTestCase.testAddRemoveListeners()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileCRBreaks()
org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_Size()
org.apache.commons.io.testtools.FileBasedTestCase.generateTestData($long)
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_USASCII()
org.apache.commons.io.DemuxTestCase.testInputStream()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullIn()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullStream()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding()
org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream()
org.apache.commons.io.filefilter.FileFilterTestCase.testDelegation()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullSeparator()
org.apache.commons.io.IOUtilsTestCase.testReadFully_InputStream_ByteArray()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile1()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream()
org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_SizeIllegal()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory()
org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithDefaultEncoding()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSetNullParameters()
org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullStream()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop_UTF8()
org.apache.commons.io.IOUtilsTestCase.testSkip_FileReader()
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_USASCII()
org.apache.commons.io.IOUtilsTestCase.testToString_Reader()
org.apache.commons.io.IOUtilsTestCase.testToByteArray_String()
org.apache.commons.io.IOUtilsTestCase.testAsBufferedNull()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testToString()
org.apache.commons.io.IOUtilsTestCase.testReadFully_InputStream_Offset()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.IOUtilsTestCase.testConstants()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile2()
org.apache.commons.io.LineIteratorTestCase.testZeroLines()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testComparator()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356($int$int$int$java.lang.String)
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.closeReader()
org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_IO84()
org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_NegativeSize()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullStream()
org.apache.commons.io.IOUtilsTestCase.testToString_URL($java.lang.String)
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines()
org.apache.commons.io.LineIteratorTestCase.testCloseEarly()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest()
org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyDefaultEncoding()
org.apache.commons.io.IOUtilsTestCase.testSkipFully_InputStream()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream()
org.apache.commons.io.IOUtilsTestCase.testReadFully_Reader()
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_UTF8()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterListNullParameters()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharFullLength()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullIn()
org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines($int)
org.apache.commons.io.IOUtilsTestCase.testToString_URI_CharsetNameNull()
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile3()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullData()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullOut()
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_fileName_nullFile()
org.apache.commons.io.DemuxTestCase.getOutput($java.lang.String)
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S1_UTF8()
org.apache.commons.io.IOUtilsTestCase.testSkipFully_ReadableByteChannel()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileError()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream()
org.apache.commons.io.IOUtilsTestCase.testToString_URI($java.lang.String)
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeSingleByteRead_UTF8()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream()
org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream()
org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileCreate()
org.apache.commons.io.IOUtilsTestCase.testToString_URL_CharsetNameNull()
org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream()
org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_3arg_nullSeparator()
org.apache.commons.io.IOUtilsTestCase.testToInputStream_CharSequence()
org.apache.commons.io.IOUtilsTestCase.testToByteArray_Reader()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUnsupportedEncodingBig5()
org.apache.commons.io.IOUtilsTestCase$8.flush()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_UTF8()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter()
org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_SizeLong()
org.apache.commons.io.IOUtilsTestCase.<clinit>()
org.apache.commons.io.monitor.FilesystemObserverTestCase.setUp()
org.apache.commons.io.IOUtilsTestCase.testCopyLarge_ExtraLength()
org.apache.commons.io.IOUtilsTestCase.testAsBufferedWriter()
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_nullFile()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStreamWithBufferSize($int)
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullStream()
org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterable()
org.apache.commons.io.input.TailerTest.testTailer()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D20_S0_UTF8()
org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall()
org.apache.commons.io.IOUtilsTestCase.testToCharArray_InputStream_CharsetName()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullData()
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullData()
org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullChecksum()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUnsupportedEncodingUTF16()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArray()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testEmptyFile()
org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_RequiredCharset()
org.apache.commons.io.IOUtilsTestCase.testContentEqualsIgnoreEOL()
org.apache.commons.io.monitor.FileSystemMonitorTestCase.setUp()
org.apache.commons.io.CopyUtilsTest.testCopy_readerToWriter()
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_Writer_nullData()
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S2_UTF8()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullData()
org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp()
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream()
org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyUtf8Encoding()
org.apache.commons.io.CopyUtilsTest.testCopy_stringToOutputStream()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullStream()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_UTF8()
org.apache.commons.io.LineIteratorTestCase.testTwoLines()
org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL()
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullStream()
org.apache.commons.io.output.CloseShieldOutputStreamTest.testClose()
org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp()
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStreamWithReset()
org.apache.commons.io.FileUtilsTestCase.testReadLines()
org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence2()
org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead($java.lang.String$java.lang.String)
org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_SizeZero()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.closeReader()
org.apache.commons.io.IOUtilsTestCase.testSkipFully_Reader()
org.apache.commons.io.IOUtilsTestCase.testToString_InputStream()
org.apache.commons.io.IOUtilsTestCase.testContentEquals_Reader_Reader()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullStream()
org.apache.commons.io.DemuxTestCase.doJoin()
org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testFileSizeIsExactMultipleOfBlockSize()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp()
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullData()
org.apache.commons.io.comparator.ExtensionFileComparatorTest.testCaseSensitivity()
org.apache.commons.io.input.XmlStreamReaderTest.testRawContent()
org.apache.commons.io.IOUtilsTestCase.testToString_URL_CharsetName()
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_RequiredCharsets()
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testResolveProxyClass()
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest()
org.apache.commons.io.IOUtilsTestCase.testReadFully_Reader_Offset()
org.apache.commons.io.filefilter.FileFilterTestCase.testNullFilters()
org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp()
org.apache.commons.io.IOUtilsTestCase.testToCharArray_Reader()
org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharExtraLength()
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStream()
org.apache.commons.io.LineIteratorTestCase.testFilteringBufferedReader()
org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero_RequiredCharsets()
org.apache.commons.io.IOUtilsTestCase.testCopyLarge_SkipInvalid()
org.apache.commons.io.IOUtilsTestCase.testToInputStream_String()
org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileDelete()
org.apache.commons.io.output.ProxyOutputStreamTest$1.<init>($org.apache.commons.io.output.ProxyOutputStreamTest)
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray()
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeSingleByteRead_RequiredCharsets()
org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullFile()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullOut()
org.apache.commons.io.input.CharSequenceInputStreamTest.testCharsetMismatchInfiniteLoop($java.lang.String)
org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor()
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullSeparator()
org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyNullEncoding()
org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream()
org.apache.commons.io.FileUtilsTestCase.testChecksumCRC32()
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullIn()
org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithEncoding()
org.apache.commons.io.DemuxTestCase.startWriter($java.lang.String$java.lang.String$org.apache.commons.io.output.DemuxOutputStream)
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
org.apache.commons.io.IOUtilsTestCase$5.read()
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList_fromArray()
org.apache.commons.io.FileUtilsTestCase.testReadFileToByteArray()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.testDataIntegrityWithBufferedReader()
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArrayNull()
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeBufferedRead_UTF8()
org.apache.commons.io.input.TailerTest.testIO335()
org.apache.commons.io.IOUtilsTestCase$6.write($int)
org.apache.commons.io.input.CharSequenceInputStreamTest.<clinit>()
