NUMBER OF NEW OR CHANGED ENTITIES : 30
NUMBER OF NEW OR CHANGED TESTS : 6
NUMBER OF ENTITY TO TEST : 30
NUMBER OF TEST TO RUN : 6
TOTAL TIME REQUIRED : 0.631736768 second
======================================================
======================================================
NEW OR CHANGED ENTITIES : 


org.apache.commons.io.FileSystem.getSystemProperty($java.lang.String)
org.apache.commons.io.FileSystem.isOsNameMatch($java.lang.String$java.lang.String)
org.apache.commons.io.FileSystem.IS_OS_WINDOWS
org.apache.commons.io.FileSystem.getCurrent()
org.apache.commons.io.FileSystem.OS_NAME_WINDOWS_PREFIX
org.apache.commons.io.FileSystem.IS_OS_MAC
org.apache.commons.io.FileSystem.isLegalFileName($java.lang.CharSequence)
org.apache.commons.io.FileSystem.WINDOWS
org.apache.commons.io.FileSystem.maxPathLength
org.apache.commons.io.FileSystem.<init>($java.lang.String$int$int$int$char[]$java.lang.String[])
org.apache.commons.io.FileSystem.getReservedFileNames()
org.apache.commons.io.FileSystem.$VALUES
org.apache.commons.io.FileSystem.IS_OS_LINUX
org.apache.commons.io.FileSystem.illegalFileNameChars
org.apache.commons.io.FileSystem.<clinit>()
org.apache.commons.io.FileSystem.reservedFileNames
org.apache.commons.io.FileSystem.maxFileNameLength
org.apache.commons.io.FileSystem.MAC_OSX
org.apache.commons.io.FileSystem.getIllegalFileNameChars()
org.apache.commons.io.FileSystem.LINUX
org.apache.commons.io.FileSystem.getOsMatchesName($java.lang.String)
org.apache.commons.io.FileSystem.valueOf($java.lang.String)
org.apache.commons.io.FileSystem.values()
org.apache.commons.io.FileSystem.GENERIC
org.apache.commons.io.FileSystem.getMaxFileNameLength()
org.apache.commons.io.FileSystem.getMaxPathLength()
org.apache.commons.io.FileSystem.OS_NAME
org.apache.commons.io.FileSystem.isReservedFileName($java.lang.CharSequence)
org.apache.commons.io.FileSystem.toLegalFileName($java.lang.String$char)
org.apache.commons.io.FileSystem.isIllegalFileNameChar($char)
======================================================
======================================================
NEW OR CHANGED TESTS : 


org.apache.commons.io.FileSystemTestCase.<init>()
org.apache.commons.io.FileSystemTestCase.testIsReservedFileName()
org.apache.commons.io.FileSystemTestCase.testSorted()
org.apache.commons.io.FileSystemTestCase.testIsLegalName()
org.apache.commons.io.FileSystemTestCase.testToLegalFileNameWindows()
org.apache.commons.io.FileSystemTestCase.testReplacementWithNUL()
======================================================
======================================================
ALL ENTITY TO TEST : 


org.apache.commons.io.FileSystem.getSystemProperty($java.lang.String)
org.apache.commons.io.FileSystem.isOsNameMatch($java.lang.String$java.lang.String)
org.apache.commons.io.FileSystem.IS_OS_WINDOWS
org.apache.commons.io.FileSystem.getCurrent()
org.apache.commons.io.FileSystem.OS_NAME_WINDOWS_PREFIX
org.apache.commons.io.FileSystem.IS_OS_MAC
org.apache.commons.io.FileSystem.isLegalFileName($java.lang.CharSequence)
org.apache.commons.io.FileSystem.WINDOWS
org.apache.commons.io.FileSystem.maxPathLength
org.apache.commons.io.FileSystem.<init>($java.lang.String$int$int$int$char[]$java.lang.String[])
org.apache.commons.io.FileSystem.getReservedFileNames()
org.apache.commons.io.FileSystem.$VALUES
org.apache.commons.io.FileSystem.IS_OS_LINUX
org.apache.commons.io.FileSystem.illegalFileNameChars
org.apache.commons.io.FileSystem.<clinit>()
org.apache.commons.io.FileSystem.reservedFileNames
org.apache.commons.io.FileSystem.maxFileNameLength
org.apache.commons.io.FileSystem.MAC_OSX
org.apache.commons.io.FileSystem.getIllegalFileNameChars()
org.apache.commons.io.FileSystem.LINUX
org.apache.commons.io.FileSystem.getOsMatchesName($java.lang.String)
org.apache.commons.io.FileSystem.valueOf($java.lang.String)
org.apache.commons.io.FileSystem.values()
org.apache.commons.io.FileSystem.GENERIC
org.apache.commons.io.FileSystem.getMaxFileNameLength()
org.apache.commons.io.FileSystem.getMaxPathLength()
org.apache.commons.io.FileSystem.OS_NAME
org.apache.commons.io.FileSystem.isReservedFileName($java.lang.CharSequence)
org.apache.commons.io.FileSystem.toLegalFileName($java.lang.String$char)
org.apache.commons.io.FileSystem.isIllegalFileNameChar($char)
======================================================
======================================================
ALL TESTS TO RUN : 


org.apache.commons.io.FileSystemTestCase.<init>()
org.apache.commons.io.FileSystemTestCase.testIsReservedFileName()
org.apache.commons.io.FileSystemTestCase.testSorted()
org.apache.commons.io.FileSystemTestCase.testIsLegalName()
org.apache.commons.io.FileSystemTestCase.testToLegalFileNameWindows()
org.apache.commons.io.FileSystemTestCase.testReplacementWithNUL()
