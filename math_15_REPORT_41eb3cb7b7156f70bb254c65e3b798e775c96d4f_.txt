NUMBER OF NEW OR CHANGED ENTITIES : 483
NUMBER OF ENTITY TO TEST : 876
NUMBER OF TEST TO RUN : 895
TOTAL TIME REQUIRED : 3.846905442 second
======================================================
======================================================
NEW OR CHANGED ENTITIES : 


org.apache.commons.math.complex.Complex.sinh()
org.apache.commons.math.estimation.EstimationException.<init>($java.lang.String$java.lang.Object[])
org.apache.commons.math.util.MathUtils.equals($double$double)
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.apply($org.apache.commons.math.stat.descriptive.UnivariateStatistic)
org.apache.commons.math.stat.descriptive.SummaryStatistics.secondMoment
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getVariance()
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMDirection($double[]$double[]$double[]$double[])
org.apache.commons.math.ode.SwitchState.<init>($org.apache.commons.math.ode.SwitchingFunction$double$double$int)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setSumsqImpl($org.apache.commons.math.stat.descriptive.UnivariateStatistic)
org.apache.commons.math.ode.SwitchingFunctionsHandler.add($org.apache.commons.math.ode.SwitchingFunction$double$double$int)
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.<init>($boolean$double[]$double[][]$double[]$org.apache.commons.math.ode.RungeKuttaStepInterpolator$double$double$double[]$double[])
org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate($org.apache.commons.math.ode.FirstOrderDifferentialEquations$double$double[]$double$double[])
org.apache.commons.math.ode.RungeKuttaIntegrator.getStepHandler()
org.apache.commons.math.estimation.Estimator.guessParametersErrors($org.apache.commons.math.estimation.EstimationProblem)
org.apache.commons.math.complex.Complex.sqrt1z()
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMParameter($double[]$double$double[]$double[]$double[]$double[])
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getPercentileImpl()
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.clear()
org.apache.commons.math.ode.ThreeEighthesStepInterpolator.doCopy()
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.getName()
org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_11
org.apache.commons.math.ode.DormandPrince853Integrator.<clinit>()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.sumsqImpl
org.apache.commons.math.estimation.AbstractEstimator.jacobian
org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_12
org.apache.commons.math.stat.descriptive.SummaryStatistics.setGeoMeanImpl($org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_10
org.apache.commons.math.estimation.AbstractEstimator.getJacobianEvaluations()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getStandardDeviation()
org.apache.commons.math.ode.DummyStepInterpolator.computeInterpolatedState($double$double)
org.apache.commons.math.MathException.<init>($java.lang.String$java.lang.Object[])
org.apache.commons.math.stat.descriptive.SummaryStatistics.hashCode()
org.apache.commons.math.ode.GillStepInterpolator.doCopy()
org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest($double[]$long[]$double)
org.apache.commons.math.MathException.<clinit>()
org.apache.commons.math.stat.inference.OneWayAnovaImpl$AnovaStats.dfwg
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setPercentileImpl($org.apache.commons.math.stat.descriptive.UnivariateStatistic)
org.apache.commons.math.stat.descriptive.SummaryStatistics.minImpl
org.apache.commons.math.ode.AbstractStepInterpolator.storeTime($double)
org.apache.commons.math.util.MathUtils.subAndCheck($long$long)
org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.clear()
org.apache.commons.math.estimation.AbstractEstimator.jacobianEvaluations
org.apache.commons.math.complex.Complex.divide($org.apache.commons.math.complex.Complex)
org.apache.commons.math.complex.Complex.exp()
org.apache.commons.math.complex.ComplexUtils.sin($org.apache.commons.math.complex.Complex)
org.apache.commons.math.ode.SwitchingFunctionsHandler.stepAccepted($double$double[])
org.apache.commons.math.ode.SwitchState.maxIterationCount
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.equals($java.lang.Object)
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getStandardDeviation()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue($double)
org.apache.commons.math.stat.descriptive.SummaryStatistics.getMinImpl()
org.apache.commons.math.ode.SwitchState.getEventTime()
org.apache.commons.math.ode.DormandPrince853StepInterpolator.<init>()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply($org.apache.commons.math.stat.descriptive.UnivariateStatistic)
org.apache.commons.math.util.MathUtils.round($double$int)
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.getValues()
org.apache.commons.math.random.EmpiricalDistributionImpl$ArrayDataAdapter.computeStats()
org.apache.commons.math.estimation.AbstractEstimator.parameters
org.apache.commons.math.ode.DormandPrince853StepInterpolator.storeTime($double)
org.apache.commons.math.optimization.DirectSearchOptimizer$1.compare($java.lang.Object$java.lang.Object)
org.apache.commons.math.ode.AbstractStepInterpolator.copy()
org.apache.commons.math.ode.DormandPrince853StepInterpolator.d
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.<init>()
org.apache.commons.math.complex.Complex.tan()
org.apache.commons.math.stat.inference.OneWayAnova.anovaTest($java.util.Collection$double)
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getGeometricMean()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean()
org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.sanityChecks($org.apache.commons.math.ode.FirstOrderDifferentialEquations$double$double[]$double$double[])
org.apache.commons.math.stat.descriptive.SummaryStatistics.setSumsqImpl($org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic)
org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.filterStep($double$boolean)
org.apache.commons.math.complex.Complex.<clinit>()
org.apache.commons.math.stat.descriptive.SummaryStatistics.setSumLogImpl($org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic)
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.toString()
org.apache.commons.math.stat.inference.OneWayAnovaImpl$AnovaStats.F
org.apache.commons.math.util.MathUtils.factorialDouble($int)
org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.addSwitchingFunction($org.apache.commons.math.ode.SwitchingFunction$double$double$int)
org.apache.commons.math.estimation.AbstractEstimator.getCovariances($org.apache.commons.math.estimation.EstimationProblem)
org.apache.commons.math.stat.descriptive.SummaryStatistics.toString()
org.apache.commons.math.estimation.AbstractEstimator.costEvaluations
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSumsqImpl()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setMinImpl($org.apache.commons.math.stat.descriptive.UnivariateStatistic)
org.apache.commons.math.complex.ComplexUtils.cos($org.apache.commons.math.complex.Complex)
org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue($double)
org.apache.commons.math.util.MathUtils.subAndCheck($int$int)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.<init>($org.apache.commons.math.ode.DormandPrince853StepInterpolator)
org.apache.commons.math.util.MathUtils.sign($float)
org.apache.commons.math.complex.Complex.atan()
org.apache.commons.math.util.MathUtils.factorial($int)
org.apache.commons.math.stat.inference.ChiSquareTestImpl.getDistributionFactory()
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.getMinReduction()
org.apache.commons.math.ode.MidpointIntegrator.<init>($double)
org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest($long[][]$double)
org.apache.commons.math.analysis.LaguerreSolver.solve($org.apache.commons.math.complex.Complex[]$org.apache.commons.math.complex.Complex)
org.apache.commons.math.complex.ComplexUtils.sinh($org.apache.commons.math.complex.Complex)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance($java.lang.Class)
org.apache.commons.math.util.MathUtils.log($double$double)
org.apache.commons.math.estimation.AbstractEstimator.cols
org.apache.commons.math.ode.HighamHall54Integrator.<clinit>()
org.apache.commons.math.complex.ComplexUtils.sqrt1z($org.apache.commons.math.complex.Complex)
org.apache.commons.math.util.MathUtils.indicator($double)
org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTestDataSetsComparison($long[]$long[])
org.apache.commons.math.estimation.AbstractEstimator.updateResidualsAndCost()
org.apache.commons.math.stat.descriptive.SummaryStatistics.mean
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getN()
org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare($double[]$long[])
org.apache.commons.math.ode.IntegratorException.<init>($java.lang.String$java.lang.Object[])
org.apache.commons.math.estimation.AbstractEstimator.getCostEvaluations()
org.apache.commons.math.ode.SwitchingFunctionsHandler.getEventTime()
org.apache.commons.math.ode.StepInterpolator.copy()
org.apache.commons.math.ode.RungeKuttaIntegrator.addSwitchingFunction($org.apache.commons.math.ode.SwitchingFunction$double$double$int)
org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareDataSetsComparison($long[]$long[])
org.apache.commons.math.ode.ThreeEighthesIntegrator.<init>($double)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMinImpl()
org.apache.commons.math.complex.ComplexUtils.asin($org.apache.commons.math.complex.Complex)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.windowSize
org.apache.commons.math.util.MathUtils.sign($long)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSum()
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.<init>()
org.apache.commons.math.optimization.PointCostPair.getPoint()
org.apache.commons.math.ode.ContinuousOutputModel.handleStep($org.apache.commons.math.ode.StepInterpolator$boolean)
org.apache.commons.math.optimization.PointCostPair.point
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.<init>()
org.apache.commons.math.stat.descriptive.moment.Mean.evaluate($double[]$int$int)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_14
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.getOrder()
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_13
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setParRelativeTolerance($double)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_15
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_10
org.apache.commons.math.ode.DormandPrince853Integrator.staticC
org.apache.commons.math.ode.DormandPrince853Integrator.staticB
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_12
org.apache.commons.math.ode.DormandPrince853Integrator.staticA
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_11
org.apache.commons.math.ode.AbstractStepInterpolator.setInterpolatedTime($double)
org.apache.commons.math.stat.descriptive.SummaryStatistics.clear()
org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumsqImpl()
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.exp
org.apache.commons.math.estimation.Estimator.getCovariances($org.apache.commons.math.estimation.EstimationProblem)
org.apache.commons.math.complex.ComplexUtils.pow($org.apache.commons.math.complex.Complex$org.apache.commons.math.complex.Complex)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_07
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_06
org.apache.commons.math.ode.DormandPrince853StepInterpolator.computeInterpolatedState($double$double)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_09
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_08
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate($org.apache.commons.math.estimation.EstimationProblem)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.percentileImpl
org.apache.commons.math.ode.FirstOrderIntegrator.getCurrentSignedStepsize()
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_01
org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTestDataSetsComparison($long[]$long[]$double)
org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance($java.lang.Class)
org.apache.commons.math.ode.DummyStepInterpolator.doCopy()
org.apache.commons.math.stat.Frequency$NaturalComparator.this$0
org.apache.commons.math.ode.HighamHall54Integrator.staticA
org.apache.commons.math.ode.HighamHall54Integrator.staticB
org.apache.commons.math.ode.HighamHall54Integrator.staticC
org.apache.commons.math.ode.RungeKuttaIntegrator.getCurrentSignedStepsize()
org.apache.commons.math.ode.AbstractStepInterpolator.finalizeStep()
org.apache.commons.math.ode.HighamHall54Integrator.staticE
org.apache.commons.math.ode.HighamHall54Integrator.<init>($double$double$double[]$double[])
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.<init>($int)
org.apache.commons.math.ode.RungeKuttaIntegrator.setStepHandler($org.apache.commons.math.ode.StepHandler)
org.apache.commons.math.util.MathUtils.indicator($long)
org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaFValue($java.util.Collection)
org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumLogImpl()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSkewness()
org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.serialVersionUID
org.apache.commons.math.ode.GillIntegrator.<clinit>()
org.apache.commons.math.stat.descriptive.SummaryStatistics.getMax()
org.apache.commons.math.util.MathUtils.addAndCheck($long$long)
org.apache.commons.math.stat.descriptive.SummaryStatistics.getSummary()
org.apache.commons.math.stat.Frequency$NaturalComparator.<init>($org.apache.commons.math.stat.Frequency)
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.integrate($org.apache.commons.math.ode.FirstOrderDifferentialEquations$double$double[]$double$double[])
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSumImpl()
org.apache.commons.math.complex.ComplexUtils.sqrt($org.apache.commons.math.complex.Complex)
org.apache.commons.math.stat.descriptive.SummaryStatistics.getVarianceImpl()
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setOrthoTolerance($double)
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.getMaxGrowth()
org.apache.commons.math.ode.DormandPrince54StepInterpolator.doCopy()
org.apache.commons.math.stat.descriptive.SummaryStatistics.getGeometricMean()
org.apache.commons.math.ode.SwitchState.stepAccepted($double$double[])
org.apache.commons.math.ode.DormandPrince853StepInterpolator.reinitialize($org.apache.commons.math.ode.FirstOrderDifferentialEquations$double[]$double[][]$boolean)
org.apache.commons.math.ode.DormandPrince54Integrator.<init>($double$double$double$double)
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.prototype
org.apache.commons.math.stat.descriptive.SummaryStatistics.max
org.apache.commons.math.stat.descriptive.SummaryStatistics.getN()
org.apache.commons.math.estimation.AbstractEstimator.residuals
org.apache.commons.math.ode.HighamHall54Integrator.estimateError($double[][]$double[]$double[]$double)
org.apache.commons.math.complex.Complex.INF
org.apache.commons.math.complex.ComplexUtils.exp($org.apache.commons.math.complex.Complex)
org.apache.commons.math.optimization.DirectSearchOptimizer.replaceWorstPoint($org.apache.commons.math.optimization.PointCostPair)
org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMean
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.getStandardDeviation()
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.safety
org.apache.commons.math.random.EmpiricalDistributionImpl.getNextValue()
org.apache.commons.math.util.MathUtils.cosh($double)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setWindowSize($int)
org.apache.commons.math.ode.EulerIntegrator.<init>($double)
org.apache.commons.math.estimation.GaussNewtonEstimator.estimate($org.apache.commons.math.estimation.EstimationProblem)
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.estimateError($double[][]$double[]$double[]$double)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.meanImpl
org.apache.commons.math.optimization.MultiDirectional.evaluateNewSimplex($org.apache.commons.math.optimization.PointCostPair[]$double)
org.apache.commons.math.MathException.getArguments()
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.addValue($double)
org.apache.commons.math.util.MathUtils.round($float$int$int)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSumsq()
org.apache.commons.math.ode.SwitchState.evaluateStep($org.apache.commons.math.ode.StepInterpolator)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMax()
org.apache.commons.math.stat.descriptive.SummaryStatistics.getMaxImpl()
org.apache.commons.math.complex.Complex.conjugate()
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getSum()
org.apache.commons.math.stat.descriptive.SummaryStatistics.variance
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.toString()
org.apache.commons.math.ode.DormandPrince853Integrator.<init>($double$double$double$double)
org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.<init>($double)
org.apache.commons.math.util.MathUtils.binomialCoefficientDouble($int$int)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.serialVersionUID
org.apache.commons.math.util.MathUtils.sinh($double)
org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.<init>()
org.apache.commons.math.stat.descriptive.SummaryStatistics.<init>()
org.apache.commons.math.ode.IntegratorException.<init>($java.lang.Throwable)
org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.getCurrentStepStart()
org.apache.commons.math.complex.ComplexUtils.cosh($org.apache.commons.math.complex.Complex)
org.apache.commons.math.estimation.AbstractEstimator.rows
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.maxGrowth
org.apache.commons.math.stat.descriptive.SummaryStatistics.setSumImpl($org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic)
org.apache.commons.math.complex.Complex.subtract($org.apache.commons.math.complex.Complex)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.readExternal($java.io.ObjectInput)
org.apache.commons.math.stat.inference.ChiSquareTestImpl.setDistribution($org.apache.commons.math.distribution.ChiSquaredDistribution)
org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.doCopy()
org.apache.commons.math.stat.inference.OneWayAnovaImpl$AnovaStats.access$200($org.apache.commons.math.stat.inference.OneWayAnovaImpl$AnovaStats)
org.apache.commons.math.stat.descriptive.SummaryStatistics.sumImpl
org.apache.commons.math.ode.RungeKuttaIntegrator.resetInternalState()
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.serialVersionUID
org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLogImpl
org.apache.commons.math.estimation.AbstractEstimator.initializeEstimate($org.apache.commons.math.estimation.EstimationProblem)
org.apache.commons.math.util.MathUtils.lcm($int$int)
org.apache.commons.math.stat.descriptive.SummaryStatistics.getSum()
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.c
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.b
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.a
org.apache.commons.math.stat.Frequency$NaturalComparator.<init>($org.apache.commons.math.stat.Frequency$org.apache.commons.math.stat.Frequency$1)
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.hashCode()
org.apache.commons.math.stat.descriptive.SummaryStatistics.getMeanImpl()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSortedValues()
org.apache.commons.math.ode.DormandPrince54Integrator.staticA
org.apache.commons.math.ode.DormandPrince54Integrator.staticC
org.apache.commons.math.ode.DormandPrince54Integrator.staticB
org.apache.commons.math.ode.DummyStepInterpolator.writeExternal($java.io.ObjectOutput)
org.apache.commons.math.stat.descriptive.SummaryStatistics.getVariance()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.serialVersionUID
org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.getCurrentSignedStepsize()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance()
org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsq
org.apache.commons.math.stat.inference.OneWayAnovaImpl$AnovaStats.access$000($org.apache.commons.math.stat.inference.OneWayAnovaImpl$AnovaStats)
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getMax()
org.apache.commons.math.MathException.printStackTrace()
org.apache.commons.math.complex.Complex.pow($org.apache.commons.math.complex.Complex)
org.apache.commons.math.stat.inference.OneWayAnovaImpl$AnovaStats.access$100($org.apache.commons.math.stat.inference.OneWayAnovaImpl$AnovaStats)
org.apache.commons.math.ode.FirstOrderIntegrator.addSwitchingFunction($org.apache.commons.math.ode.SwitchingFunction$double$double$int)
org.apache.commons.math.ode.DormandPrince54Integrator.<init>($double$double$double[]$double[])
org.apache.commons.math.ode.RungeKuttaIntegrator.integrate($org.apache.commons.math.ode.FirstOrderDifferentialEquations$double$double[]$double$double[])
org.apache.commons.math.random.EmpiricalDistributionImpl$StreamDataAdapter.computeStats()
org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaStats($java.util.Collection)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setVarianceImpl($org.apache.commons.math.stat.descriptive.UnivariateStatistic)
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getSummary()
org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID
org.apache.commons.math.stat.descriptive.SummaryStatistics.setMinImpl($org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic)
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.serialVersionUID
org.apache.commons.math.stat.descriptive.SummaryStatistics.n
org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean()
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.setMinReduction($double)
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getN()
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_11
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_12
org.apache.commons.math.ode.DummyStepHandler.<clinit>()
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_13
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.skewnessImpl
org.apache.commons.math.stat.descriptive.SummaryStatistics.setMaxImpl($org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_10
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.setMaxGrowth($double)
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.getElement($int)
org.apache.commons.math.ode.AbstractStepInterpolator.doCopy()
org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLog
org.apache.commons.math.optimization.PointCostPair.cost
org.apache.commons.math.ode.IntegratorException.serialVersionUID
org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMeanImpl
org.apache.commons.math.util.MathUtils.roundUnscaled($double$double$int)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_08
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_09
org.apache.commons.math.MathException.<init>($java.lang.String$java.lang.Object[]$java.lang.Throwable)
org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats($java.lang.Object)
org.apache.commons.math.ode.SwitchState.reinitializeBegin($double$double[])
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_06
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_07
org.apache.commons.math.ode.DormandPrince853Integrator.<init>($double$double$double[]$double[])
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_01
org.apache.commons.math.complex.Complex.multiply($org.apache.commons.math.complex.Complex)
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.minReduction
org.apache.commons.math.stat.descriptive.SummaryStatistics.getGeoMeanImpl()
org.apache.commons.math.estimation.AbstractEstimator.setMaxCostEval($int)
org.apache.commons.math.random.EmpiricalDistributionImpl$ArrayDataAdapter.computeBinStats($double$double)
org.apache.commons.math.ode.DummyStepInterpolator.<init>($org.apache.commons.math.ode.DummyStepInterpolator)
org.apache.commons.math.util.MathUtils.nextAfter($double$double)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.doCopy()
org.apache.commons.math.stat.inference.OneWayAnova.anovaPValue($java.util.Collection)
org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedTime()
org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState()
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_09
org.apache.commons.math.optimization.PointCostPair.getCost()
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_06
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_08
org.apache.commons.math.util.MathUtils.factorialLog($int)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_07
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_01
org.apache.commons.math.complex.ComplexUtils.tanh($org.apache.commons.math.complex.Complex)
org.apache.commons.math.stat.inference.ChiSquareTestImpl.checkArray($long[][])
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.serialVersionUID
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setSkewnessImpl($org.apache.commons.math.stat.descriptive.UnivariateStatistic)
org.apache.commons.math.stat.descriptive.SummaryStatistics.getStandardDeviation()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.<init>($int)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getGeometricMean()
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.clear()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMin()
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.addValue($double)
org.apache.commons.math.ode.SwitchState.reset($double$double[])
org.apache.commons.math.estimation.AbstractEstimator.<init>()
org.apache.commons.math.optimization.NelderMead.iterateSimplex()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.clear()
org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateSimplex()
org.apache.commons.math.stat.inference.OneWayAnova.anovaFValue($java.util.Collection)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.minImpl
org.apache.commons.math.estimation.AbstractEstimator.estimate($org.apache.commons.math.estimation.EstimationProblem)
org.apache.commons.math.stat.Frequency$NaturalComparator.compare($java.lang.Object$java.lang.Object)
org.apache.commons.math.ode.EulerStepInterpolator.doCopy()
org.apache.commons.math.estimation.AbstractEstimator.getRMS($org.apache.commons.math.estimation.EstimationProblem)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.geometricMeanImpl
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getKurtosis()
org.apache.commons.math.complex.Complex.createComplex($double$double)
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.<init>($int)
org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaTest($java.util.Collection$double)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setKurtosisImpl($org.apache.commons.math.stat.descriptive.UnivariateStatistic)
org.apache.commons.math.complex.ComplexUtils.acos($org.apache.commons.math.complex.Complex)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.clear()
org.apache.commons.math.stat.descriptive.SummaryStatistics.meanImpl
org.apache.commons.math.ode.SwitchState.serialVersionUID
org.apache.commons.math.util.MathUtils.indicator($float)
org.apache.commons.math.util.MathUtils.mulAndCheck($long$long)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getKurtosisImpl()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setMeanImpl($org.apache.commons.math.stat.descriptive.UnivariateStatistic)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getWindowSize()
org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes($org.apache.commons.math.optimization.CostFunction$int$org.apache.commons.math.optimization.ConvergenceChecker)
org.apache.commons.math.complex.Complex.sqrt()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setGeometricMeanImpl($org.apache.commons.math.stat.descriptive.UnivariateStatistic)
org.apache.commons.math.stat.inference.OneWayAnovaImpl$AnovaStats.<init>($int$int$double)
org.apache.commons.math.stat.descriptive.SummaryStatistics.sum
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_13
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_12
org.apache.commons.math.util.MathUtils.binomialCoefficientLog($int$int)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_14
org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime($double)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_11
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_10
org.apache.commons.math.stat.descriptive.SummaryStatistics.min
org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumImpl()
org.apache.commons.math.ode.DummyStepHandler.getInstance()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMaxImpl()
org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance()
org.apache.commons.math.ode.DormandPrince853StepInterpolator.<clinit>()
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getSumsq()
org.apache.commons.math.ode.RungeKuttaIntegrator.<init>($double[]$double[][]$double[]$org.apache.commons.math.ode.RungeKuttaStepInterpolator$double)
org.apache.commons.math.stat.descriptive.SummaryStatistics.varianceImpl
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.serialVersionUID
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qrDecomposition()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMeanImpl()
org.apache.commons.math.estimation.AbstractEstimator.guessParametersErrors($org.apache.commons.math.estimation.EstimationProblem)
org.apache.commons.math.complex.Complex.cos()
org.apache.commons.math.util.MathUtils.sign($double)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setSumImpl($org.apache.commons.math.stat.descriptive.UnivariateStatistic)
org.apache.commons.math.complex.Complex.log()
org.apache.commons.math.stat.Frequency.getCumFreq($java.lang.Object)
org.apache.commons.math.estimation.AbstractEstimator.maxCostEval
org.apache.commons.math.ode.DormandPrince853StepInterpolator.c16
org.apache.commons.math.ode.DummyStepInterpolator.readExternal($java.io.ObjectInput)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.c15
org.apache.commons.math.complex.ComplexUtils.log($org.apache.commons.math.complex.Complex)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.kurtosisImpl
org.apache.commons.math.complex.ComplexUtils.polar2Complex($double$double)
org.apache.commons.math.complex.Complex.negate()
org.apache.commons.math.complex.Complex.sin()
org.apache.commons.math.ode.DormandPrince853StepInterpolator.writeExternal($java.io.ObjectOutput)
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qTy($double[])
org.apache.commons.math.ode.RungeKuttaIntegrator.sanityChecks($org.apache.commons.math.ode.FirstOrderDifferentialEquations$double$double[]$double$double[])
org.apache.commons.math.optimization.MultiDirectional.iterateSimplex()
org.apache.commons.math.ode.GraggBulirschStoerIntegrator.addSwitchingFunction($org.apache.commons.math.ode.SwitchingFunction$double$double$int)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.c14
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getValues()
org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaPValue($java.util.Collection)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize()
org.apache.commons.math.ode.GillIntegrator.<init>($double)
org.apache.commons.math.util.MathUtils.round($double$int$int)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getElement($int)
org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest($double[]$long[])
org.apache.commons.math.ode.SwitchingFunctionsHandler.stop()
org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare($long[][])
org.apache.commons.math.stat.inference.OneWayAnovaImpl.<init>()
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.getN()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getPercentile($double)
org.apache.commons.math.ode.SwitchingFunctionsHandler.reset($double$double[])
org.apache.commons.math.MathException.printStackTrace($java.io.PrintWriter)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getGeometricMeanImpl()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.varianceImpl
org.apache.commons.math.MathException.printStackTrace($java.io.PrintStream)
org.apache.commons.math.MessagesResources_fr.<clinit>()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.<init>()
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.getSafety()
org.apache.commons.math.stat.descriptive.SummaryStatistics.setMeanImpl($org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic)
org.apache.commons.math.util.MathUtils.hash($double)
org.apache.commons.math.estimation.AbstractEstimator.measurements
org.apache.commons.math.estimation.AbstractEstimator.updateJacobian()
org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumsq()
org.apache.commons.math.util.MathUtils.mulAndCheck($int$int)
org.apache.commons.math.ode.SwitchState.stop()
org.apache.commons.math.complex.Complex.acos()
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.fsal
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.setWindowSize($int)
org.apache.commons.math.util.MathUtils.round($float$int)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.toString()
org.apache.commons.math.complex.Complex.equals($java.lang.Object)
org.apache.commons.math.stat.descriptive.SummaryStatistics.getMin()
org.apache.commons.math.stat.descriptive.SummaryStatistics.equals($java.lang.Object)
org.apache.commons.math.estimation.AbstractEstimator.getChiSquare($org.apache.commons.math.estimation.EstimationProblem)
org.apache.commons.math.stat.descriptive.SummaryStatistics.maxImpl
org.apache.commons.math.ode.SwitchingFunctionsHandler.evaluateStep($org.apache.commons.math.ode.StepInterpolator)
org.apache.commons.math.estimation.EstimationException.serialVersionUID
org.apache.commons.math.stat.inference.OneWayAnovaImpl$AnovaStats.dfbg
org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest($long[][])
org.apache.commons.math.complex.ComplexUtils.tan($org.apache.commons.math.complex.Complex)
org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsqImpl
org.apache.commons.math.complex.Complex.asin()
org.apache.commons.math.complex.Complex.tanh()
org.apache.commons.math.ode.DormandPrince54Integrator.<clinit>()
org.apache.commons.math.complex.ComplexUtils.atan($org.apache.commons.math.complex.Complex)
org.apache.commons.math.util.MathUtils.gcd($int$int)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.maxImpl
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.<init>($boolean$double[]$double[][]$double[]$org.apache.commons.math.ode.RungeKuttaStepInterpolator$double$double$double$double)
org.apache.commons.math.stat.Frequency$NaturalComparator.serialVersionUID
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.setSafety($double)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.eDA
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getMin()
org.apache.commons.math.ode.RungeKuttaIntegrator.getCurrentStepStart()
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.getWindowSize()
org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.initializeStep($org.apache.commons.math.ode.FirstOrderDifferentialEquations$boolean$int$double[]$double$double[]$double[]$double[]$double[])
org.apache.commons.math.ode.HighamHall54Integrator.<init>($double$double$double$double)
org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.resetInternalState()
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setCostRelativeTolerance($double)
org.apache.commons.math.util.MathUtils.binomialCoefficient($int$int)
org.apache.commons.math.estimation.AbstractEstimator.cost
org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_01
org.apache.commons.math.ode.HighamHall54StepInterpolator.doCopy()
org.apache.commons.math.estimation.GaussNewtonEstimator.<init>($int$double$double)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setMaxImpl($org.apache.commons.math.stat.descriptive.UnivariateStatistic)
org.apache.commons.math.ode.MidpointStepInterpolator.doCopy()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVarianceImpl()
org.apache.commons.math.complex.Complex.add($org.apache.commons.math.complex.Complex)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_08
org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_09
org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_06
org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_07
org.apache.commons.math.MathException.<init>($java.lang.Throwable)
org.apache.commons.math.complex.Complex.cosh()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.sumImpl
org.apache.commons.math.ode.ContinuousOutputModel.append($org.apache.commons.math.ode.ContinuousOutputModel)
org.apache.commons.math.util.MathUtils.addAndCheck($long$long$java.lang.String)
org.apache.commons.math.stat.descriptive.SummaryStatistics.serialVersionUID
org.apache.commons.math.stat.descriptive.SummaryStatistics.setVarianceImpl($org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic)
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getMean()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSkewnessImpl()
org.apache.commons.math.ode.AbstractStepInterpolator.writeBaseExternal($java.io.ObjectOutput)
org.apache.commons.math.stat.descriptive.SummaryStatistics.checkEmpty()
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.<init>()
org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator.doCopy()
======================================================
======================================================
ALL ENTITY TO TEST : 


org.apache.commons.math.complex.Complex.sinh()
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.apply($org.apache.commons.math.stat.descriptive.UnivariateStatistic)
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getVariance()
org.apache.commons.math.analysis.SecantSolver.solve($double$double)
org.apache.commons.math.analysis.TrapezoidIntegrator.stage($double$double$int)
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMDirection($double[]$double[]$double[]$double[])
org.apache.commons.math.ode.SwitchState.<init>($org.apache.commons.math.ode.SwitchingFunction$double$double$int)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setSumsqImpl($org.apache.commons.math.stat.descriptive.UnivariateStatistic)
org.apache.commons.math.ode.SwitchingFunctionsHandler.add($org.apache.commons.math.ode.SwitchingFunction$double$double$int)
org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate($org.apache.commons.math.ode.FirstOrderDifferentialEquations$double$double[]$double$double[])
org.apache.commons.math.stat.inference.TestUtils.homoscedasticTTest($org.apache.commons.math.stat.descriptive.StatisticalSummary$org.apache.commons.math.stat.descriptive.StatisticalSummary)
org.apache.commons.math.ode.RungeKuttaIntegrator.getStepHandler()
org.apache.commons.math.estimation.Estimator.guessParametersErrors($org.apache.commons.math.estimation.EstimationProblem)
org.apache.commons.math.distribution.TDistributionImpl.cumulativeProbability($double)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getPercentileImpl()
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMParameter($double[]$double$double[]$double[]$double[]$double[])
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.cost
org.apache.commons.math.stat.inference.TestUtils.chiSquareTestDataSetsComparison($long[]$long[])
org.apache.commons.math.stat.inference.TTestImpl.tTest($org.apache.commons.math.stat.descriptive.StatisticalSummary$org.apache.commons.math.stat.descriptive.StatisticalSummary$double)
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.jacNorm
org.apache.commons.math.stat.inference.TestUtils.tTest($org.apache.commons.math.stat.descriptive.StatisticalSummary$org.apache.commons.math.stat.descriptive.StatisticalSummary)
org.apache.commons.math.ode.ThreeEighthesStepInterpolator.doCopy()
org.apache.commons.math.ode.DerivativeException.<init>($java.lang.String$java.lang.String[])
org.apache.commons.math.fraction.Fraction.<init>($int$int)
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.getName()
org.apache.commons.math.ode.HighamHall54StepInterpolator.<init>($org.apache.commons.math.ode.HighamHall54StepInterpolator)
org.apache.commons.math.estimation.AbstractEstimator.jacobian
org.apache.commons.math.analysis.DividedDifferenceInterpolator.computeDividedDifference($double[]$double[])
org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.<init>($boolean$double[]$double[][]$double[]$org.apache.commons.math.ode.RungeKuttaStepInterpolator$double$double$double[]$double[])
org.apache.commons.math.ConvergenceException.<init>()
org.apache.commons.math.ode.AbstractStepInterpolator.getInterpolatedTime()
org.apache.commons.math.transform.FastSineTransformer.transform($org.apache.commons.math.analysis.UnivariateRealFunction$double$double$int)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getStandardDeviation()
org.apache.commons.math.ode.DummyStepInterpolator.computeInterpolatedState($double$double)
org.apache.commons.math.MathException.<init>($java.lang.String$java.lang.Object[])
org.apache.commons.math.stat.descriptive.SummaryStatistics.hashCode()
org.apache.commons.math.ode.GillStepInterpolator.doCopy()
org.apache.commons.math.fraction.Fraction.add($org.apache.commons.math.fraction.Fraction)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.vectorsInitialized
org.apache.commons.math.estimation.AbstractEstimator.jacobianEvaluations
org.apache.commons.math.DimensionMismatchException.<init>($int$int)
org.apache.commons.math.complex.ComplexUtils.sin($org.apache.commons.math.complex.Complex)
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.solvedCols
org.apache.commons.math.distribution.AbstractIntegerDistribution.probability($double)
org.apache.commons.math.distribution.ChiSquaredDistributionImpl.cumulativeProbability($double)
org.apache.commons.math.ode.GraggBulirschStoerIntegrator.stepStart
org.apache.commons.math.stat.descriptive.SummaryStatistics.getMinImpl()
org.apache.commons.math.fraction.Fraction.reciprocal()
org.apache.commons.math.ode.SwitchState.getEventTime()
org.apache.commons.math.complex.Complex.hashCode()
org.apache.commons.math.ode.DormandPrince853StepInterpolator.<init>()
org.apache.commons.math.ode.ContinuousOutputModel.index
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply($org.apache.commons.math.stat.descriptive.UnivariateStatistic)
org.apache.commons.math.MathException.buildMessage($java.lang.String$java.lang.Object[]$java.util.Locale)
org.apache.commons.math.fraction.FractionConversionException.<init>($double$int)
org.apache.commons.math.special.Gamma.regularizedGammaQ($double$double$double$int)
org.apache.commons.math.estimation.AbstractEstimator.parameters
org.apache.commons.math.ConvergenceException.<init>($java.lang.String$java.lang.Object[])
org.apache.commons.math.stat.descriptive.moment.StandardDeviation.evaluate($double[])
org.apache.commons.math.ode.AbstractStepInterpolator.copy()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.<init>()
org.apache.commons.math.complex.Complex.tan()
org.apache.commons.math.stat.inference.OneWayAnova.anovaTest($java.util.Collection$double)
org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.sanityChecks($org.apache.commons.math.ode.FirstOrderDifferentialEquations$double$double[]$double$double[])
org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.filterStep($double$boolean)
org.apache.commons.math.stat.descriptive.SummaryStatistics.setSumLogImpl($org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic)
org.apache.commons.math.util.MathUtils.factorialDouble($int)
org.apache.commons.math.fraction.FractionFormat.parse($java.lang.String)
org.apache.commons.math.stat.descriptive.SummaryStatistics.toString()
org.apache.commons.math.complex.Complex.NaN
org.apache.commons.math.stat.inference.TestUtils.t($double$double[])
org.apache.commons.math.complex.ComplexUtils.cos($org.apache.commons.math.complex.Complex)
org.apache.commons.math.stat.inference.TestUtils.tTest($double[]$double[]$double)
org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode()
org.apache.commons.math.transform.FastFourierTransformer.sample($org.apache.commons.math.analysis.UnivariateRealFunction$double$double$int)
org.apache.commons.math.analysis.LaguerreSolver.solve($double$double$double)
org.apache.commons.math.stat.inference.ChiSquareTestImpl.getDistributionFactory()
org.apache.commons.math.fraction.Fraction.<init>($double$double$int)
org.apache.commons.math.linear.RealMatrixImpl.hashCode()
org.apache.commons.math.ode.MidpointIntegrator.<init>($double)
org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest($long[][]$double)
org.apache.commons.math.complex.ComplexUtils.sinh($org.apache.commons.math.complex.Complex)
org.apache.commons.math.ode.SwitchState.maxCheckInterval
org.apache.commons.math.estimation.AbstractEstimator.cols
org.apache.commons.math.ode.HighamHall54Integrator.<clinit>()
org.apache.commons.math.complex.ComplexUtils.sqrt1z($org.apache.commons.math.complex.Complex)
org.apache.commons.math.transform.FastFourierTransformer.inversetransform($double[])
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.stepStart
org.apache.commons.math.estimation.AbstractEstimator.updateResidualsAndCost()
org.apache.commons.math.analysis.BrentSolver.solve($double$double)
org.apache.commons.math.transform.FastFourierTransformer.fft($org.apache.commons.math.complex.Complex[])
org.apache.commons.math.stat.descriptive.SummaryStatistics.mean
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getN()
org.apache.commons.math.analysis.SecantSolver.solve($double$double$double)
org.apache.commons.math.ode.SwitchingFunctionsHandler.getEventTime()
org.apache.commons.math.random.ValueServer.fill($double[])
org.apache.commons.math.ode.ThreeEighthesIntegrator.<init>($double)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMinImpl()
org.apache.commons.math.optimization.DirectSearchOptimizer.minima
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.windowSize
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSum()
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.<init>()
org.apache.commons.math.optimization.PointCostPair.point
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.<init>()
org.apache.commons.math.transform.FastFourierTransformer.transform2($org.apache.commons.math.complex.Complex[])
org.apache.commons.math.stat.descriptive.moment.Mean.evaluate($double[]$int$int)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_14
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_13
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_15
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_10
org.apache.commons.math.ode.RungeKuttaIntegrator.a
org.apache.commons.math.ode.RungeKuttaIntegrator.b
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_12
org.apache.commons.math.ode.RungeKuttaIntegrator.c
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_11
org.apache.commons.math.ode.AbstractStepInterpolator.setInterpolatedTime($double)
org.apache.commons.math.stat.descriptive.SummaryStatistics.clear()
org.apache.commons.math.analysis.RombergIntegrator.integrate($double$double)
org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumsqImpl()
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.exp
org.apache.commons.math.stat.inference.TTestImpl.homoscedasticT($org.apache.commons.math.stat.descriptive.StatisticalSummary$org.apache.commons.math.stat.descriptive.StatisticalSummary)
org.apache.commons.math.stat.inference.TTestImpl.t($org.apache.commons.math.stat.descriptive.StatisticalSummary$org.apache.commons.math.stat.descriptive.StatisticalSummary)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_07
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_06
org.apache.commons.math.MathException.rootCause
org.apache.commons.math.ode.DormandPrince853StepInterpolator.computeInterpolatedState($double$double)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_09
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_08
org.apache.commons.math.ode.FirstOrderIntegrator.getCurrentSignedStepsize()
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_01
org.apache.commons.math.ode.StepNormalizer.handleStep($org.apache.commons.math.ode.StepInterpolator$boolean)
org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTestDataSetsComparison($long[]$long[]$double)
org.apache.commons.math.ode.DummyStepInterpolator.doCopy()
org.apache.commons.math.stat.Frequency$NaturalComparator.this$0
org.apache.commons.math.util.ContinuedFraction.evaluate($double)
org.apache.commons.math.FunctionEvaluationException.<init>($double$java.lang.String$java.lang.Object[]$java.lang.Throwable)
org.apache.commons.math.stat.inference.TestUtils.homoscedasticT($double[]$double[])
org.apache.commons.math.ode.HighamHall54Integrator.<init>($double$double$double[]$double[])
org.apache.commons.math.stat.inference.TestUtils.homoscedasticT($org.apache.commons.math.stat.descriptive.StatisticalSummary$org.apache.commons.math.stat.descriptive.StatisticalSummary)
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.residuals
org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaFValue($java.util.Collection)
org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumLogImpl()
org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setStepHandler($org.apache.commons.math.ode.StepHandler)
org.apache.commons.math.ode.ThreeEighthesStepInterpolator.<init>($org.apache.commons.math.ode.ThreeEighthesStepInterpolator)
org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.serialVersionUID
org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.value($double)
org.apache.commons.math.transform.FastSineTransformer.inversetransform($org.apache.commons.math.analysis.UnivariateRealFunction$double$double$int)
org.apache.commons.math.distribution.AbstractContinuousDistribution$1.value($double)
org.apache.commons.math.stat.descriptive.SummaryStatistics.getMax()
org.apache.commons.math.distribution.HypergeometricDistributionImpl.upperCumulativeProbability($int)
org.apache.commons.math.util.MathUtils.addAndCheck($long$long)
org.apache.commons.math.stat.descriptive.SummaryStatistics.getSummary()
org.apache.commons.math.distribution.BinomialDistributionImpl.inverseCumulativeProbability($double)
org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability($double)
org.apache.commons.math.stat.Frequency$NaturalComparator.<init>($org.apache.commons.math.stat.Frequency)
org.apache.commons.math.MathException.translate($java.lang.String$java.util.Locale)
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.integrate($org.apache.commons.math.ode.FirstOrderDifferentialEquations$double$double[]$double$double[])
org.apache.commons.math.ode.SwitchingFunctionsHandler.first
org.apache.commons.math.transform.FastCosineTransformer.fct($double[])
org.apache.commons.math.stat.Frequency.getCumPct($java.lang.Object)
org.apache.commons.math.ode.DormandPrince54StepInterpolator.doCopy()
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.getMaxGrowth()
org.apache.commons.math.stat.descriptive.SummaryStatistics.getGeometricMean()
org.apache.commons.math.ode.SwitchState.stepAccepted($double$double[])
org.apache.commons.math.analysis.DividedDifferenceInterpolator.interpolate($double[]$double[])
org.apache.commons.math.stat.regression.SimpleRegression.getSlopeConfidenceInterval()
org.apache.commons.math.complex.Complex.ZERO
org.apache.commons.math.ode.DormandPrince54Integrator.<init>($double$double$double$double)
org.apache.commons.math.ode.AbstractStepInterpolator.finalized
org.apache.commons.math.ArgumentOutsideDomainException.<init>($double$double$double)
org.apache.commons.math.ode.RungeKuttaIntegrator.handler
org.apache.commons.math.random.ValueServer.getNext()
org.apache.commons.math.optimization.CostException.<init>($java.lang.String$java.lang.Object[])
org.apache.commons.math.random.EmpiricalDistributionImpl.getNextValue()
org.apache.commons.math.ode.GraggBulirschStoerIntegrator.stepSize
org.apache.commons.math.fraction.Fraction.<clinit>()
org.apache.commons.math.analysis.RiddersSolver.solve($double$double)
org.apache.commons.math.FunctionEvaluationException.<init>($double)
org.apache.commons.math.optimization.MultiDirectional.evaluateNewSimplex($org.apache.commons.math.optimization.PointCostPair[]$double)
org.apache.commons.math.MathException.getArguments()
org.apache.commons.math.util.MathUtils.round($float$int$int)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSumsq()
org.apache.commons.math.special.Beta.regularizedBeta($double$double$double)
org.apache.commons.math.ode.SwitchState.evaluateStep($org.apache.commons.math.ode.StepInterpolator)
org.apache.commons.math.distribution.BinomialDistributionImpl.cumulativeProbability($int)
org.apache.commons.math.stat.descriptive.SummaryStatistics.getMaxImpl()
org.apache.commons.math.stat.inference.TestUtils.chiSquareTest($long[][])
org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.stepSize
org.apache.commons.math.complex.Complex.conjugate()
org.apache.commons.math.transform.FastFourierTransformer.inversetransform($org.apache.commons.math.complex.Complex[])
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.orthoTolerance
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getSum()
org.apache.commons.math.random.CorrelatedRandomVectorGenerator.<init>($org.apache.commons.math.linear.RealMatrix$double$org.apache.commons.math.random.NormalizedRandomGenerator)
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.toString()
org.apache.commons.math.transform.FastSineTransformer.transform($double[])
org.apache.commons.math.stat.inference.TestUtils.chiSquareTestDataSetsComparison($long[]$long[]$double)
org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest($double[]$double[]$double)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.serialVersionUID
org.apache.commons.math.transform.FastCosineTransformer.transform($double[])
org.apache.commons.math.analysis.BrentSolver.solve($double$double$double)
org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.<init>($boolean$double[]$double[][]$double[]$org.apache.commons.math.ode.RungeKuttaStepInterpolator$double$double$double$double)
org.apache.commons.math.distribution.PascalDistributionImpl.cumulativeProbability($int)
org.apache.commons.math.analysis.NewtonSolver.solve($double$double)
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.maxGrowth
org.apache.commons.math.stat.descriptive.SummaryStatistics.setSumImpl($org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.readExternal($java.io.ObjectInput)
org.apache.commons.math.stat.inference.OneWayAnovaImpl$AnovaStats.access$200($org.apache.commons.math.stat.inference.OneWayAnovaImpl$AnovaStats)
org.apache.commons.math.stat.descriptive.SummaryStatistics.sumImpl
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.serialVersionUID
org.apache.commons.math.ode.RungeKuttaIntegrator.resetInternalState()
org.apache.commons.math.util.MathUtils.lcm($int$int)
org.apache.commons.math.stat.descriptive.SummaryStatistics.getSum()
org.apache.commons.math.stat.Frequency.toString()
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.hashCode()
org.apache.commons.math.ode.RungeKuttaIntegrator.switchesHandler
org.apache.commons.math.ode.DormandPrince54Integrator.staticA
org.apache.commons.math.ode.DormandPrince54Integrator.staticC
org.apache.commons.math.distribution.AbstractIntegerDistribution.inverseCumulativeProbability($double)
org.apache.commons.math.ode.DormandPrince54Integrator.staticB
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.serialVersionUID
org.apache.commons.math.stat.inference.TTestImpl.tTest($double$double[])
org.apache.commons.math.ode.DormandPrince54StepInterpolator.<init>($org.apache.commons.math.ode.DormandPrince54StepInterpolator)
org.apache.commons.math.ode.RungeKuttaIntegrator.stepSize
org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateCost($double[])
org.apache.commons.math.ode.RungeKuttaIntegrator.prototype
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance()
org.apache.commons.math.geometry.Rotation.<init>($double[][]$double)
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getMax()
org.apache.commons.math.MathException.printStackTrace()
org.apache.commons.math.stat.inference.OneWayAnovaImpl$AnovaStats.access$100($org.apache.commons.math.stat.inference.OneWayAnovaImpl$AnovaStats)
org.apache.commons.math.ode.FirstOrderIntegrator.addSwitchingFunction($org.apache.commons.math.ode.SwitchingFunction$double$double$int)
org.apache.commons.math.random.ValueServer.getNextDigest()
org.apache.commons.math.ode.RungeKuttaIntegrator.integrate($org.apache.commons.math.ode.FirstOrderDifferentialEquations$double$double[]$double$double[])
org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaStats($java.util.Collection)
org.apache.commons.math.MessagesResources_fr.getContents()
org.apache.commons.math.stat.descriptive.SummaryStatistics.setMinImpl($org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic)
org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID
org.apache.commons.math.stat.descriptive.SummaryStatistics.n
org.apache.commons.math.ode.AbstractStepInterpolator.interpolatedTime
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.setMinReduction($double)
org.apache.commons.math.special.Gamma.regularizedGammaP($double$double)
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getN()
org.apache.commons.math.special.Beta.regularizedBeta($double$double$double$double$int)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_11
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_12
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_13
org.apache.commons.math.transform.FastFourierTransformer.computeOmega($int)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.skewnessImpl
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_10
org.apache.commons.math.ode.GillIntegrator.a
org.apache.commons.math.ode.GillIntegrator.b
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.setMaxGrowth($double)
org.apache.commons.math.ode.GillIntegrator.c
org.apache.commons.math.ode.AbstractStepInterpolator.doCopy()
org.apache.commons.math.MathConfigurationException.<init>($java.lang.String$java.lang.Object[])
org.apache.commons.math.optimization.PointCostPair.cost
org.apache.commons.math.ode.IntegratorException.serialVersionUID
org.apache.commons.math.analysis.TrapezoidIntegrator.integrate($double$double)
org.apache.commons.math.transform.FastSineTransformer.inversetransform2($double[])
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_08
org.apache.commons.math.MathException.getCause()
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_09
org.apache.commons.math.stat.StatUtils.sum($double[]$int$int)
org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats($java.lang.Object)
org.apache.commons.math.ode.SwitchState.reinitializeBegin($double$double[])
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_06
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_07
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_01
org.apache.commons.math.transform.FastCosineTransformer.transform($org.apache.commons.math.analysis.UnivariateRealFunction$double$double$int)
org.apache.commons.math.random.EmpiricalDistributionImpl$ArrayDataAdapter.computeBinStats($double$double)
org.apache.commons.math.util.MathUtils.nextAfter($double$double)
org.apache.commons.math.ode.AbstractStepInterpolator.shift()
org.apache.commons.math.distribution.AbstractIntegerDistribution.cumulativeProbability($double)
org.apache.commons.math.stat.inference.TestUtils.tTest($double$double[]$double)
org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedTime()
org.apache.commons.math.transform.FastSineTransformer.transform2($org.apache.commons.math.analysis.UnivariateRealFunction$double$double$int)
org.apache.commons.math.util.MathUtils.factorialLog($int)
org.apache.commons.math.random.EmpiricalDistributionImpl.upperBounds
org.apache.commons.math.stat.StatUtils.sumSq($double[])
org.apache.commons.math.complex.ComplexUtils.tanh($org.apache.commons.math.complex.Complex)
org.apache.commons.math.distribution.PoissonDistributionImpl.probability($int)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setSkewnessImpl($org.apache.commons.math.stat.descriptive.UnivariateStatistic)
org.apache.commons.math.stat.descriptive.SummaryStatistics.getStandardDeviation()
org.apache.commons.math.distribution.AbstractIntegerDistribution.cumulativeProbability($int$int)
org.apache.commons.math.analysis.MullerSolver.solve($double$double)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.<init>($int)
org.apache.commons.math.stat.descriptive.moment.Skewness.evaluate($double[]$int$int)
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.clear()
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.addValue($double)
org.apache.commons.math.stat.StatUtils.product($double[]$int$int)
org.apache.commons.math.stat.inference.TestUtils.<clinit>()
org.apache.commons.math.DuplicateSampleAbscissaException.<init>($double$int$int)
org.apache.commons.math.stat.StatUtils.max($double[]$int$int)
org.apache.commons.math.optimization.NelderMead.iterateSimplex()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.clear()
org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate($double[])
org.apache.commons.math.stat.inference.OneWayAnova.anovaFValue($java.util.Collection)
org.apache.commons.math.estimation.AbstractEstimator.estimate($org.apache.commons.math.estimation.EstimationProblem)
org.apache.commons.math.ode.SwitchState.g0Positive
org.apache.commons.math.ode.EulerStepInterpolator.doCopy()
org.apache.commons.math.estimation.AbstractEstimator.getRMS($org.apache.commons.math.estimation.EstimationProblem)
org.apache.commons.math.MessagesResources_fr.contents
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getKurtosis()
org.apache.commons.math.ode.SwitchState.increasing
org.apache.commons.math.stat.inference.TestUtils.tTest($double$org.apache.commons.math.stat.descriptive.StatisticalSummary)
org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaTest($java.util.Collection$double)
org.apache.commons.math.stat.inference.TestUtils.t($double$org.apache.commons.math.stat.descriptive.StatisticalSummary)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.clear()
org.apache.commons.math.ode.SwitchState.serialVersionUID
org.apache.commons.math.util.MathUtils.mulAndCheck($long$long)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getKurtosisImpl()
org.apache.commons.math.transform.FastFourierTransformer.inversetransform2($org.apache.commons.math.complex.Complex[])
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setMeanImpl($org.apache.commons.math.stat.descriptive.UnivariateStatistic)
org.apache.commons.math.complex.Complex.sqrt()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setGeometricMeanImpl($org.apache.commons.math.stat.descriptive.UnivariateStatistic)
org.apache.commons.math.stat.descriptive.SummaryStatistics.sum
org.apache.commons.math.ode.ContinuousOutputModel.getInitialTime()
org.apache.commons.math.stat.regression.SimpleRegression.getSlopeConfidenceInterval($double)
org.apache.commons.math.random.EmpiricalDistributionImpl.getUpperBounds()
org.apache.commons.math.ode.SwitchState.function
org.apache.commons.math.stat.descriptive.SummaryStatistics.min
org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.increment($double[])
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMaxImpl()
org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance()
org.apache.commons.math.analysis.RiddersSolver.solve($double$double$double)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.<clinit>()
org.apache.commons.math.ode.EulerStepInterpolator.<init>($org.apache.commons.math.ode.EulerStepInterpolator)
org.apache.commons.math.stat.inference.TTestImpl.tTest($double$double[]$double)
org.apache.commons.math.stat.inference.TTestImpl.tTest($double[]$double[]$double)
org.apache.commons.math.special.Gamma.regularizedGammaQ($double$double)
org.apache.commons.math.stat.descriptive.SummaryStatistics.varianceImpl
org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.stepStart
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.serialVersionUID
org.apache.commons.math.special.Gamma.regularizedGammaP($double$double$double$int)
org.apache.commons.math.estimation.AbstractEstimator.guessParametersErrors($org.apache.commons.math.estimation.EstimationProblem)
org.apache.commons.math.complex.Complex.cos()
org.apache.commons.math.util.MathUtils.sign($double)
org.apache.commons.math.analysis.UnivariateRealSolverImpl.isBracketing($double$double$org.apache.commons.math.analysis.UnivariateRealFunction)
org.apache.commons.math.ode.GillStepInterpolator.<init>($org.apache.commons.math.ode.GillStepInterpolator)
org.apache.commons.math.random.ValueServer.fill($int)
org.apache.commons.math.complex.Complex.log()
org.apache.commons.math.stat.Frequency.getCumFreq($java.lang.Object)
org.apache.commons.math.estimation.AbstractEstimator.maxCostEval
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.kurtosisImpl
org.apache.commons.math.complex.ComplexUtils.polar2Complex($double$double)
org.apache.commons.math.complex.Complex.ONE
org.apache.commons.math.ode.SwitchState.nextAction
org.apache.commons.math.complex.Complex.negate()
org.apache.commons.math.ode.DormandPrince853StepInterpolator.writeExternal($java.io.ObjectOutput)
org.apache.commons.math.ode.GraggBulirschStoerIntegrator.addSwitchingFunction($org.apache.commons.math.ode.SwitchingFunction$double$double$int)
org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes($org.apache.commons.math.optimization.CostFunction$int$org.apache.commons.math.optimization.ConvergenceChecker$org.apache.commons.math.random.RandomVectorGenerator$int)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize()
org.apache.commons.math.transform.FastCosineTransformer.inversetransform2($double[])
org.apache.commons.math.fraction.FractionFormat.format($java.lang.Object$java.lang.StringBuffer$java.text.FieldPosition)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getElement($int)
org.apache.commons.math.analysis.LaguerreSolver.resultComputed
org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest($double[]$long[])
org.apache.commons.math.ode.SwitchingFunctionsHandler.stop()
org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare($long[][])
org.apache.commons.math.stat.inference.ChiSquareTestImpl.<init>()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getPercentile($double)
org.apache.commons.math.analysis.LaguerreSolver.iterationCount
org.apache.commons.math.ode.SwitchingFunctionsHandler.reset($double$double[])
org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes($org.apache.commons.math.optimization.CostFunction$int$org.apache.commons.math.optimization.ConvergenceChecker$double[][])
org.apache.commons.math.ode.GraggBulirschStoerIntegrator.initializeArrays()
org.apache.commons.math.MathException.printStackTrace($java.io.PrintWriter)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.varianceImpl
org.apache.commons.math.MathException.printStackTrace($java.io.PrintStream)
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.lmDir
org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumsq()
org.apache.commons.math.stat.Frequency.getCumPct($int)
org.apache.commons.math.util.MathUtils.mulAndCheck($int$int)
org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.<init>($org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator)
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.fsal
org.apache.commons.math.stat.inference.TestUtils.chiSquareTest($double[]$long[])
org.apache.commons.math.random.EmpiricalDistributionImpl$StreamDataAdapter.inputStream
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.toString()
org.apache.commons.math.random.CorrelatedRandomVectorGenerator.decompose($org.apache.commons.math.linear.RealMatrix$double)
org.apache.commons.math.ode.RungeKuttaIntegrator.step
org.apache.commons.math.stat.descriptive.SummaryStatistics.getMin()
org.apache.commons.math.ode.RungeKuttaStepInterpolator.<init>($org.apache.commons.math.ode.RungeKuttaStepInterpolator)
org.apache.commons.math.stat.descriptive.SummaryStatistics.equals($java.lang.Object)
org.apache.commons.math.transform.FastSineTransformer.fst($double[])
org.apache.commons.math.ode.ContinuousOutputModel.getFinalTime()
org.apache.commons.math.estimation.GaussNewtonEstimator.jacobianEvaluations
org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator.<init>($org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator)
org.apache.commons.math.estimation.EstimationException.serialVersionUID
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.class$org$apache$commons$math$stat$descriptive$DescriptiveStatistics
org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest($long[][])
org.apache.commons.math.util.ContinuedFraction.evaluate($double$double)
org.apache.commons.math.transform.FastSineTransformer.transform2($double[])
org.apache.commons.math.complex.Complex.asin()
org.apache.commons.math.ode.SwitchState.previousEventTime
org.apache.commons.math.util.MathUtils.gcd($int$int)
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.<init>($boolean$double[]$double[][]$double[]$org.apache.commons.math.ode.RungeKuttaStepInterpolator$double$double$double$double)
org.apache.commons.math.stat.Frequency$NaturalComparator.serialVersionUID
org.apache.commons.math.stat.inference.TestFactoryImpl.createChiSquareTest()
org.apache.commons.math.distribution.HypergeometricDistributionImpl.probability($int$int$int$int)
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.setSafety($double)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.eDA
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.getWindowSize()
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setCostRelativeTolerance($double)
org.apache.commons.math.ode.GraggBulirschStoerIntegrator.<init>($double$double$double[]$double[])
org.apache.commons.math.util.DefaultTransformer.transform($java.lang.Object)
org.apache.commons.math.estimation.AbstractEstimator.cost
org.apache.commons.math.fraction.Fraction.<init>($double)
org.apache.commons.math.ode.SwitchState.convergence
org.apache.commons.math.estimation.GaussNewtonEstimator.<init>($int$double$double)
org.apache.commons.math.ode.HighamHall54StepInterpolator.doCopy()
org.apache.commons.math.optimization.DirectSearchOptimizer.evaluations
org.apache.commons.math.ode.MidpointStepInterpolator.doCopy()
org.apache.commons.math.analysis.PolynomialSplineFunction.value($double)
org.apache.commons.math.DuplicateSampleAbscissaException.getDuplicateAbscissa()
org.apache.commons.math.ode.DormandPrince853StepInterpolator.yDotKLast
org.apache.commons.math.ode.AbstractStepInterpolator.currentTime
org.apache.commons.math.transform.FastFourierTransformer.transform($org.apache.commons.math.complex.Complex[])
org.apache.commons.math.stat.inference.TestUtils.chiSquareTest($long[][]$double)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.sumImpl
org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.equals($java.lang.Object)
org.apache.commons.math.util.MathUtils.addAndCheck($long$long$java.lang.String)
org.apache.commons.math.stat.descriptive.SummaryStatistics.serialVersionUID
org.apache.commons.math.ode.RungeKuttaStepInterpolator.writeExternal($java.io.ObjectOutput)
org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest($double[]$double[])
org.apache.commons.math.ode.AbstractStepInterpolator.writeBaseExternal($java.io.ObjectOutput)
org.apache.commons.math.stat.descriptive.SummaryStatistics.checkEmpty()
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.<init>()
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.stepSize
org.apache.commons.math.estimation.EstimationException.<init>($java.lang.String$java.lang.Object[])
org.apache.commons.math.fraction.Fraction.multiply($org.apache.commons.math.fraction.Fraction)
org.apache.commons.math.util.MathUtils.equals($double$double)
org.apache.commons.math.stat.descriptive.SummaryStatistics.secondMoment
org.apache.commons.math.stat.StatUtils.variance($double[]$int$int)
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.<init>($boolean$double[]$double[][]$double[]$org.apache.commons.math.ode.RungeKuttaStepInterpolator$double$double$double[]$double[])
org.apache.commons.math.util.ContinuedFraction.evaluate($double$int)
org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.<init>($double$double$double$double)
org.apache.commons.math.distribution.GammaDistributionImpl.cumulativeProbability($double)
org.apache.commons.math.stat.StatUtils.variance($double[])
org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket($org.apache.commons.math.analysis.UnivariateRealFunction$double$double$double$int)
org.apache.commons.math.complex.Complex.sqrt1z()
org.apache.commons.math.MathException.pattern
org.apache.commons.math.transform.FastFourierTransformer.transform2($double[])
org.apache.commons.math.stat.inference.TestUtils.tTest($double$double[])
org.apache.commons.math.stat.descriptive.SummaryStatistics.class$org$apache$commons$math$stat$descriptive$SummaryStatistics
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.clear()
org.apache.commons.math.fraction.Fraction.divide($org.apache.commons.math.fraction.Fraction)
org.apache.commons.math.geometry.CardanEulerSingularityException.<init>($boolean)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.sumsqImpl
org.apache.commons.math.ode.DormandPrince853Integrator.<clinit>()
org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_11
org.apache.commons.math.transform.FastFourierTransformer.transform($org.apache.commons.math.analysis.UnivariateRealFunction$double$double$int)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_12
org.apache.commons.math.stat.descriptive.SummaryStatistics.setGeoMeanImpl($org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_10
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.rank
org.apache.commons.math.stat.inference.TestUtils.tTest($org.apache.commons.math.stat.descriptive.StatisticalSummary$org.apache.commons.math.stat.descriptive.StatisticalSummary$double)
org.apache.commons.math.ode.ContinuousOutputModel.finalTime
org.apache.commons.math.estimation.AbstractEstimator.getJacobianEvaluations()
org.apache.commons.math.fraction.FractionFormat.parseObject($java.lang.String$java.text.ParsePosition)
org.apache.commons.math.analysis.BrentSolver.solve($double$double$double$double$double$double)
org.apache.commons.math.random.EmpiricalDistributionImpl$StreamDataAdapter.computeBinStats($double$double)
org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest($double[]$long[]$double)
org.apache.commons.math.MathException.<clinit>()
org.apache.commons.math.stat.inference.TTestImpl.t($double$org.apache.commons.math.stat.descriptive.StatisticalSummary)
org.apache.commons.math.stat.inference.OneWayAnovaImpl$AnovaStats.dfwg
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setPercentileImpl($org.apache.commons.math.stat.descriptive.UnivariateStatistic)
org.apache.commons.math.analysis.NewtonSolver.solve($double$double$double)
org.apache.commons.math.stat.descriptive.SummaryStatistics.minImpl
org.apache.commons.math.ode.AbstractStepInterpolator.storeTime($double)
org.apache.commons.math.util.MathUtils.subAndCheck($long$long)
org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.clear()
org.apache.commons.math.complex.Complex.divide($org.apache.commons.math.complex.Complex)
org.apache.commons.math.distribution.PoissonDistributionImpl.cumulativeProbability($int)
org.apache.commons.math.complex.Complex.exp()
org.apache.commons.math.fraction.Fraction.abs()
org.apache.commons.math.ode.SwitchingFunctionsHandler.stepAccepted($double$double[])
org.apache.commons.math.ode.SwitchState.maxIterationCount
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.equals($java.lang.Object)
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getStandardDeviation()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue($double)
org.apache.commons.math.stat.inference.TTestImpl.t($double$double[])
org.apache.commons.math.distribution.AbstractDistribution.cumulativeProbability($double$double)
org.apache.commons.math.analysis.BisectionSolver.solve($double$double)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.v
org.apache.commons.math.ode.SwitchState.access$000($org.apache.commons.math.ode.SwitchState)
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.getValues()
org.apache.commons.math.util.MathUtils.round($double$int)
org.apache.commons.math.stat.StatUtils.max($double[])
org.apache.commons.math.random.EmpiricalDistributionImpl$ArrayDataAdapter.computeStats()
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.costRelativeTolerance
org.apache.commons.math.ode.DormandPrince853StepInterpolator.storeTime($double)
org.apache.commons.math.stat.StatUtils.sum($double[])
org.apache.commons.math.optimization.DirectSearchOptimizer$1.compare($java.lang.Object$java.lang.Object)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.d
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getGeometricMean()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean()
org.apache.commons.math.ode.AbstractStepInterpolator.getCurrentTime()
org.apache.commons.math.stat.descriptive.SummaryStatistics.setSumsqImpl($org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic)
org.apache.commons.math.complex.Complex.<clinit>()
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.toString()
org.apache.commons.math.MathException.class$java$lang$Throwable
org.apache.commons.math.stat.inference.OneWayAnovaImpl$AnovaStats.F
org.apache.commons.math.ode.GraggBulirschStoerIntegrator.<init>($double$double$double$double)
org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.addSwitchingFunction($org.apache.commons.math.ode.SwitchingFunction$double$double$int)
org.apache.commons.math.estimation.AbstractEstimator.getCovariances($org.apache.commons.math.estimation.EstimationProblem)
org.apache.commons.math.stat.inference.TestUtils.tTest($double[]$double[])
org.apache.commons.math.estimation.AbstractEstimator.costEvaluations
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSumsqImpl()
org.apache.commons.math.ode.ContinuousOutputModel.forward
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setMinImpl($org.apache.commons.math.stat.descriptive.UnivariateStatistic)
org.apache.commons.math.transform.FastCosineTransformer.transform2($double[])
org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue($double)
org.apache.commons.math.stat.StatUtils.product($double[])
org.apache.commons.math.util.MathUtils.subAndCheck($int$int)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.<init>($org.apache.commons.math.ode.DormandPrince853StepInterpolator)
org.apache.commons.math.analysis.LaguerreSolver.solveAll($org.apache.commons.math.complex.Complex[]$org.apache.commons.math.complex.Complex)
org.apache.commons.math.util.MathUtils.sign($float)
org.apache.commons.math.transform.FastFourierTransformer.inversetransform2($double[])
org.apache.commons.math.stat.descriptive.moment.Variance.evaluate($double[]$int$int)
org.apache.commons.math.transform.FastFourierTransformer.transform2($org.apache.commons.math.analysis.UnivariateRealFunction$double$double$int)
org.apache.commons.math.complex.Complex.atan()
org.apache.commons.math.ode.DerivativeException.<init>($java.lang.Throwable)
org.apache.commons.math.analysis.MullerSolver.solve2($double$double)
org.apache.commons.math.util.MathUtils.factorial($int)
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.getMinReduction()
org.apache.commons.math.analysis.LaguerreSolver.solve($org.apache.commons.math.complex.Complex[]$org.apache.commons.math.complex.Complex)
org.apache.commons.math.analysis.MullerSolver.solve($double$double$double)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance($java.lang.Class)
org.apache.commons.math.util.MathUtils.log($double$double)
org.apache.commons.math.distribution.GammaDistributionImpl.inverseCumulativeProbability($double)
org.apache.commons.math.ode.MidpointStepInterpolator.<init>($org.apache.commons.math.ode.MidpointStepInterpolator)
org.apache.commons.math.util.MathUtils.indicator($double)
org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTestDataSetsComparison($long[]$long[])
org.apache.commons.math.fraction.Fraction.negate()
org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare($double[]$long[])
org.apache.commons.math.ode.IntegratorException.<init>($java.lang.String$java.lang.Object[])
org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.writeExternal($java.io.ObjectOutput)
org.apache.commons.math.estimation.AbstractEstimator.getCostEvaluations()
org.apache.commons.math.ode.StepInterpolator.copy()
org.apache.commons.math.ode.RungeKuttaIntegrator.addSwitchingFunction($org.apache.commons.math.ode.SwitchingFunction$double$double$int)
org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareDataSetsComparison($long[]$long[])
org.apache.commons.math.fraction.ProperFractionFormat.parse($java.lang.String$java.text.ParsePosition)
org.apache.commons.math.complex.ComplexUtils.asin($org.apache.commons.math.complex.Complex)
org.apache.commons.math.stat.Frequency.getCumPct($char)
org.apache.commons.math.util.MathUtils.sign($long)
org.apache.commons.math.ode.ContinuousOutputModel.initialTime
org.apache.commons.math.optimization.PointCostPair.getPoint()
org.apache.commons.math.ode.ContinuousOutputModel.handleStep($org.apache.commons.math.ode.StepInterpolator$boolean)
org.apache.commons.math.transform.FastFourierTransformer.inversetransform($org.apache.commons.math.analysis.UnivariateRealFunction$double$double$int)
org.apache.commons.math.stat.descriptive.moment.VectorialMean.increment($double[])
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.getOrder()
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setParRelativeTolerance($double)
org.apache.commons.math.random.ValueServer.computeDistribution()
org.apache.commons.math.ode.DormandPrince853Integrator.staticC
org.apache.commons.math.ode.DormandPrince853Integrator.staticB
org.apache.commons.math.ode.DormandPrince853Integrator.staticA
org.apache.commons.math.transform.FastCosineTransformer.transform2($org.apache.commons.math.analysis.UnivariateRealFunction$double$double$int)
org.apache.commons.math.ode.SwitchState$1.value($double)
org.apache.commons.math.stat.inference.TTestImpl.tTest($double$org.apache.commons.math.stat.descriptive.StatisticalSummary)
org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate($org.apache.commons.math.ode.FirstOrderDifferentialEquations$double$double[]$double$double[])
org.apache.commons.math.estimation.Estimator.getCovariances($org.apache.commons.math.estimation.EstimationProblem)
org.apache.commons.math.complex.ComplexUtils.pow($org.apache.commons.math.complex.Complex$org.apache.commons.math.complex.Complex)
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate($org.apache.commons.math.estimation.EstimationProblem)
org.apache.commons.math.stat.regression.SimpleRegression.getSignificance()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.percentileImpl
org.apache.commons.math.geometry.Rotation.getAngles($org.apache.commons.math.geometry.RotationOrder)
org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance($java.lang.Class)
org.apache.commons.math.stat.inference.TestUtils.t($org.apache.commons.math.stat.descriptive.StatisticalSummary$org.apache.commons.math.stat.descriptive.StatisticalSummary)
org.apache.commons.math.ode.HighamHall54Integrator.staticA
org.apache.commons.math.ode.HighamHall54Integrator.staticB
org.apache.commons.math.ode.HighamHall54Integrator.staticC
org.apache.commons.math.ode.RungeKuttaIntegrator.getCurrentSignedStepsize()
org.apache.commons.math.ode.AbstractStepInterpolator.finalizeStep()
org.apache.commons.math.ode.HighamHall54Integrator.staticE
org.apache.commons.math.MathException.getPattern()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.<init>($int)
org.apache.commons.math.ode.RungeKuttaIntegrator.setStepHandler($org.apache.commons.math.ode.StepHandler)
org.apache.commons.math.MaxIterationsExceededException.<init>($int$java.lang.String$java.lang.Object[])
org.apache.commons.math.util.MathUtils.indicator($long)
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.permutation
org.apache.commons.math.ode.SwitchingFunctionsHandler.initialized
org.apache.commons.math.MaxIterationsExceededException.<init>($int)
org.apache.commons.math.stat.inference.TestUtils.homoscedasticTTest($double[]$double[])
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSkewness()
org.apache.commons.math.ode.GillIntegrator.<clinit>()
org.apache.commons.math.analysis.SimpsonIntegrator.integrate($double$double)
org.apache.commons.math.stat.inference.ChiSquareTestImpl.distribution
org.apache.commons.math.ode.SwitchState.g0
org.apache.commons.math.MathConfigurationException.<init>($java.lang.String$java.lang.Object[]$java.lang.Throwable)
org.apache.commons.math.distribution.HypergeometricDistributionImpl.cumulativeProbability($int)
org.apache.commons.math.analysis.BisectionSolver.solve($double$double$double)
org.apache.commons.math.special.Beta.regularizedBeta($double$double$double$double)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSumImpl()
org.apache.commons.math.distribution.HypergeometricDistributionImpl.probability($int)
org.apache.commons.math.complex.ComplexUtils.sqrt($org.apache.commons.math.complex.Complex)
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.parRelativeTolerance
org.apache.commons.math.stat.descriptive.SummaryStatistics.getVarianceImpl()
org.apache.commons.math.ode.AbstractStepInterpolator.<init>($org.apache.commons.math.ode.AbstractStepInterpolator)
org.apache.commons.math.util.ContinuedFraction.evaluate($double$double$int)
org.apache.commons.math.stat.StatUtils.min($double[]$int$int)
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setOrthoTolerance($double)
org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve($org.apache.commons.math.analysis.UnivariateRealFunction$double$double)
org.apache.commons.math.stat.StatUtils.sumLog($double[])
org.apache.commons.math.transform.FastFourierTransformer.fft($double[]$boolean)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.reinitialize($org.apache.commons.math.ode.FirstOrderDifferentialEquations$double[]$double[][]$boolean)
org.apache.commons.math.fraction.Fraction.getReducedFraction($int$int)
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.prototype
org.apache.commons.math.stat.descriptive.SummaryStatistics.max
org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes($org.apache.commons.math.optimization.CostFunction$int$org.apache.commons.math.optimization.ConvergenceChecker$double[]$double[])
org.apache.commons.math.stat.descriptive.SummaryStatistics.getN()
org.apache.commons.math.estimation.AbstractEstimator.residuals
org.apache.commons.math.fraction.Fraction.addSub($org.apache.commons.math.fraction.Fraction$boolean)
org.apache.commons.math.ode.HighamHall54Integrator.estimateError($double[][]$double[]$double[]$double)
org.apache.commons.math.complex.Complex.INF
org.apache.commons.math.complex.ComplexUtils.exp($org.apache.commons.math.complex.Complex)
org.apache.commons.math.optimization.DirectSearchOptimizer.replaceWorstPoint($org.apache.commons.math.optimization.PointCostPair)
org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMean
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.getStandardDeviation()
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.safety
org.apache.commons.math.util.TransformerMap.transform($java.lang.Object)
org.apache.commons.math.util.MathUtils.cosh($double)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setWindowSize($int)
org.apache.commons.math.ode.EulerIntegrator.<init>($double)
org.apache.commons.math.estimation.GaussNewtonEstimator.estimate($org.apache.commons.math.estimation.EstimationProblem)
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.estimateError($double[][]$double[]$double[]$double)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.meanImpl
org.apache.commons.math.ConvergenceException.<init>($java.lang.Throwable)
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.addValue($double)
org.apache.commons.math.distribution.PoissonDistributionImpl.normalApproximateProbability($int)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMax()
org.apache.commons.math.stat.inference.TestUtils.chiSquare($double[]$long[])
org.apache.commons.math.ConvergenceException.<init>($java.lang.String$java.lang.Object[]$java.lang.Throwable)
org.apache.commons.math.stat.Frequency.getCumFreq($long)
org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability($double)
org.apache.commons.math.stat.descriptive.SummaryStatistics.variance
org.apache.commons.math.ode.DormandPrince853Integrator.<init>($double$double$double$double)
org.apache.commons.math.stat.inference.TTestImpl.tTest($org.apache.commons.math.stat.descriptive.StatisticalSummary$org.apache.commons.math.stat.descriptive.StatisticalSummary)
org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.<init>($double)
org.apache.commons.math.util.MathUtils.binomialCoefficientDouble($int$int)
org.apache.commons.math.stat.inference.TTestImpl.tTest($double$org.apache.commons.math.stat.descriptive.StatisticalSummary$double)
org.apache.commons.math.util.MathUtils.sinh($double)
org.apache.commons.math.optimization.MultiDirectional.simplex
org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.<init>()
org.apache.commons.math.ode.DummyStepHandler.instance
org.apache.commons.math.stat.StatUtils.mean($double[])
org.apache.commons.math.stat.descriptive.SummaryStatistics.<init>()
org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.hashCode()
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.diagR
org.apache.commons.math.ode.IntegratorException.<init>($java.lang.Throwable)
org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.getCurrentStepStart()
org.apache.commons.math.complex.ComplexUtils.cosh($org.apache.commons.math.complex.Complex)
org.apache.commons.math.estimation.AbstractEstimator.rows
org.apache.commons.math.distribution.NormalDistributionImpl.cumulativeProbability($double)
org.apache.commons.math.FunctionEvaluationException.<init>($double$java.lang.String$java.lang.Object[])
org.apache.commons.math.complex.Complex.subtract($org.apache.commons.math.complex.Complex)
org.apache.commons.math.stat.inference.ChiSquareTestImpl.setDistribution($org.apache.commons.math.distribution.ChiSquaredDistribution)
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.beta
org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.doCopy()
org.apache.commons.math.stat.inference.TestUtils.tTest($double$org.apache.commons.math.stat.descriptive.StatisticalSummary$double)
org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLogImpl
org.apache.commons.math.estimation.AbstractEstimator.initializeEstimate($org.apache.commons.math.estimation.EstimationProblem)
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.c
org.apache.commons.math.FunctionEvaluationException.<init>($double$java.lang.Throwable)
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.b
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.a
org.apache.commons.math.stat.Frequency$NaturalComparator.<init>($org.apache.commons.math.stat.Frequency$org.apache.commons.math.stat.Frequency$1)
org.apache.commons.math.transform.FastCosineTransformer.inversetransform($org.apache.commons.math.analysis.UnivariateRealFunction$double$double$int)
org.apache.commons.math.MathException.arguments
org.apache.commons.math.transform.FastFourierTransformer.inversetransform2($org.apache.commons.math.analysis.UnivariateRealFunction$double$double$int)
org.apache.commons.math.stat.descriptive.SummaryStatistics.getMeanImpl()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSortedValues()
org.apache.commons.math.stat.inference.TestUtils.t($double[]$double[])
org.apache.commons.math.distribution.BinomialDistributionImpl.probability($int)
org.apache.commons.math.ode.DummyStepInterpolator.writeExternal($java.io.ObjectOutput)
org.apache.commons.math.stat.descriptive.SummaryStatistics.getVariance()
org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.getCurrentSignedStepsize()
org.apache.commons.math.distribution.PascalDistributionImpl.probability($int)
org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsq
org.apache.commons.math.geometry.Rotation.orthogonalizeMatrix($double[][]$double)
org.apache.commons.math.stat.inference.OneWayAnovaImpl$AnovaStats.access$000($org.apache.commons.math.stat.inference.OneWayAnovaImpl$AnovaStats)
org.apache.commons.math.complex.Complex.pow($org.apache.commons.math.complex.Complex)
org.apache.commons.math.ode.DormandPrince54Integrator.<init>($double$double$double[]$double[])
org.apache.commons.math.random.EmpiricalDistributionImpl$StreamDataAdapter.computeStats()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setVarianceImpl($org.apache.commons.math.stat.descriptive.UnivariateStatistic)
org.apache.commons.math.stat.StatUtils.geometricMean($double[])
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getSummary()
org.apache.commons.math.transform.FastCosineTransformer.inversetransform2($org.apache.commons.math.analysis.UnivariateRealFunction$double$double$int)
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.serialVersionUID
org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean()
org.apache.commons.math.random.EmpiricalDistributionImpl.load($java.io.File)
org.apache.commons.math.distribution.TDistributionImpl.inverseCumulativeProbability($double)
org.apache.commons.math.ode.DummyStepHandler.<clinit>()
org.apache.commons.math.stat.StatUtils.sumSq($double[]$int$int)
org.apache.commons.math.stat.descriptive.SummaryStatistics.setMaxImpl($org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic)
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.getElement($int)
org.apache.commons.math.stat.StatUtils.sumLog($double[]$int$int)
org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLog
org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMeanImpl
org.apache.commons.math.util.MathUtils.roundUnscaled($double$double$int)
org.apache.commons.math.stat.Frequency.getCumPct($long)
org.apache.commons.math.MathException.<init>($java.lang.String$java.lang.Object[]$java.lang.Throwable)
org.apache.commons.math.stat.inference.TestUtils.chiSquare($long[][])
org.apache.commons.math.ode.DormandPrince853Integrator.<init>($double$double$double[]$double[])
org.apache.commons.math.complex.Complex.multiply($org.apache.commons.math.complex.Complex)
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.minReduction
org.apache.commons.math.stat.descriptive.SummaryStatistics.getGeoMeanImpl()
org.apache.commons.math.ode.SwitchState.pendingEvent
org.apache.commons.math.complex.Complex.I
org.apache.commons.math.estimation.AbstractEstimator.setMaxCostEval($int)
org.apache.commons.math.stat.inference.TTestImpl.tTest($double[]$double[])
org.apache.commons.math.ode.DummyStepInterpolator.<init>($org.apache.commons.math.ode.DummyStepInterpolator)
org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve($org.apache.commons.math.analysis.UnivariateRealFunction$double$double$double)
org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.evaluate($double[]$double[]$double)
org.apache.commons.math.stat.inference.ChiSquareTestImpl.<init>($org.apache.commons.math.distribution.ChiSquaredDistribution)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.doCopy()
org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes($org.apache.commons.math.optimization.CostFunction$int$org.apache.commons.math.optimization.ConvergenceChecker$double[]$double[]$int$long)
org.apache.commons.math.stat.Frequency.getCumFreq($int)
org.apache.commons.math.stat.inference.OneWayAnova.anovaPValue($java.util.Collection)
org.apache.commons.math.transform.FastSineTransformer.inversetransform2($org.apache.commons.math.analysis.UnivariateRealFunction$double$double$int)
org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState()
org.apache.commons.math.optimization.PointCostPair.getCost()
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_09
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_06
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_08
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_07
org.apache.commons.math.stat.StatUtils.mean($double[]$int$int)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_01
org.apache.commons.math.fraction.FractionFormat.parse($java.lang.String$java.text.ParsePosition)
org.apache.commons.math.stat.inference.ChiSquareTestImpl.checkArray($long[][])
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.serialVersionUID
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getGeometricMean()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMin()
org.apache.commons.math.distribution.ChiSquaredDistributionImpl.inverseCumulativeProbability($double)
org.apache.commons.math.ode.SwitchState.reset($double$double[])
org.apache.commons.math.analysis.UnivariateRealSolverImpl.verifyBracketing($double$double$org.apache.commons.math.analysis.UnivariateRealFunction)
org.apache.commons.math.estimation.AbstractEstimator.<init>()
org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateSimplex()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.minImpl
org.apache.commons.math.ode.AbstractStepInterpolator.h
org.apache.commons.math.stat.Frequency$NaturalComparator.compare($java.lang.Object$java.lang.Object)
org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setOrderControl($int$double$double)
org.apache.commons.math.stat.descriptive.moment.StandardDeviation.evaluate($double[]$int$int)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.geometricMeanImpl
org.apache.commons.math.stat.inference.TTestImpl.t($double[]$double[])
org.apache.commons.math.stat.descriptive.moment.Variance.evaluate($double[])
org.apache.commons.math.stat.inference.TestUtils.chiSquareDataSetsComparison($long[]$long[])
org.apache.commons.math.complex.Complex.createComplex($double$double)
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.<init>($int)
org.apache.commons.math.stat.StatUtils.min($double[])
org.apache.commons.math.MathException.JDK_SUPPORTS_NESTED
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setKurtosisImpl($org.apache.commons.math.stat.descriptive.UnivariateStatistic)
org.apache.commons.math.random.CorrelatedRandomVectorGenerator.<init>($double[]$org.apache.commons.math.linear.RealMatrix$double$org.apache.commons.math.random.NormalizedRandomGenerator)
org.apache.commons.math.complex.ComplexUtils.acos($org.apache.commons.math.complex.Complex)
org.apache.commons.math.stat.descriptive.SummaryStatistics.meanImpl
org.apache.commons.math.util.MathUtils.indicator($float)
org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.readExternal($java.io.ObjectInput)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getWindowSize()
org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes($org.apache.commons.math.optimization.CostFunction$int$org.apache.commons.math.optimization.ConvergenceChecker)
org.apache.commons.math.ode.SwitchState.pendingEventTime
org.apache.commons.math.stat.inference.OneWayAnovaImpl$AnovaStats.<init>($int$int$double)
org.apache.commons.math.random.NotPositiveDefiniteMatrixException.<init>()
org.apache.commons.math.ode.ContinuousOutputModel.locatePoint($double$org.apache.commons.math.ode.StepInterpolator)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_13
org.apache.commons.math.ode.SwitchState.t0
org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes($org.apache.commons.math.optimization.CostFunction$int$org.apache.commons.math.optimization.ConvergenceChecker$double[][]$int$long)
org.apache.commons.math.util.MathUtils.binomialCoefficientLog($int$int)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_12
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_14
org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime($double)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_11
org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_10
org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumImpl()
org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket($org.apache.commons.math.analysis.UnivariateRealFunction$double$double$double)
org.apache.commons.math.ode.DummyStepHandler.getInstance()
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getSumsq()
org.apache.commons.math.random.EmpiricalDistributionImpl.load($java.net.URL)
org.apache.commons.math.ode.RungeKuttaIntegrator.<init>($double[]$double[][]$double[]$org.apache.commons.math.ode.RungeKuttaStepInterpolator$double)
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qrDecomposition()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMeanImpl()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setSumImpl($org.apache.commons.math.stat.descriptive.UnivariateStatistic)
org.apache.commons.math.distribution.NormalDistributionImpl.inverseCumulativeProbability($double)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.c16
org.apache.commons.math.ode.DummyStepInterpolator.readExternal($java.io.ObjectInput)
org.apache.commons.math.transform.FastSineTransformer.inversetransform($double[])
org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability($double)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.c15
org.apache.commons.math.complex.ComplexUtils.log($org.apache.commons.math.complex.Complex)
org.apache.commons.math.distribution.PascalDistributionImpl.inverseCumulativeProbability($double)
org.apache.commons.math.complex.Complex.sin()
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qTy($double[])
org.apache.commons.math.ode.RungeKuttaIntegrator.sanityChecks($org.apache.commons.math.ode.FirstOrderDifferentialEquations$double$double[]$double$double[])
org.apache.commons.math.optimization.MultiDirectional.iterateSimplex()
org.apache.commons.math.ode.DormandPrince853StepInterpolator.c14
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getValues()
org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaPValue($java.util.Collection)
org.apache.commons.math.ode.GillIntegrator.<init>($double)
org.apache.commons.math.util.MathUtils.round($double$int$int)
org.apache.commons.math.stat.inference.TestUtils.homoscedasticTTest($double[]$double[]$double)
org.apache.commons.math.random.EmpiricalDistributionImpl.load($double[])
org.apache.commons.math.optimization.CostException.<init>($java.lang.Throwable)
org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic.evaluate($double[])
org.apache.commons.math.stat.inference.OneWayAnovaImpl.<init>()
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.getN()
org.apache.commons.math.MathException.getMessage($java.util.Locale)
org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.<init>($double$double$double[]$double[])
org.apache.commons.math.ode.RungeKuttaStepInterpolator.readExternal($java.io.ObjectInput)
org.apache.commons.math.MathConfigurationException.<init>($java.lang.Throwable)
org.apache.commons.math.geometry.NotARotationMatrixException.<init>($java.lang.String$java.lang.String[])
org.apache.commons.math.random.ValueServer.computeDistribution($int)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getGeometricMeanImpl()
org.apache.commons.math.estimation.GaussNewtonEstimator.steadyStateThreshold
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.lmPar
org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.equals($java.lang.Object)
org.apache.commons.math.MessagesResources_fr.<clinit>()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.<init>()
org.apache.commons.math.ode.EmbeddedRungeKuttaIntegrator.getSafety()
org.apache.commons.math.stat.descriptive.SummaryStatistics.setMeanImpl($org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic)
org.apache.commons.math.util.MathUtils.hash($double)
org.apache.commons.math.estimation.AbstractEstimator.measurements
org.apache.commons.math.estimation.AbstractEstimator.updateJacobian()
org.apache.commons.math.stat.inference.TestUtils.chiSquareTest($double[]$long[]$double)
org.apache.commons.math.special.Erf.erf($double)
org.apache.commons.math.analysis.LaguerreSolver.solveAll($double[]$double)
org.apache.commons.math.ode.SwitchState.stop()
org.apache.commons.math.complex.Complex.acos()
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.setWindowSize($int)
org.apache.commons.math.optimization.DirectSearchOptimizer.getMinima()
org.apache.commons.math.analysis.LaguerreSolver.solve($double$double)
org.apache.commons.math.transform.FastFourierTransformer.transform($double[])
org.apache.commons.math.util.MathUtils.round($float$int)
org.apache.commons.math.stat.inference.TTestImpl.homoscedasticT($double[]$double[])
org.apache.commons.math.complex.Complex.equals($java.lang.Object)
org.apache.commons.math.estimation.AbstractEstimator.getChiSquare($org.apache.commons.math.estimation.EstimationProblem)
org.apache.commons.math.MathException.cachedResources
org.apache.commons.math.ode.GraggBulirschStoerIntegrator.denseOutput
org.apache.commons.math.stat.descriptive.SummaryStatistics.maxImpl
org.apache.commons.math.ode.SwitchingFunctionsHandler.evaluateStep($org.apache.commons.math.ode.StepInterpolator)
org.apache.commons.math.stat.inference.OneWayAnovaImpl$AnovaStats.dfbg
org.apache.commons.math.complex.ComplexUtils.tan($org.apache.commons.math.complex.Complex)
org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsqImpl
org.apache.commons.math.complex.Complex.tanh()
org.apache.commons.math.ode.DormandPrince54Integrator.<clinit>()
org.apache.commons.math.complex.ComplexUtils.atan($org.apache.commons.math.complex.Complex)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.maxImpl
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getMin()
org.apache.commons.math.ode.RungeKuttaIntegrator.getCurrentStepStart()
org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.initializeStep($org.apache.commons.math.ode.FirstOrderDifferentialEquations$boolean$int$double[]$double$double[]$double[]$double[]$double[])
org.apache.commons.math.transform.FastCosineTransformer.inversetransform($double[])
org.apache.commons.math.ode.RungeKuttaIntegrator.stepStart
org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.resetInternalState()
org.apache.commons.math.ode.HighamHall54Integrator.<init>($double$double$double$double)
org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest($org.apache.commons.math.stat.descriptive.StatisticalSummary$org.apache.commons.math.stat.descriptive.StatisticalSummary)
org.apache.commons.math.util.MathUtils.binomialCoefficient($int$int)
org.apache.commons.math.estimation.GaussNewtonEstimator.convergence
org.apache.commons.math.distribution.HypergeometricDistributionImpl.innerCumulativeProbability($int$int$int$int$int$int)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_01
org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes($org.apache.commons.math.optimization.CostFunction$int$org.apache.commons.math.optimization.ConvergenceChecker$org.apache.commons.math.random.RandomVectorGenerator)
org.apache.commons.math.fraction.Fraction.reduce()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setMaxImpl($org.apache.commons.math.stat.descriptive.UnivariateStatistic)
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVarianceImpl()
org.apache.commons.math.complex.Complex.add($org.apache.commons.math.complex.Complex)
org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_08
org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_09
org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_06
org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_07
org.apache.commons.math.fraction.Fraction.subtract($org.apache.commons.math.fraction.Fraction)
org.apache.commons.math.stat.Frequency.getCumFreq($char)
org.apache.commons.math.MathException.<init>($java.lang.Throwable)
org.apache.commons.math.complex.Complex.cosh()
org.apache.commons.math.optimization.DirectSearchOptimizer.f
org.apache.commons.math.ode.ContinuousOutputModel.append($org.apache.commons.math.ode.ContinuousOutputModel)
org.apache.commons.math.stat.descriptive.SummaryStatistics.setVarianceImpl($org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic)
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getMean()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance()
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSkewnessImpl()
org.apache.commons.math.special.Beta.regularizedBeta($double$double$double$int)
org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator.doCopy()
======================================================
======================================================
ALL TESTS TO RUN : 


org.apache.commons.math.complex.ComplexUtilsTest.testAtanNull()
org.apache.commons.math.random.EmpiricalDistributionTest.testSerialization()
org.apache.commons.math.ode.DormandPrince54IntegratorTest.testVariableSteps()
org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveNull()
org.apache.commons.math.special.GammaTest.testRegularizedGammaPositivePositive()
org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testDecreasingSteps()
org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveNoRoot()
org.apache.commons.math.stat.inference.OneWayAnovaTest.testAnovaTest()
org.apache.commons.math.complex.ComplexTest.testTanhCritical()
org.apache.commons.math.ode.DormandPrince853IntegratorTest.testVariableSteps()
org.apache.commons.math.stat.descriptive.ListUnivariateImpl.clear()
org.apache.commons.math.ode.EulerIntegratorTest.suite()
org.apache.commons.math.ode.HighamHall54IntegratorTest.testMinStep()
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest.class$($java.lang.String)
org.apache.commons.math.analysis.NevilleInterpolatorTest.testExpm1Function()
org.apache.commons.math.special.GammaTest.testRegularizedGammaNanPositive()
org.apache.commons.math.ode.EulerStepInterpolatorTest.testInterpolationInside()
org.apache.commons.math.complex.ComplexTest.testSqrtRealNegative()
org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest$1.requiresDenseOutput()
org.apache.commons.math.random.RandomDataTest.testNextSecureHex()
org.apache.commons.math.ode.MidpointIntegratorTest.suite()
org.apache.commons.math.complex.ComplexTest.testDivide()
org.apache.commons.math.stat.inference.OneWayAnovaTest.suite()
org.apache.commons.math.random.RandomDataTest.testNextSecureInt()
org.apache.commons.math.stat.FrequencyTest.testCounts()
org.apache.commons.math.util.DefaultTransformerTest.testTransformObject()
org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructor()
org.apache.commons.math.complex.ComplexTest.testCosNaN()
org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateSin()
org.apache.commons.math.ode.HighamHall54IntegratorTest.testSanityChecks()
org.apache.commons.math.stat.StatUtilsTest.testArrayIndexConditions()
org.apache.commons.math.distribution.HypergeometricDistributionTest.testMoreLargeValues()
org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest$VariableStepHandler.handleStep($org.apache.commons.math.ode.StepInterpolator$boolean)
org.apache.commons.math.ode.DormandPrince853IntegratorTest.testNullIntervalCheck()
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest.suite()
org.apache.commons.math.TestUtils.assertContains($org.apache.commons.math.complex.Complex[]$org.apache.commons.math.complex.Complex$double)
org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonUnEqualCounts()
org.apache.commons.math.fraction.FractionFormatTest.testFormat()
org.apache.commons.math.complex.ComplexUtilsTest.testlogNull()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsAbstractTest.testStats()
org.apache.commons.math.fraction.FractionTest.testEqualsAndHashCode()
org.apache.commons.math.ode.EulerStepInterpolatorTest.testNoReset()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest.<init>($java.lang.String)
org.apache.commons.math.transform.FastCosineTransformerTest.testParameters()
org.apache.commons.math.random.RandomDataTest.testNextPermutation()
org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.testSerialization()
org.apache.commons.math.distribution.HypergeometricDistributionTest.testLargeValues()
org.apache.commons.math.special.BetaTest.testRegularizedBetaNegativePositivePositive()
org.apache.commons.math.complex.ComplexUtilsTest.testSinhInf()
org.apache.commons.math.TestUtils.assertContains($java.lang.String$org.apache.commons.math.complex.Complex[]$org.apache.commons.math.complex.Complex$double)
org.apache.commons.math.complex.ComplexUtilsTest.testAtan()
org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testUnstableDerivative()
org.apache.commons.math.ode.EulerIntegratorTest.testBigStep()
org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testRedundantEquations()
org.apache.commons.math.complex.ComplexTest.testEqualsSame()
org.apache.commons.math.random.EmpiricalDistributionTest.testNexFail()
org.apache.commons.math.estimation.MinpackTest.testMinpackFreudensteinRoth()
org.apache.commons.math.optimization.NelderMeadTest.testPowell()
org.apache.commons.math.estimation.MinpackTest.testMinpackLinearRank1ZeroColsAndRows()
org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextInt()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.createDescriptiveStatistics()
org.apache.commons.math.ode.GillIntegratorTest.testBigStep()
org.apache.commons.math.ode.HighamHall54IntegratorTest.testIncreasingTolerance()
org.apache.commons.math.analysis.BisectionSolverTest.testSinZero()
org.apache.commons.math.complex.ComplexTest.testLog()
org.apache.commons.math.ode.HighamHall54IntegratorTest$3.resetState($double$double[])
org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testControlParameters()
org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareIndependence()
org.apache.commons.math.special.GammaTest.testRegularizedGammaZeroPositive()
org.apache.commons.math.estimation.MinpackTest.testMinpackOsborne1()
org.apache.commons.math.stat.StatUtilsTest.testMin()
org.apache.commons.math.MathExceptionTest.testConstructorPatternArguments()
org.apache.commons.math.random.EmpiricalDistributionTest.testNext()
org.apache.commons.math.util.MathUtilsTest.testSignFloat()
org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testBasicStats()
org.apache.commons.math.random.RandomDataTest.testNextUniform()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSetterInjection()
org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBracketSin()
org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction2()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testRedundantEquations()
org.apache.commons.math.ode.DormandPrince853IntegratorTest.suite()
org.apache.commons.math.MathConfigurationExceptionTest.testConstructorCause()
org.apache.commons.math.complex.ComplexUtilsTest.testTanhCritical()
org.apache.commons.math.ode.FirstOrderConverterTest.integrateWithSpecifiedStep($double$double$double$double)
org.apache.commons.math.complex.ComplexTest.testConstructor()
org.apache.commons.math.analysis.RombergIntegratorTest.testParameters()
org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testDensities()
org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testDimensionCheck()
org.apache.commons.math.complex.ComplexUtilsTest.testCosNaN()
org.apache.commons.math.distribution.NormalDistributionTest.testSetMean()
org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyDensities()
org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf()
org.apache.commons.math.complex.ComplexUtilsTest.testpowNull()
org.apache.commons.math.analysis.SimpsonIntegratorTest.testQuinticFunction()
org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonEqualCounts()
org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest$1.<init>($org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest)
org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest$badPercentile.<init>()
org.apache.commons.math.complex.ComplexUtilsTest.testSqrt1zNaN()
org.apache.commons.math.random.RandomDataTest.findPerm($int[][]$int[])
org.apache.commons.math.ode.DormandPrince853IntegratorTest.testMinStep()
org.apache.commons.math.fraction.FractionTest.testConstructorDouble()
org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate0()
org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyCumulativeProbabilities()
org.apache.commons.math.complex.ComplexTest.testSqrtNaN()
org.apache.commons.math.special.ErfTest.testErf3291()
org.apache.commons.math.complex.ComplexTest.testEqualsImaginaryDifference()
org.apache.commons.math.complex.ComplexTest.testConjugate()
org.apache.commons.math.fraction.FractionTest.testMultiply()
org.apache.commons.math.ode.GillIntegratorTest.testDecreasingSteps()
org.apache.commons.math.util.MathUtilsTest.testMulAndCheckLongFailure($long$long)
org.apache.commons.math.random.ValueServerTest.testNextDigestFail()
org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic()
org.apache.commons.math.stat.inference.ChiSquareFactoryTest.<init>($java.lang.String)
org.apache.commons.math.complex.ComplexUtilsTest.testAtanNaN()
org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testConsistency()
org.apache.commons.math.stat.CertifiedDataTest.testDescriptiveStatistics()
org.apache.commons.math.fraction.FractionFormatTest.testParseInteger()
org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHomoscedastic()
org.apache.commons.math.complex.ComplexTest.testTan()
org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArgumentsCause()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsAbstractTest.testAddValue()
org.apache.commons.math.util.MathUtilsTest.testCosh()
org.apache.commons.math.random.UniformRandomGeneratorTest.testMeanAndStandardDeviation()
org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testCumulativeProbabilities()
org.apache.commons.math.stat.descriptive.SummaryStatisticsTest$sumMean.incrementAll($double[]$int$int)
org.apache.commons.math.ode.GillIntegratorTest$KeplerStepHandler.handleStep($org.apache.commons.math.ode.StepInterpolator$boolean)
org.apache.commons.math.util.MathUtilsTest.testRoundDouble()
org.apache.commons.math.util.MathUtilsTest.testNextAfterSpecialCases()
org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.<init>($java.lang.String)
org.apache.commons.math.analysis.BisectionSolverTest.testQuinticZero()
org.apache.commons.math.complex.ComplexUtilsTest.testAcos()
org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest$1.reset()
org.apache.commons.math.ode.HighamHall54IntegratorTest.testSwitchingFunctionsError()
org.apache.commons.math.random.EmpiricalDistributionTest.testGridTooFine()
org.apache.commons.math.random.EmpiricalDistributionTest.verifySame($org.apache.commons.math.random.EmpiricalDistribution$org.apache.commons.math.random.EmpiricalDistribution)
org.apache.commons.math.estimation.GaussNewtonEstimatorTest$Circle.getUnboundParameters()
org.apache.commons.math.transform.FastSineTransformerTest.testParameters()
org.apache.commons.math.util.DefaultTransformerTest.testTransformNull()
org.apache.commons.math.estimation.MinpackTest.testMinpackBard()
org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareIndependence()
org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testParameters()
org.apache.commons.math.random.ValueServerTest.testNextDigest()
org.apache.commons.math.stat.FrequencyTest.testToString()
org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveAccuracyNull()
org.apache.commons.math.util.MathUtilsTest.testSubAndCheck()
org.apache.commons.math.complex.ComplexUtilsTest.testPow()
org.apache.commons.math.util.MathUtilsTest.testSubAndCheckErrorMessage()
org.apache.commons.math.special.BetaTest.testRegularizedBetaZeroPositivePositive()
org.apache.commons.math.util.MathUtilsTest.testRoundFloat()
org.apache.commons.math.fraction.FractionTest.testConstructor()
org.apache.commons.math.stat.inference.OneWayAnovaTest.testAnovaPValue()
org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail()
org.apache.commons.math.analysis.SimpsonIntegratorTest.testSinFunction()
org.apache.commons.math.util.DefaultTransformerTest.testTransformInteger()
org.apache.commons.math.distribution.NormalDistributionTest.verifyQuantiles()
org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testSetterInjection()
org.apache.commons.math.ode.DummyStepInterpolatorTest.testSerialization()
org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp()
org.apache.commons.math.estimation.MinpackTest.testMinpackJennrichSampson()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testPercentileSetter()
org.apache.commons.math.complex.ComplexTest.testDivideNaNInf()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest$Circle$PointModel.getTheoreticalValue()
org.apache.commons.math.estimation.MinpackTest.testMinpackMeyer()
org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateFullSample()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest$LinearMeasurement.getPartial($org.apache.commons.math.estimation.EstimatedParameter)
org.apache.commons.math.complex.ComplexTest.testEqualsNaN()
org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries()
org.apache.commons.math.util.MathUtilsTest.binomialCoefficient($int$int)
org.apache.commons.math.util.DoubleArrayAbstractTest.testAddElementRolling()
org.apache.commons.math.complex.ComplexUtilsTest.testTanh()
org.apache.commons.math.stat.data.CertifiedDataAbstractTest.loadData()
org.apache.commons.math.util.MathUtilsTest.testSignInt()
org.apache.commons.math.fraction.FractionFormatTest.testFormatImproper()
org.apache.commons.math.complex.ComplexTest.testAddNaN()
org.apache.commons.math.ode.DummyStepInterpolatorTest.suite()
org.apache.commons.math.random.RandomDataTest.testNextSample()
org.apache.commons.math.MaxIterationsExceededExceptionTest.testComplexConstructor()
org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testMismatch()
org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.createSummaryStatistics()
org.apache.commons.math.util.MathUtilsTest.testIndicatorShort()
org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextLong()
org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareLargeTestStatistic()
org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.getMaxError($org.apache.commons.math.ode.FirstOrderIntegrator$org.apache.commons.math.ode.TestProblemAbstract)
org.apache.commons.math.util.MathUtilsTest.testEquals()
org.apache.commons.math.complex.ComplexTest.testSqrtPolar()
org.apache.commons.math.complex.ComplexTest.testpowNull()
org.apache.commons.math.complex.ComplexTest.testTanh()
org.apache.commons.math.complex.ComplexUtilsTest.testCosh()
org.apache.commons.math.complex.ComplexUtilsTest.testTanNaN()
org.apache.commons.math.complex.ComplexUtilsTest.testLogNaN()
org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuinticFunction()
org.apache.commons.math.special.GammaTest.testRegularizedGamma($double$double$double)
org.apache.commons.math.random.EmpiricalDistributionTest.testBinIndexOverflow()
org.apache.commons.math.analysis.NewtonSolverTest.testSerialization()
org.apache.commons.math.ode.DormandPrince54IntegratorTest.testKepler()
org.apache.commons.math.transform.FastCosineTransformerTest.testSinFunction()
org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveSin()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest$Circle$PointModel.getPartial($org.apache.commons.math.estimation.EstimatedParameter)
org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexNaN()
org.apache.commons.math.complex.ComplexTest.testPowNaNExponent()
org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate0()
org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonBadCounts()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest$badPercentile.evaluate($double[]$int$int)
org.apache.commons.math.complex.ComplexUtilsTest.testSqrtRealPositive()
org.apache.commons.math.optimization.NelderMeadTest$ValueChecker.converged($org.apache.commons.math.optimization.PointCostPair[])
org.apache.commons.math.stat.descriptive.SummaryStatisticsTest$sumMean.evaluate($double[]$int$int)
org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinear()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsAbstractTest.testWindowing()
org.apache.commons.math.distribution.ExponentialDistributionTest.testInverseCumulativeProbabilityExtremes()
org.apache.commons.math.stat.StatUtilsTest.testN0andN1Conditions()
org.apache.commons.math.ode.HighamHall54IntegratorTest$KeplerHandler.handleStep($org.apache.commons.math.ode.StepInterpolator$boolean)
org.apache.commons.math.analysis.MonitoredFunction.value($double)
org.apache.commons.math.ode.GillIntegratorTest.testDimensionCheck()
org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testSetterIllegalState()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testIllConditioned()
org.apache.commons.math.complex.ComplexTest.testAtanInf()
org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest$BarTransformer.<init>()
org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testKepler()
org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArguments()
org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyCumulativeProbabilities()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest$Circle$PointModel.getCenterDistance()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest$goodPercentile.evaluate($double[])
org.apache.commons.math.ode.StepNormalizerTest.testBeforeEnd()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsAbstractTest.testProductAndGeometricMean()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest$LinearMeasurement.<init>($double[]$org.apache.commons.math.estimation.EstimatedParameter[]$double)
org.apache.commons.math.ode.StepNormalizerTest.setUp()
org.apache.commons.math.ode.GillStepInterpolatorTest.testSerialization()
org.apache.commons.math.complex.ComplexUtilsTest.testCoshInf()
org.apache.commons.math.stat.inference.ChiSquareTestTest.<init>($java.lang.String)
org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testProductAndGeometricMean()
org.apache.commons.math.stat.inference.TTestTest.suite()
org.apache.commons.math.complex.ComplexUtilsTest.testPowZero()
org.apache.commons.math.fraction.FractionFormatTest.testFormatNegative()
org.apache.commons.math.random.RandomDataTest.testNextGaussian()
org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleTTest()
org.apache.commons.math.ode.HighamHall54StepInterpolatorTest$1.<init>($org.apache.commons.math.ode.HighamHall54StepInterpolatorTest)
org.apache.commons.math.ode.DormandPrince853IntegratorTest.testSwitchingFunctions()
org.apache.commons.math.analysis.PolynomialFunctionTest.testConstants()
org.apache.commons.math.ode.TestProblemHandler.handleStep($org.apache.commons.math.ode.StepInterpolator$boolean)
org.apache.commons.math.complex.ComplexTest.testMultiplyNaN()
org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest$KeplerHandler.handleStep($org.apache.commons.math.ode.StepInterpolator$boolean)
org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testMoreEstimatedParametersSimple()
org.apache.commons.math.ode.DormandPrince54IntegratorTest.suite()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsAbstractTest.testN0andN1Conditions()
org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testSinFunction()
org.apache.commons.math.analysis.TrapezoidIntegratorTest.testSinFunction()
org.apache.commons.math.distribution.GammaDistributionTest.testProbabilities()
org.apache.commons.math.complex.ComplexTest.testAsinNaN()
org.apache.commons.math.estimation.MinpackTest.minpackTest($org.apache.commons.math.estimation.MinpackTest$MinpackFunction$boolean)
org.apache.commons.math.ode.TestProblemHandler.getLastError()
org.apache.commons.math.util.MathUtilsTest.testSignShort()
org.apache.commons.math.distribution.CauchyDistributionTest.testInverseCumulativeProbabilityExtremes()
org.apache.commons.math.analysis.RombergIntegratorTest.testSinFunction()
org.apache.commons.math.util.ContinuedFractionTest.testGoldenRatio()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest$Circle.<init>($double$double)
org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilityExtremes()
org.apache.commons.math.complex.ComplexTest.testPow()
org.apache.commons.math.estimation.MinpackTest.testMinpackKowalikOsborne()
org.apache.commons.math.special.ErfTest.testErf2576()
org.apache.commons.math.complex.ComplexTest.testCoshNaN()
org.apache.commons.math.complex.ComplexUtilsTest.testsinhNull()
org.apache.commons.math.stat.descriptive.SummaryStatisticsAbstractTest.testNaNContracts()
org.apache.commons.math.optimization.NelderMeadTest.testCostExceptions()
org.apache.commons.math.ode.HighamHall54StepInterpolatorTest$1.requiresDenseOutput()
org.apache.commons.math.stat.inference.TTestFactoryTest.setUp()
org.apache.commons.math.analysis.MullerSolverTest.testSinFunction()
org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersSimple()
org.apache.commons.math.complex.ComplexUtilsTest.testExp()
org.apache.commons.math.random.RandomAdaptorTest.<init>($java.lang.String)
org.apache.commons.math.random.RandomDataTest.testNextSecureLong()
org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextBoolean()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest$Circle.getRadius()
org.apache.commons.math.ode.GillIntegratorTest.suite()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsAbstractTest.tstGetSortedValues($double[])
org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testInverseCumulativeProbabilities()
org.apache.commons.math.distribution.WeibullDistributionTest.testInverseCumulativeProbabilityExtremes()
org.apache.commons.math.random.GaussianRandomGeneratorTest.testMeanAndStandardDeviation()
org.apache.commons.math.optimization.MultiDirectionalTest.testRosenbrock()
org.apache.commons.math.ode.GillIntegratorTest.testSmallStep()
org.apache.commons.math.complex.ComplexUtilsTest.testSinNaN()
org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testCumulativeProbabilities()
org.apache.commons.math.util.MathUtilsTest.testAddAndCheck()
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.suite()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest$Circle.access$100($org.apache.commons.math.estimation.GaussNewtonEstimatorTest$Circle)
org.apache.commons.math.ode.MidpointIntegratorTest.testDecreasingSteps()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest$Circle.getPartialRadiusY()
org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testKepler()
org.apache.commons.math.stat.CertifiedDataTest.loadStats($java.lang.String$java.lang.Object)
org.apache.commons.math.complex.ComplexUtilsTest.testSinhNaN()
org.apache.commons.math.analysis.RiddersSolverTest.testParameters()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest$Circle.getX()
org.apache.commons.math.complex.ComplexUtilsTest.testLogZero()
org.apache.commons.math.stat.descriptive.rank.PercentileTest.testNISTExample()
org.apache.commons.math.distribution.GammaDistributionTest.testValue($double$double$double$double)
org.apache.commons.math.stat.descriptive.SummaryStatisticsTest$sumMean.<init>()
org.apache.commons.math.estimation.MinpackTest.testMinpackLinearRank1()
org.apache.commons.math.ode.ContinuousOutputModelTest.buildInterpolator($double$double[]$double)
org.apache.commons.math.complex.ComplexUtilsTest.testTanInf()
org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTrivial()
org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersUnsorted()
org.apache.commons.math.special.ErfTest.testErf0()
org.apache.commons.math.special.BetaTest.testRegularizedBetaPositiveNanPositive()
org.apache.commons.math.geometry.RotationTest.testMatrix()
org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.suite()
org.apache.commons.math.ode.DummyStepInterpolatorTest.testSerializationError()
org.apache.commons.math.random.RandomDataTest.testNextExponential()
org.apache.commons.math.ode.GillIntegratorTest.testUnstableDerivative()
org.apache.commons.math.ode.MidpointIntegratorTest.testBigStep()
org.apache.commons.math.ode.HighamHall54IntegratorTest.suite()
org.apache.commons.math.ode.DormandPrince54IntegratorTest$DP54SmallLastHandler.handleStep($org.apache.commons.math.ode.StepInterpolator$boolean)
org.apache.commons.math.estimation.GaussNewtonEstimatorTest$Circle$PointModel.getPartialDiX()
org.apache.commons.math.analysis.RiddersSolverTest.testQuinticFunction()
org.apache.commons.math.estimation.MinpackTest.testMinpackHelicalValley()
org.apache.commons.math.complex.ComplexTest.testSqrt1zNaN()
org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareLargeTestStatistic()
org.apache.commons.math.stat.inference.TTestTest.<init>($java.lang.String)
org.apache.commons.math.stat.descriptive.rank.PercentileTest.testNullEmpty()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsAbstractTest.<init>($java.lang.String)
org.apache.commons.math.estimation.MinpackTest.testMinpackWatson()
org.apache.commons.math.stat.descriptive.rank.PercentileTest.testHighPercentile()
org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testSanityChecks()
org.apache.commons.math.ode.TestProblemHandler.<init>($org.apache.commons.math.ode.TestProblemAbstract$org.apache.commons.math.ode.FirstOrderIntegrator)
org.apache.commons.math.ode.DummyStepInterpolatorTest.testImpossibleSerialization()
org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getN()
org.apache.commons.math.complex.ComplexTest.testLogNaN()
org.apache.commons.math.random.EmpiricalDistributionTest.testDoubleLoad()
org.apache.commons.math.complex.ComplexTest.testAtan()
org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testTwoSets()
org.apache.commons.math.MathExceptionTest.testConstructor()
org.apache.commons.math.fraction.FractionFormatTest.testParseNegative()
org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testIncreasingTolerance()
org.apache.commons.math.stat.descriptive.SummaryStatisticsAbstractTest.verifySummary($org.apache.commons.math.stat.descriptive.SummaryStatistics$org.apache.commons.math.stat.descriptive.StatisticalSummary)
org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testBigStep()
org.apache.commons.math.complex.ComplexTest.testConstructorNaN()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest$subPercentile.evaluate($double[]$int$int)
org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquare()
org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.suite()
org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testVariableSteps()
org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.suite()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest$LinearProblem.<init>($org.apache.commons.math.estimation.GaussNewtonEstimatorTest$LinearMeasurement[])
org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.<init>($java.lang.String)
org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testConsistency()
org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testBigStep()
org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.suite()
org.apache.commons.math.MathExceptionTest.testSerialization()
org.apache.commons.math.util.MathUtilsTest.testLog()
org.apache.commons.math.special.BetaTest.testRegularizedBetaNanPositivePositive()
org.apache.commons.math.complex.ComplexTest.testAcosNaN()
org.apache.commons.math.special.BetaTest.testRegularizedBeta($double$double$double$double)
org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testMoreEstimatedParametersUnsorted()
org.apache.commons.math.special.GammaTest.testRegularizedGammaPositiveZero()
org.apache.commons.math.linear.RealMatrixImplTest.testEqualsAndHashCode()
org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest$FooTransformer.<init>()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest.suite()
org.apache.commons.math.stat.descriptive.rank.MaxTest.testNaNs()
org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNoDependency()
org.apache.commons.math.stat.CertifiedDataTest.testSummaryStatistics()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsAbstractTest.testSkewAndKurtosis()
org.apache.commons.math.distribution.PoissonDistributionTest.testNormalApproximateProbability()
org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest.testSerialization()
org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest.testSerialization()
org.apache.commons.math.ode.HighamHall54StepInterpolatorTest$1.reset()
org.apache.commons.math.analysis.BrentSolverTest.testBadEndpoints()
org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateThreeSegment()
org.apache.commons.math.complex.ComplexTest.testSinNaN()
org.apache.commons.math.util.MathUtilsTest.testSinh()
org.apache.commons.math.complex.ComplexTest.testEqualsNull()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testTrivial()
org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats()
org.apache.commons.math.complex.ComplexUtilsTest.testSin()
org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues()
org.apache.commons.math.ode.DormandPrince853IntegratorTest.testIncreasingTolerance()
org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testLinearFunction()
org.apache.commons.math.ode.MidpointIntegratorTest.testSmallStep()
org.apache.commons.math.complex.ComplexTest.testConjugateInfiinite()
org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArguments()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsAbstractTest.class$($java.lang.String)
org.apache.commons.math.stat.data.CertifiedDataAbstractTest.getMaximumAbsoluteError()
org.apache.commons.math.estimation.MinpackTest.testMinpackChebyquad()
org.apache.commons.math.stat.descriptive.SummaryStatisticsTest$sumMean.increment($double)
org.apache.commons.math.fraction.FractionFormatTest.testParseProperNegative()
org.apache.commons.math.stat.descriptive.rank.PercentileTest.testPercentile()
org.apache.commons.math.distribution.ExponentialDistributionTest.testCumulativeProbabilityExtremes()
org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSingleton()
org.apache.commons.math.fraction.FractionTest.testGetReducedFraction()
org.apache.commons.math.stat.descriptive.SummaryStatisticsAbstractTest.testSerialization()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsAbstractTest.testNewInstanceClassNull()
org.apache.commons.math.distribution.TDistributionTest.testSmallDf()
org.apache.commons.math.fraction.FractionTest.testDivide()
org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest$1.handleStep($org.apache.commons.math.ode.StepInterpolator$boolean)
org.apache.commons.math.transform.FastFourierTransformerTest.testAdHocData()
org.apache.commons.math.ode.HighamHall54IntegratorTest$2.eventOccurred($double$double[])
org.apache.commons.math.complex.ComplexTest.testTanInf()
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.createSummaryStatistics()
org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testValues()
org.apache.commons.math.util.DefaultTransformerTest.testTransformDouble()
org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest$Circle$PointModel.<init>($org.apache.commons.math.estimation.GaussNewtonEstimatorTest$Circle$double$double)
org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilityExtremes()
org.apache.commons.math.distribution.GammaDistributionTest.testValues()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest$deepMean.evaluate($double[])
org.apache.commons.math.util.MathUtilsTest.testHash()
org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest$1.requiresDenseOutput()
org.apache.commons.math.ode.DormandPrince853IntegratorTest.testUnstableDerivative()
org.apache.commons.math.ode.HighamHall54IntegratorTest.testWrongDerivative()
org.apache.commons.math.stat.descriptive.moment.VarianceTest.populationVariance($double[])
org.apache.commons.math.fraction.FractionTest.testSubtract()
org.apache.commons.math.analysis.BrentSolverTest.testQuinticZero()
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest.<init>($java.lang.String)
org.apache.commons.math.optimization.MultiDirectionalTest$ValueChecker.converged($org.apache.commons.math.optimization.PointCostPair[])
org.apache.commons.math.complex.ComplexUtilsTest.testAsinInf()
org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorArgumentCause()
org.apache.commons.math.random.ValueServerTest.testProperties()
org.apache.commons.math.TestUtils.serializeAndRecover($java.lang.Object)
org.apache.commons.math.complex.ComplexUtilsTest.testExpInf()
org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testPopulation()
org.apache.commons.math.ode.FirstOrderConverterTest.testBigStep()
org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest$1.<init>($org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest)
org.apache.commons.math.special.BetaTest.testRegularizedBetaPositivePositiveNegative()
org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testSkewAndKurtosis()
org.apache.commons.math.geometry.RotationTest.testAngles()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testQRColumnsPermutation()
org.apache.commons.math.ode.DormandPrince54IntegratorTest$KeplerHandler.handleStep($org.apache.commons.math.ode.StepInterpolator$boolean)
org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testSimplistic()
org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction2()
org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.testClone()
org.apache.commons.math.special.GammaTest.testRegularizedGammaPositiveNan()
org.apache.commons.math.distribution.GammaDistributionTest.testProbability($double$double$double$double)
org.apache.commons.math.stat.data.CertifiedDataAbstractTest.testCertifiedValues()
org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.suite()
org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getValues()
org.apache.commons.math.fraction.FractionTest.testCompareTo()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsAbstractTest.createDescriptiveStatistics()
org.apache.commons.math.complex.ComplexTest.testHashCode()
org.apache.commons.math.complex.ComplexUtilsTest.testSinh()
org.apache.commons.math.stat.descriptive.ListUnivariateImpl.addObject($java.lang.Object)
org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction()
org.apache.commons.math.ode.HighamHall54IntegratorTest.testKepler()
org.apache.commons.math.stat.descriptive.ListUnivariateImpl.apply($org.apache.commons.math.stat.descriptive.UnivariateStatistic)
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest$subPercentile.evaluate($double[])
org.apache.commons.math.fraction.FractionFormatTest.testParseInvalid()
org.apache.commons.math.complex.ComplexUtilsTest.testCoshNull()
org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuadraticFunction()
org.apache.commons.math.analysis.LaguerreSolverTest.testLinearFunction()
org.apache.commons.math.estimation.MinpackTest.testMinpackLinearFullRank()
org.apache.commons.math.analysis.MullerSolverTest.testParameters()
org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArgumentsCause()
org.apache.commons.math.complex.ComplexTest.testNegate()
org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.testClone()
org.apache.commons.math.stat.inference.TestUtilsTest.suite()
org.apache.commons.math.ode.EulerStepInterpolatorTest.testInterpolationAtBounds()
org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest$1.handleStep($org.apache.commons.math.ode.StepInterpolator$boolean)
org.apache.commons.math.stat.descriptive.SummaryStatisticsAbstractTest.testN0andN1Conditions()
org.apache.commons.math.random.RandomDataTest.testNextLong()
org.apache.commons.math.complex.ComplexTest.testSinh()
org.apache.commons.math.complex.ComplexUtilsTest.testSqrtPolar()
org.apache.commons.math.util.MathUtilsTest.testMulAndCheck()
org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testN0andN1Conditions()
org.apache.commons.math.ode.DormandPrince54IntegratorTest.testMinStep()
org.apache.commons.math.stat.inference.TTestFactoryTest.<init>($java.lang.String)
org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArgumentsCause()
org.apache.commons.math.complex.ComplexTest.testExpInf()
org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveBadParameters()
org.apache.commons.math.random.RandomDataTest.testNextInt()
org.apache.commons.math.stat.descriptive.SummaryStatisticsTest$sumMean.clear()
org.apache.commons.math.stat.descriptive.SummaryStatisticsAbstractTest.testGetSummary()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest$Circle.access$000($org.apache.commons.math.estimation.GaussNewtonEstimatorTest$Circle)
org.apache.commons.math.complex.ComplexTest.testSqrtRealZero()
org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextFloat()
org.apache.commons.math.analysis.PolynomialFunctionTest.testfirstDerivativeComparison()
org.apache.commons.math.util.MathUtilsTest.testSubAndCheckLongFailure($long$long)
org.apache.commons.math.util.MathUtilsTest.testGcd()
org.apache.commons.math.fraction.FractionFormatTest.testParseInvalidDenominator()
org.apache.commons.math.complex.ComplexUtilsTest.testPolar2Complex()
org.apache.commons.math.stat.descriptive.SummaryStatisticsAbstractTest.testProductAndGeometricMean()
org.apache.commons.math.util.MathUtilsTest.testFactorial()
org.apache.commons.math.complex.ComplexTest.testSqrt1z()
org.apache.commons.math.fraction.FractionTest.testLongValue()
org.apache.commons.math.ode.EulerIntegratorTest.testDimensionCheck()
org.apache.commons.math.stat.inference.TTestTest.testOneSampleT()
org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate1()
org.apache.commons.math.complex.ComplexUtilsTest.testSinInf()
org.apache.commons.math.ode.EulerIntegratorTest.testDecreasingSteps()
org.apache.commons.math.special.GammaTest.testRegularizedGammaPositiveNegative()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testNoDependency()
org.apache.commons.math.complex.ComplexTest.testEqualsClass()
org.apache.commons.math.random.AbstractRandomGeneratorTest.<init>($java.lang.String)
org.apache.commons.math.stat.descriptive.SummaryStatisticsTest$sumMean.evaluate($double[])
org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate1()
org.apache.commons.math.complex.ComplexUtilsTest.testCosNull()
org.apache.commons.math.ode.ContinuousOutputModelTest.checkAppendError($org.apache.commons.math.ode.ContinuousOutputModel$double$double[]$double)
org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.createSummaryStatistics()
org.apache.commons.math.ode.DormandPrince853IntegratorTest$InterpolatingStepHandler.handleStep($org.apache.commons.math.ode.StepInterpolator$boolean)
org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.checkEstimate($org.apache.commons.math.estimation.EstimationProblem$double$int$double$double$double$boolean)
org.apache.commons.math.transform.FastCosineTransformerTest.testAdHocData()
org.apache.commons.math.ode.DormandPrince853IntegratorTest.testKepler()
org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation()
org.apache.commons.math.stat.descriptive.SummaryStatisticsTest$sumMean.incrementAll($double[])
org.apache.commons.math.ode.HighamHall54IntegratorTest$3.g($double$double[])
org.apache.commons.math.fraction.FractionFormatTest.testFormatZero()
org.apache.commons.math.TestUtils.checkSerializedEquality($java.lang.Object)
org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoFailures()
org.apache.commons.math.stat.FrequencyTest.testPcts()
org.apache.commons.math.analysis.NevilleInterpolatorTest.testParameters()
org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateTwoSegment()
org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.class$($java.lang.String)
org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess()
org.apache.commons.math.fraction.FractionTest.testGoldenRatio()
org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest$1.<init>($org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest)
org.apache.commons.math.util.MathUtilsTest.testCoshNaN()
org.apache.commons.math.complex.ComplexTest.testSinhNaN()
org.apache.commons.math.fraction.FractionFormatTest.testParseProper()
org.apache.commons.math.complex.ComplexTest.testAsinInf()
org.apache.commons.math.ode.DormandPrince54IntegratorTest.testIncreasingTolerance()
org.apache.commons.math.random.EmpiricalDistributionTest.testLoad()
org.apache.commons.math.ode.HighamHall54StepInterpolatorTest$1.handleStep($org.apache.commons.math.ode.StepInterpolator$boolean)
org.apache.commons.math.complex.ComplexUtilsTest.altPolar($double$double)
org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.suite()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest$LinearMeasurement.getTheoreticalValue()
org.apache.commons.math.ArgumentOutsideDomainExceptionTest.testConstructor()
org.apache.commons.math.complex.ComplexTest.testPowNaNBase()
org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest$FooTransformer.transform($java.lang.Object)
org.apache.commons.math.ode.GillIntegratorTest.testKepler()
org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfectNegative()
org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function()
org.apache.commons.math.stat.FrequencyTest.testIntegerValues()
org.apache.commons.math.ode.HighamHall54IntegratorTest$2.g($double$double[])
org.apache.commons.math.complex.ComplexTest.testAbsNaN()
org.apache.commons.math.ConvergenceExceptionTest.testConstructor()
org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling()
org.apache.commons.math.complex.ComplexTest.testSqrtImaginaryNegative()
org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic()
org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testMinStep()
org.apache.commons.math.util.MathUtilsTest.testIndicatorByte()
org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testN0andN1Conditions()
org.apache.commons.math.complex.ComplexTest.testSinInf()
org.apache.commons.math.random.RandomDataTest.testNextHex()
org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTwoSets()
org.apache.commons.math.complex.ComplexUtilsTest.testSqrt1zNull()
org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexInf()
org.apache.commons.math.MathExceptionTest.testConstructorPatternArgumentsCause()
org.apache.commons.math.estimation.MinpackTest.testMinpackRosenbrok()
org.apache.commons.math.ode.DummyStepInterpolatorTest.testFixedState()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsAbstractTest.setUp()
org.apache.commons.math.complex.ComplexUtilsTest.testAcosInf()
org.apache.commons.math.distribution.FDistributionTest.testCumulativeProbabilityExtremes()
org.apache.commons.math.ode.ContinuousOutputModelTest.testModelsMerging()
org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testInconsistentEquations()
org.apache.commons.math.stat.inference.TTestTest.testSmallSamples()
org.apache.commons.math.complex.ComplexTest.testTanhInf()
org.apache.commons.math.analysis.NevilleInterpolatorTest.testSinFunction()
org.apache.commons.math.special.BetaTest.testRegularizedBetaPositivePositiveNan()
org.apache.commons.math.ode.EulerStepInterpolatorTest.testSerialization()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testCircleFittingBadInit()
org.apache.commons.math.util.MathUtilsTest.testIndicatorDouble()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsAbstractTest.testWindowSize()
org.apache.commons.math.stat.inference.OneWayAnovaTest.testAnovaFValue()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest$deepMean.<init>()
org.apache.commons.math.complex.ComplexUtilsTest.testSqrtInf()
org.apache.commons.math.analysis.SplineInterpolatorTest.verifyInterpolation($org.apache.commons.math.analysis.UnivariateRealFunction$double[]$double[])
org.apache.commons.math.complex.ComplexUtilsTest.testSqrtRealZero()
org.apache.commons.math.estimation.MinpackTest.testMinpackOsborne2()
org.apache.commons.math.ode.DummyStepInterpolatorTest$BadStepInterpolator.<init>()
org.apache.commons.math.ode.HighamHall54IntegratorTest.testSwitchingFunctionsNoConvergence()
org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveAccuracySin()
org.apache.commons.math.complex.ComplexUtilsTest.testAsin()
org.apache.commons.math.analysis.LaguerreSolverTest.testQuadraticFunction()
org.apache.commons.math.stat.descriptive.rank.MinTest.testSpecialValues()
org.apache.commons.math.complex.ComplexTest.testAcos()
org.apache.commons.math.fraction.FractionTest.testIntValue()
org.apache.commons.math.optimization.MultiDirectionalTest.testPowell()
org.apache.commons.math.special.BetaTest.testRegularizedBetaPositivePositiveZero()
org.apache.commons.math.complex.ComplexTest.testAdd()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest$badPercentile.evaluate($double[])
org.apache.commons.math.util.DefaultTransformerTest.testTransformString()
org.apache.commons.math.complex.ComplexTest.testAsin()
org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoSuccesses()
org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest$1.reset()
org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.createDescriptiveStatistics()
org.apache.commons.math.ode.TestProblemHandler.reset()
org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testIllConditioned()
org.apache.commons.math.util.MathUtilsTest.testLcm()
org.apache.commons.math.stat.descriptive.ListUnivariateImpl.<init>($java.util.List)
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsAbstractTest.testToString()
org.apache.commons.math.stat.inference.TTestTest.setUp()
org.apache.commons.math.analysis.LaguerreSolverTest.testParameters()
org.apache.commons.math.ode.HighamHall54IntegratorTest$2.<init>($org.apache.commons.math.ode.HighamHall54IntegratorTest$org.apache.commons.math.ode.TestProblem1)
org.apache.commons.math.complex.ComplexTest.testAbs()
org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest$1.handleStep($org.apache.commons.math.ode.StepInterpolator$boolean)
org.apache.commons.math.stat.descriptive.SummaryStatisticsTest$sumMean.getResult()
org.apache.commons.math.complex.ComplexUtilsTest.testTanhNaN()
org.apache.commons.math.complex.ComplexUtilsTest.testTanNull()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.<init>($java.lang.String)
org.apache.commons.math.TestUtils.assertRelativelyEquals($double$double$double)
org.apache.commons.math.stat.descriptive.SummaryStatisticsAbstractTest.createSummaryStatistics()
org.apache.commons.math.ode.HighamHall54IntegratorTest$3.eventOccurred($double$double[])
org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSmallLastStep()
org.apache.commons.math.ode.StepNormalizerTest.testBoundaries()
org.apache.commons.math.analysis.PolynomialFunctionTest.testLinear()
org.apache.commons.math.special.BetaTest.testRegularizedBetaPositivePositivePositive()
org.apache.commons.math.complex.ComplexTest.testExp()
org.apache.commons.math.fraction.FractionTest.testFloatValue()
org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference()
org.apache.commons.math.analysis.RombergIntegratorTest.testQuinticFunction()
org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testIllegalArguments()
org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testIllegalArguments()
org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testNullIntervalCheck()
org.apache.commons.math.complex.ComplexUtilsTest.testTanhNull()
org.apache.commons.math.util.DefaultTransformerTest.testTransformBigDecimal()
org.apache.commons.math.stat.StatUtilsTest.testSumSq()
org.apache.commons.math.stat.inference.OneWayAnovaTest.setUp()
org.apache.commons.math.complex.ComplexUtilsTest.testPowNaNExponent()
org.apache.commons.math.complex.ComplexTest.testLogZero()
org.apache.commons.math.util.MathUtilsTest.testAddAndCheckLongFailure($long$long)
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest$subPercentile.<init>()
org.apache.commons.math.util.MathUtilsTest.testIndicatorInt()
org.apache.commons.math.ode.DormandPrince853IntegratorTest.testDimensionCheck()
org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.populationStandardDeviation($double[])
org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testKepler()
org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest.createDescriptiveStatistics()
org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testMismatch()
org.apache.commons.math.optimization.MultiDirectionalTest.testCostExceptions()
org.apache.commons.math.estimation.MinpackTest.testMinpackPowellSingular()
org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock()
org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSpecialValues()
org.apache.commons.math.special.BetaTest.testRegularizedBetaPositiveZeroPositive()
org.apache.commons.math.complex.ComplexTest.testCos()
org.apache.commons.math.stat.StatUtilsTest.testVariance()
org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexIllegalModulus()
org.apache.commons.math.geometry.RotationTest.testSingularities()
org.apache.commons.math.complex.ComplexUtilsTest.testCoshNaN()
org.apache.commons.math.util.MathUtilsTest.testIndicatorLong()
org.apache.commons.math.complex.ComplexUtilsTest.testSqrtImaginaryZero()
org.apache.commons.math.complex.ComplexTest.testSin()
org.apache.commons.math.complex.ComplexTest.testSqrtImaginaryZero()
org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBadParameters()
org.apache.commons.math.stat.descriptive.SummaryStatisticsAbstractTest.testEqualsAndHashCode()
org.apache.commons.math.stat.descriptive.rank.MinTest.testNaNs()
org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testInverseCumulativeProbabilities()
org.apache.commons.math.distribution.HypergeometricDistributionTest.testHypergeometricDistributionProbabilities($int$int$int$double[][])
org.apache.commons.math.distribution.TDistributionTest.testInverseCumulativeProbabilityExtremes()
org.apache.commons.math.complex.ComplexUtilsTest.testTanCritical()
org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function2()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest$Circle.getM()
org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFittingBadInit()
org.apache.commons.math.complex.ComplexTest.testSqrtInf()
org.apache.commons.math.stat.descriptive.SummaryStatisticsTest$sumMean.getN()
org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testBasicStats()
org.apache.commons.math.stat.inference.TTestTest.testOneSampleTTest()
org.apache.commons.math.random.EmpiricalDistributionTest.testGridTooFat()
org.apache.commons.math.complex.ComplexTest.testSqrtRealPositive()
org.apache.commons.math.complex.ComplexUtilsTest.testExpNull()
org.apache.commons.math.distribution.NormalDistributionTest.testQuantiles()
org.apache.commons.math.complex.ComplexTest.testCosh()
org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHomoscedastic()
org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSwitchingFunctions()
org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.suite()
org.apache.commons.math.complex.ComplexTest.testPowZero()
org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testSwitchingFunctions()
org.apache.commons.math.complex.ComplexTest.testAcosInf()
org.apache.commons.math.stat.descriptive.ListUnivariateImpl.addValue($double)
org.apache.commons.math.stat.StatUtilsTest.testDifferenceStats()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testInconsistentEquations()
org.apache.commons.math.ode.DormandPrince853IntegratorTest.testNoDenseOutput()
org.apache.commons.math.stat.descriptive.rank.MaxTest.testSpecialValues()
org.apache.commons.math.fraction.FractionFormatTest.testFormatImproperNegative()
org.apache.commons.math.complex.ComplexTest.testNegateNaN()
org.apache.commons.math.analysis.RiddersSolverTest.testSinFunction()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest$Circle$PointModel.getPartialDiY()
org.apache.commons.math.complex.ComplexTest.testTanCritical()
org.apache.commons.math.complex.ComplexTest.testDivideNaN()
org.apache.commons.math.analysis.SplineInterpolatorTest.verifyConsistency($org.apache.commons.math.analysis.PolynomialSplineFunction$double[])
org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient()
org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBracketCornerSolution()
org.apache.commons.math.fraction.FractionTest.testAbs()
org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.testSerialization()
org.apache.commons.math.util.MathUtilsTest.test0Choose0()
org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyInverseCumulativeProbabilities()
org.apache.commons.math.ode.TestProblemHandler.getMaximalTimeError()
org.apache.commons.math.stat.data.CertifiedDataAbstractTest.tearDown()
org.apache.commons.math.complex.ComplexTest.testSubtract()
org.apache.commons.math.complex.ComplexUtilsTest.testSinNull()
org.apache.commons.math.fraction.FractionTest.testDoubleConstructor()
org.apache.commons.math.fraction.FractionTest.testDoubleValue()
org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.suite()
org.apache.commons.math.analysis.TrapezoidIntegratorTest.testQuinticFunction()
org.apache.commons.math.analysis.SimpsonIntegratorTest.testParameters()
org.apache.commons.math.stat.inference.TestUtilsTest.testSmallSamples()
org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps()
org.apache.commons.math.random.ValueServerTest.testReplay()
org.apache.commons.math.ode.TestProblemHandler.getLastTime()
org.apache.commons.math.special.BetaTest.testRegularizedBetaPositiveNegativePositive()
org.apache.commons.math.stat.descriptive.rank.PercentileTest.test5()
org.apache.commons.math.ode.EulerIntegratorTest.testSmallStep()
org.apache.commons.math.TestUtils.assertRelativelyEquals($java.lang.String$double$double$double)
org.apache.commons.math.util.MathUtilsTest.testSignDouble()
org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyInverseCumulativeProbabilities()
org.apache.commons.math.util.DoubleArrayAbstractTest.testMinMax()
org.apache.commons.math.stat.StatUtilsTest.testMax()
org.apache.commons.math.stat.StatUtilsTest.testProduct()
org.apache.commons.math.stat.inference.OneWayAnovaTest.<init>($java.lang.String)
org.apache.commons.math.stat.regression.SimpleRegressionTest.testRandom()
org.apache.commons.math.complex.ComplexUtilsTest.testSqrtNull()
org.apache.commons.math.stat.descriptive.ListUnivariateImpl.setWindowSize($int)
org.apache.commons.math.ode.MidpointStepInterpolatorTest.testSerialization()
org.apache.commons.math.ode.DormandPrince853IntegratorTest$VariableHandler.handleStep($org.apache.commons.math.ode.StepInterpolator$boolean)
org.apache.commons.math.util.MathUtilsTest.testSinhNaN()
org.apache.commons.math.complex.ComplexTest.testAddInfinite()
org.apache.commons.math.analysis.MullerSolverTest.testSinFunction2()
org.apache.commons.math.ode.HighamHall54IntegratorTest$1.computeDerivatives($double$double[]$double[])
org.apache.commons.math.special.ErfTest.testErf1960()
org.apache.commons.math.analysis.BrentSolverTest.testSinZero()
org.apache.commons.math.estimation.MinpackTest.testMinpackBrownDennis()
org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testQRColumnsPermutation()
org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest$KeplerStepHandler.handleStep($org.apache.commons.math.ode.StepInterpolator$boolean)
org.apache.commons.math.complex.ComplexTest.testCosInf()
org.apache.commons.math.ode.FirstOrderConverterTest.testDecreasingSteps()
org.apache.commons.math.analysis.BisectionSolverTest.testSerialization()
org.apache.commons.math.random.ValueServerTest.testModes()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest$goodPercentile.evaluate($double[]$int$int)
org.apache.commons.math.random.EmpiricalDistributionTest.tstDoubleGen($double)
org.apache.commons.math.analysis.RiddersSolverTest.testExpm1Function()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsAbstractTest.testNewInstanceClassValid()
org.apache.commons.math.stat.inference.TestUtilsTest.<init>($java.lang.String)
org.apache.commons.math.complex.ComplexTest.testPowInf()
org.apache.commons.math.fraction.FractionFormatTest.testParse()
org.apache.commons.math.util.MathUtilsTest.testAddAndCheckLong()
org.apache.commons.math.util.MathUtilsTest.testNextAfter()
org.apache.commons.math.stat.StatUtilsTest.testSumLog()
org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNonInversible()
org.apache.commons.math.estimation.MinpackTest.testMinpackBrownAlmostLinear()
org.apache.commons.math.ode.DormandPrince54IntegratorTest$VariableHandler.handleStep($org.apache.commons.math.ode.StepInterpolator$boolean)
org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testNonInversible()
org.apache.commons.math.fraction.FractionTest.testReciprocal()
org.apache.commons.math.ode.HighamHall54IntegratorTest$2.resetState($double$double[])
org.apache.commons.math.complex.ComplexUtilsTest.testSqrtImaginaryNegative()
org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testSimplistic()
org.apache.commons.math.ode.HighamHall54IntegratorTest.testSwitchingFunctions()
org.apache.commons.math.analysis.NewtonSolverTest.testQuinticZero()
org.apache.commons.math.ode.ThreeEighthesIntegratorTest.suite()
org.apache.commons.math.transform.FastFourierTransformerTest.testSinFunction()
org.apache.commons.math.ode.DummyStepInterpolatorTest$BadStepInterpolator.doFinalize()
org.apache.commons.math.complex.ComplexTest.testAbsInfinite()
org.apache.commons.math.complex.ComplexUtilsTest.testTan()
org.apache.commons.math.ode.ThreeEighthesIntegratorTest$KeplerHandler.handleStep($org.apache.commons.math.ode.StepInterpolator$boolean)
org.apache.commons.math.special.ErfTest.testErf2807()
org.apache.commons.math.complex.ComplexUtilsTest.testPowInf()
org.apache.commons.math.random.EmpiricalDistributionTest.tstGen($double)
org.apache.commons.math.util.MathUtilsTest.testIndicatorFloat()
org.apache.commons.math.ode.DummyStepInterpolatorTest$ErrorGeneratingInterpolator.computeInterpolatedState($double$double)
org.apache.commons.math.fraction.FractionTest.testNegate()
org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.testSerialization()
org.apache.commons.math.random.RandomDataTest.testConfig()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest$Circle.getAllParameters()
org.apache.commons.math.transform.FastSineTransformerTest.testSinFunction()
org.apache.commons.math.complex.ComplexTest.testSubtractNaN()
org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testEvaluation()
org.apache.commons.math.random.ValueServerTest.testFill()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest$Circle.getY()
org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleT()
org.apache.commons.math.ode.TestProblemHandler.getMaximalValueError()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest$deepMean.evaluate($double[]$int$int)
org.apache.commons.math.optimization.NelderMeadTest$1.cost($double[])
org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testExpm1Function()
org.apache.commons.math.fraction.FractionTest.testAdd()
org.apache.commons.math.stat.inference.TestUtilsTest.testPaired()
org.apache.commons.math.util.MathUtilsTest.testSignLong()
org.apache.commons.math.complex.ComplexTest.testMultiply()
org.apache.commons.math.complex.ComplexUtilsTest.testExpNaN()
org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testSmallStep()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest$Circle.getMeasurements()
org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.<init>($java.lang.String)
org.apache.commons.math.estimation.GaussNewtonEstimatorTest.class$($java.lang.String)
org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.testSerialization()
org.apache.commons.math.analysis.NewtonSolverTest.testSinZero()
org.apache.commons.math.ConvergenceExceptionTest.testConstructorCause()
org.apache.commons.math.optimization.MultiDirectionalTest$1.cost($double[])
org.apache.commons.math.ode.DormandPrince853IntegratorTest$KeplerHandler.handleStep($org.apache.commons.math.ode.StepInterpolator$boolean)
org.apache.commons.math.transform.FastFourierTransformerTest.testParameters()
org.apache.commons.math.complex.ComplexUtilsTest.testCos()
org.apache.commons.math.complex.ComplexUtilsTest.testLogInf()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.suite()
org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareZeroCount()
org.apache.commons.math.complex.ComplexUtilsTest.testLog()
org.apache.commons.math.distribution.NormalDistributionTest.testSetStandardDeviation()
org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getTransformer()
org.apache.commons.math.util.MathUtilsTest.testSubAndCheckLong()
org.apache.commons.math.stat.data.CertifiedDataAbstractTest.getProperty($java.lang.Object$java.lang.String)
org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.testClone()
org.apache.commons.math.stat.descriptive.ListUnivariateImpl.<init>($java.util.List$org.apache.commons.math.util.NumberTransformer)
org.apache.commons.math.complex.ComplexTest.testEqualsTrue()
org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference()
org.apache.commons.math.ode.ContinuousOutputModelTest.setUp()
org.apache.commons.math.analysis.SplineInterpolatorTest.testIllegalArguments()
org.apache.commons.math.ode.DummyStepInterpolatorTest$BadStepInterpolator.<init>($double[]$boolean)
org.apache.commons.math.MathConfigurationExceptionTest.testConstructor()
org.apache.commons.math.complex.ComplexUtilsTest.testAcosNull()
org.apache.commons.math.util.MathUtilsTest.testMulAndCheckLong()
org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testIntegratorControls()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsAbstractTest.testSerialization()
org.apache.commons.math.complex.ComplexUtilsTest.testAsinNaN()
org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.testConstructor()
org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.testEqualsAndHashCode()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testOneSet()
org.apache.commons.math.complex.ComplexTest.<init>()
org.apache.commons.math.stat.descriptive.SummaryStatisticsAbstractTest.testStats()
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.<init>($java.lang.String)
org.apache.commons.math.estimation.MinpackTest.testMinpackBox3Dimensional()
org.apache.commons.math.complex.ComplexUtilsTest.testCosInf()
org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.testSerialization()
org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest$1.requiresDenseOutput()
org.apache.commons.math.complex.ComplexUtilsTest.testTanhInf()
org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getElement($int)
org.apache.commons.math.complex.ComplexTest.testTanNaN()
org.apache.commons.math.stat.FrequencyTest.testEmptyTable()
org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.testClone()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsAbstractTest.testGetSortedValues()
org.apache.commons.math.ode.DummyStepInterpolatorTest.testNoReset()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest$Circle.getPartialRadiusX()
org.apache.commons.math.complex.ComplexTest.testConjugateNaN()
org.apache.commons.math.TestUtils.assertContains($double[]$double$double)
org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getWindowSize()
org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSkewAndKurtosis()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest$LinearMeasurement.getParameters()
org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfect()
org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.suite()
org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArguments()
org.apache.commons.math.random.RandomDataTest.<init>($java.lang.String)
org.apache.commons.math.analysis.TrapezoidIntegratorTest.testParameters()
org.apache.commons.math.MaxIterationsExceededExceptionTest.testSimpleConstructor()
org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest$1.reset()
org.apache.commons.math.random.RandomDataTest.findSample($java.lang.Object[]$java.lang.Object[])
org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testProductAndGeometricMean()
org.apache.commons.math.complex.ComplexTest.testCoshInf()
org.apache.commons.math.ode.ContinuousOutputModelTest.testErrorConditions()
org.apache.commons.math.stat.descriptive.ListUnivariateImpl.<init>()
org.apache.commons.math.TestUtils.assertContains($java.lang.String$double[]$double$double)
org.apache.commons.math.MathExceptionTest.testPrintStackTrace()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.<init>($java.lang.String)
org.apache.commons.math.complex.ComplexUtilsTest.testPowNaNBase()
org.apache.commons.math.complex.ComplexTest.testSinhInf()
org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquare()
org.apache.commons.math.stat.descriptive.ListUnivariateImpl.setTransformer($org.apache.commons.math.util.NumberTransformer)
org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats()
org.apache.commons.math.complex.ComplexUtilsTest.testSqrt1z()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest$Circle.addPoint($double$double)
org.apache.commons.math.stat.descriptive.moment.VarianceTest.testPopulation()
org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest$BarTransformer.transform($java.lang.Object)
org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.class$($java.lang.String)
org.apache.commons.math.transform.FastSineTransformerTest.testAdHocData()
org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testDimensionCheck()
org.apache.commons.math.fraction.FractionFormatTest.testParseProperInvalidMinus()
org.apache.commons.math.stat.data.CertifiedDataAbstractTest.setUp()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testCircleFitting()
org.apache.commons.math.ode.HighamHall54IntegratorTest$3.<init>($org.apache.commons.math.ode.HighamHall54IntegratorTest$org.apache.commons.math.ode.TestProblem1)
org.apache.commons.math.complex.ComplexUtilsTest.testAtanInf()
org.apache.commons.math.complex.ComplexTest.testTanhNaN()
org.apache.commons.math.distribution.TDistributionTest.testCumulativeProbabilityAgaintStackOverflow()
org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting()
org.apache.commons.math.complex.ComplexTest.testExpNaN()
org.apache.commons.math.complex.ComplexTest.testDivideInfinite()
org.apache.commons.math.complex.ComplexTest.testAtanNaN()
org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess()
org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testMaxIterations()
org.apache.commons.math.complex.ComplexUtilsTest.testAcosNaN()
org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareZeroCount()
org.apache.commons.math.special.GammaTest.testRegularizedGammaNegativePositive()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest$goodPercentile.setQuantile($double)
org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsAbstractTest.testPercentiles()
org.apache.commons.math.complex.ComplexTest.testLogInf()
org.apache.commons.math.complex.ComplexUtilsTest.testSqrtRealNegative()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest$goodPercentile.<init>()
org.apache.commons.math.stat.StatUtilsTest.testStats()
org.apache.commons.math.MathExceptionTest.testConstructorCause()
org.apache.commons.math.ode.DormandPrince54IntegratorTest.testDimensionCheck()
org.apache.commons.math.complex.ComplexUtilsTest.testAsinNull()
org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testOneSet()
org.apache.commons.math.distribution.GammaDistributionTest.testInverseCumulativeProbabilityExtremes()
org.apache.commons.math.complex.ComplexUtilsTest.testSqrtNaN()
org.apache.commons.math.util.MathUtilsTest.testFactorialFail()
org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.suite()
org.apache.commons.math.stat.descriptive.SummaryStatisticsAbstractTest.<init>($java.lang.String)
org.apache.commons.math.ode.FirstOrderConverterTest.testSmallStep()
org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testSerialization()
org.apache.commons.math.ode.MidpointIntegratorTest.testDimensionCheck()
org.apache.commons.math.util.MathUtilsTest.testSignByte()
org.apache.commons.math.stat.inference.OneWayAnovaTest.class$($java.lang.String)
org.apache.commons.math.stat.StatUtilsTest.testGeometricMean()
org.apache.commons.math.stat.StatUtilsTest.testMean()
org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testSmallStep()
org.apache.commons.math.stat.FrequencyTest.testAdd()
